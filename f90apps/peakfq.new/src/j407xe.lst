Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 1
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

SUBROUTINE J407XE    Compiling Options: -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
       1 C
       2 C
       3 C
       4       SUBROUTINE   J407XE
       5      #                 ( IA1, IA3, PAUSE, EMAOPT, UPDATEFG )
       6 C
       7 C      + + + PURPOSE + + +
       8 C     This routine processes users input and options and controls
       9 C     processing for frequency analysis and output.
      10 C     J407 -- USGS-WRC FLOOD FREQUENCY ANALYSIS PER WRC BULL 17-B, 1981.
      11 C
      12 C     FOR CURRENT VERSION/REV-DATE, SEE SUBRTNE PRTPHD, FMT NO. 201/202.
      13 C     ALSO SEE SUBRTNE WCFAGB, FMT NO 1.
      14 C
      15 C     + + + HISTORY + + +
      16 C     VER 76.00 BY WKIRBY, WRD-NR, MAY 1976. (BULL.17)
      17 C     VER 2.0 BY WKIRBY, WRD-NR, APRIL 77.  (BULL.17-A)
      18 C     VER 3.0 BY WKIRBY, WRD-NR, MAY 1979.
      19 C     VER 3.7P - PRIME REVISIONS - K.FLYNN 12/83.
      20 C     VER 3.8P - WK 12/86,  7/88.
      21 C     SET ARGUMENTS = 0 FOR NON-ANNIE/NON-WDM USE
      22 C     VER 3.9P - WK, AML 12/88
      23 C     VER 3.9A-P - WK, AML 2/89
      24 C     MODIFIED 8/9/89 AML (deleted BLOCKDATA)
      25 C     Modified 6/93 AML to coding convention and add requirements
      26 C                       for distribution by Texas, changed to an
      27 C                       80 char/record print file, made Z,H,N,Y
      28 C                       input records optional 
      29 C     Updated for batch version of PEAKFQ, 9/03
      30 C     Paul Hummel of AQUA TERRA Consultants
      31 C
      32 C     + + + DUMMY ARGUMENTS + + +
      33       INTEGER   IA1, IA3, PAUSE, EMAOPT
      34       LOGICAL   UPDATEFG
      35 C
      36 C     + + + ARGUMENT DEFINITIONS + + +
      37 C     IA1    - Fortran unit number for message file
      38 C     IA3    - Fortran unit number for users WDM file
      39 C     PAUSE  - Indicator flag for pause between stations
      40 C              1 - yes, pause and wait for user response
      41 C              2 - no, display summary of results and continue
      42 C     EMAOPT - indicator flag for performing EMA analysis
      43 C              0 - no, just do traditional J407
      44 C              1 - yes, run EMA
      45 C     UPDATEFG - boolean to indicate type of run
      46 C                TRUE - run is just updating the spec file (don't do graphics)
      47 C                FALSE - full run
      48 C
      49 C     + + + PARAMETERS + + +
      50       INCLUDE 'pmxint.inc'
      51       INCLUDE 'pmxpk.inc'
      52 C
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 2
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
      53 C     + + + COMMON BLOCKS + + +
      54       INCLUDE 'cjobop.inc'
      55       INCLUDE 'clunit.inc'
      56       INCLUDE 'cstaid.inc'
      57 C
      58       COMMON/ HEADNS / HEADNG(9)
      59       CHARACTER*80   HEADNG
      60 C
      61       INCLUDE 'cj407.inc'
      62       INCLUDE 'cwcf0.inc'
      63       INCLUDE 'cwcf1.inc'
      64       INCLUDE 'cwcf2.inc'
      65 C
      66 C
      67 C      + + + LOCAL VARIABLES + + +
      68       INTEGER   IPKPTR(MXPK),  IQUAL(MXPK)
      69       REAL      FCXPG(MXINT)
      70       INTEGER   MAXPKS, IER, NFCXPG, JSEQNO,NPROC, NERR, NSKIP, NSTAYR,
      71      &          NSKIP1, NPKS, I, NPKPLT, 
      72      $          ISTART, HSTFLG, XPKS    
      73 Cprh     $      , SCLU, CNUM, CLEN, SGRP, MXLN, SCI, IWRT
      74 C
      75 C     + + + EQUIVALENCES + + +
      76       EQUIVALENCE  (IQUAL(1),IPKPTR(1))
      77 C
      78 C     + + + SAVES + + +
      79       SAVE   JSEQNO,  NFCXPG,  FCXPG
      80 C
      81 C     + + + FUNCTIONS + + +
      82       REAL   GAUSEX
      83 C
      84 C     + + + INTRINSICS + + +
      85       INTRINSIC  INT, MIN0, MAX0
      86 C
      87 C     + + + EXTERNALS + + +
      88       EXTERNAL   INPUT, PRTPHD, PRTINP, ALIGNP, PRTFIT
      89       EXTERNAL   OUTPUT, PLTFRQ, RUNEMA, WCFAGB
      90       EXTERNAL   SORTM, PRTIN2, PRTIN3, GAUSEX
      91 C
      92 C     + + + DATA INITIALIZATIONS + + +
      93       DATA  IER,  NFCXPG ,  JSEQNO
      94      $     /  0,   -777 ,     0    /
      95 C
      96 C     + + + FORMATS + + +
      97  1000 FORMAT(///' End PeakFQ analysis.'
      98      $         /'   Stations processed :',I8 
      99      $         /'   Number of errors   :',I8
     100      $         /'   Stations skipped   :',I8
     101      $         /'   Station years      :',I8//)
     102  2000 FORMAT('Data records may have been ignored ',
     103      $       'for the stations listed below.',
     104      $    /, '(Card type must be Y, Z, N, H, I, 2, 3, 4,  or *.)',
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 3
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     105      $    /, '(2, 4, and * records are ignored.)')
     106 C
     107 C     + + + END SPECIFICATIONS + + +
     108 C
     109 C     SUBROUTINES USED --
     110 C     INPUT   - READS INPUT DATA INTO J407.  USES INPUT2, PKFRD4.
     111 C               ALSO - INPUT1/ANNIE,  INPUT3/PKFQH3.
     112 C     J407VR - BLOCK DATA, VERSION NUMBER
     113 C     PRTPHD - PRINTS PAGE-HEADINGS
     114 C     PRTINP - PRINTS INPUT DATA LISTINGS
     115 C     ALIGNP - ALIGNS PROB-PLOT POSITIONS WITH DISCHARGES FOR PRINTING
     116 C     PRTFIT - PRINTS TABLE OF FITTED DISTRIBUTION
     117 C     OUTPUT - OUTPUTS RESULTS TO FILE.  USES OUTPT1/ANNIE AND --
     118 C     BCFPCH - PUNCHED OUTPUT IN USGS BASIN-CHAR FILE FMT.  DUMMY IN PRIME.
     119 C     PLTFRQ - FREQUENCY CURVE PLOT.  USES  FRQPLT, FRQPL...X.
     120 C     FRQPLT - FREQUENCY CURVE PRINTER-PLOT.  USES  J407P4, J407SC.
     121 C     WCFAGB  - DOES THE WRC FLOOD FREQUENCY CALCULATIONS.  USES ALL
     122 C               WCF... ROUTINES (WCFAPI ... WCFFCX) AND COMMONS
     123 C               WCFCM0,1,2. ALSO USES GAUSEX,STUTX,OUTKGB,HARTXX....
     124 C     WCFBDI - BLOCK DATA FOR WCFAGB.
     125 C
     126 C------------------------
     127 C
     128 C     maximum number of peaks
     129       MAXPKS = MXPK
     130 C
     131       WRITE(*,*) "J407XE:IA1:",IA1," INFORM:",INFORM," MSG1:",MSG1
     132 C     CHECK FOR REPEAT CALL FROM MAIN PGM
     133       IF( JSEQNO .LE. 0 .OR.  INFORM .GT. 0) THEN      
     134 C
     135         MSG = MSG1
     136 C
     137 C       PRINT J407 PAGE HEADER AT START OF JOB
     138         CALL PRTPHD( 0 , IWXMOD, EMAOPT, IA3 )
     139 C
     140 C       put general message about skipping records to scratch file
     141         WRITE(91,2000)
     142 C
     143         MSL = 2
     144         IF(IDEBUG.EQ.1) MSL = 4
     145         NOPPOS = 1 - (IPLTOP+IPPOS)
     146         WSKLAT=0.
     147         IF(ISKUDP.EQ.1)WSKLAT=0.10
     148         IF(ISKUDP.EQ.2)WSKLAT=0.01
     149         NOEPFC = NOXPA
     150         NOCLIM = NOCLM
     151 C
     152         NPROC  = 0
     153         NERR   = 0
     154         NSKIP  = 0
     155         NSTAYR = 0
     156         JSEQNO = 0
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 4
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     157       END IF
     158 C
     159 C     for ascii input need to reset start flag for 1st record read
     160       ISTART = 0
     161 C
     162   100 CONTINUE
     163         JSEQNO = JSEQNO + 1
     164         CALL PRTPHD( 1000 , JSEQNO, EMAOPT, IA3)
     165 C
     166         CALL INPUT (IA1,IA3,INFORM,MAXPKS,EMAOPT,IA3,IBCPUN,
     167      M              ISTART,
     168      O              STAID,PKS,IPKSEQ,XQUAL,IQUAL, 
     169      O              NHIST,NSYS,HISTPD,QHIOUT,QLWOUT,GAGEB,
     170      O              GENSKU,RMSEGS, IGSOPT, NSKIP1, IER )
     171 C
     172            write(*,*)'After INPUT, NSYS,NHIST',NSYS,NHIST
     173         NPKS=NHIST+NSYS
     174         NSTAYR=NSTAYR+NPKS
     175         NSKIP=NSKIP+NSKIP1
     176 C       count peaks to be skipped
     177         XPKS = 0
     178         DO 120 I = 1, NPKS
     179           IF (PKS(I) .LT. 0.0) XPKS = XPKS + 1
     180  120    CONTINUE
     181         IF(IER.GE.2) GO TO  970
     182         IF(NSKIP1.NE.0 )  THEN
     183            JSEQNO = JSEQNO + 1
     184 cprh       this call just creates a null page, messes up the page numbering
     185 cprh           CALL PRTPHD(  1000, JSEQNO, EMAOPT, IA3 )
     186         ENDIF
     187 C
     188         IGSOPT=MAX0(-1,MIN0(+1,IGSOPT))
     189         IF(IWXMOD.NE.0  .AND. RMSEGS.LE.0.) RMSEGS = RMSDGS
     190         STAID(79:90) = ' '
     191         IF(NHIST.GT.0 .OR. HISTPD.GT.0.) STAID(79:90) =
     192      $                                    '* HISTORIC *'
     193 C
     194 C       CALL  PRTPHD(  2001 , -999 )
     195         CALL  PRTINP( IDEBUG, XPKS, EMAOPT, IA3 )
     196 C
     197          write(*,*)'Debug Info for ',STAID
     198         CALL WCFAGB(PKS, PKLOG, WRCPP, SYSPP, NPKS, IER)
     199          write(*,*)'after WCFAGB, IER=',IER
     200 
     201         IF (EMAOPT.EQ.1) THEN
     202        write(*,*)
     203        write(*,*)'Running EMA for station ',STAID
     204        write(*,*)
     205        write(*,*)'calling RUNEMA: NPKS,NSYS,GENSKU,RMSEGS',
     206      $                            NPKS,NSYS,GENSKU,RMSEGS
     207           CALL RUNEMA(NPKS,PKS,IPKSEQ)
     208         END IF
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 5
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     209 
     210         IF(IER .GE. 3)  THEN
     211           NERR=NERR+1
     212           IF(MSL .LT. 4) CALL PRTIN2 ( 1 ,MSG, NPKS, IPKSEQ,PKS,XQUAL,
     213      $                                 EMAOPT, IA3 )
     214         ELSE
     215           NPROC=NPROC+1
     216 C
     217 C         PRINT FITTED LOG-PEARSON TYPE III FREQUENCY CURVES PARAMETERS
     218 C                                                   AND ORDINATES
     219           CALL PRTFIT ( IDEBUG, EMAOPT, IA3 )
     220 C
     221 Ckmf      moved call to output to after plot so that the plot will
     222 Ckmf      be drawn before the output is displayed.  When pause
     223 Ckmf      was added, it caused the plot to display after the
     224 Ckmf      summary statistics were cleared from the screen, making
     225 Ckmf      it appear as if the plot went with the next station
     226 Ckmf      IF(IBCPUN.EQ.1) CALL OUTPUT(STAID,SYSUAV,SYSUSD,SYSSKW,
     227 Ckmf $        WRCUAV,WRCUSD,WRCSKW,WRCFC ,  INT(HISTPN+.5), NSYS,
     228 Ckmf $        IBCPUN, IPUNCH,  IA1,IA3, PAUSE )
     229 C
     230           IF(IPLTOP.NE.0 .OR. (IPPOS*IPRTOP.NE.0)) THEN      
     231 C
     232 C           sort input peak logs and correlate with plotting positions
     233             CALL SORTM( PKLOG, IPKPTR, 1, -1, NPKS )
     234             IF(NHIST.GT.0) CALL ALIGNP(IPKPTR,IPKSEQ,NPKS,NHIST,SYSPP)
     235 C
     236 C           print input data and plotting positions
     237             IF(IPRTOP .NE. 0 )  THEN      
     238               IF(IPPOS.EQ.0) THEN
     239 C               short output
     240                 CALL PRTIN2(0,MSG,NPKS,IPKSEQ,PKS,XQUAL,EMAOPT,IA3)
     241               ELSE
     242 C               longer output
     243                 CALL PRTIN3 (MSG,NPKS,IPKSEQ,PKS,XQUAL,
     244      $                       GAGEB, IPKPTR, SYSPP, WRCPP, WEIBA,
     245      $                       EMAOPT, IA3)
     246               END IF
     247             END IF    
     248 C
     249             IF(IPLTOP.NE.0)  THEN
     250 C             initialize (if necessary)
     251               IF(NFCXPG.LE.0) THEN
     252 Cprh                DO 170 I = 1,31
     253                 DO 170 I = 1,MXINT
     254                   FCXPG(I) = GAUSEX(TXPROB(I))
     255   170           CONTINUE
     256                 NFCXPG = INDX2 - INDX1 + 1
     257               ENDIF
     258               NPKPLT=NHIST+NSYS-NBGB
     259 C             convert to std deviates
     260               DO 190 I=1,NPKPLT
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 6
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     261                 SYSPP(I)=GAUSEX(SYSPP(I))
     262                 WRCPP(I)=GAUSEX(WRCPP(I))
     263   190         CONTINUE
     264 C             set flag to plot historic adjusted peaks, 0-y,1-n
     265 C             Note:  When qhiout > .01 and histpd <= .05,
     266 C                    the historic adjusted peaks are plotted,
     267 C                    however, they will equal the systematic
     268 C                    peaks becaus they have not actually been
     269 C                    adjusted.  They are plotted like this as
     270 C                    a warning to the user, Is it appropriate
     271 C                    to have a high-outlier discharge threshold
     272 C                    when you don't have a lenght of historical
     273 C                    period?
     274               IF (QHIOUT .LE. 0.01 .AND. HISTPD .LE. 0.5) THEN
     275 C               don't plot historic adjusted peaks
     276                 HSTFLG = 1
     277               ELSE
     278 C               do plot historic adjusted peaks
     279                 HSTFLG = 0
     280               END IF
     281               IF (.NOT.UPDATEFG) THEN
     282               CALL PLTFRQ( MSG, HEADNG, IPLTOP, GRFMT,
     283      $                NPKPLT, PKLOG, SYSPP, WRCPP, WEIBA,
     284      $                SYSRFC(INDX1),WRCFC(INDX1),FCXPG(INDX1),NFCXPG,
     285      $                IWXMOD,HSTFLG,
     286      $                NOCLIM, CLIML(INDX1), CLIMU(INDX1), JSEQNO )
     287               END IF
     288             ENDIF
     289           END IF
     290 Ckmf      relocated output so in sync with graphics
     291           IF(IBCPUN.GT.0) THEN
     292 C           output statistics to wdm (1 or 3) and/or watstore 2 or 3)
     293 C           summary screen output if pause=1
     294             CALL OUTPUT (STAID,SYSUAV,SYSUSD,SYSSKW,
     295      $                   WRCUAV,WRCUSD,WRCSKW,WRCFC ,
     296      $                   INT(HISTPN+.5), NSYS,
     297      $                   IBCPUN, IPUNCH,  IA1,IA3, PAUSE )
     298           ELSE IF (INFORM .EQ. 1  .AND.  PAUSE .EQ. 1) THEN
     299 C           no output statistics, but summary screen for wdm input
     300 Cprh            CALL OUTPT2 ( STAID, WRCUAV, WRCUSD, WRCSKW, WRCFC, IA1 )
     301           END IF
     302         END IF
     303 C
     304         IF (INFORM .EQ. 2  .AND.  PAUSE .EQ. 1) THEN
     305 C         ascii input and pause between statTions, stats to screen
     306 Cprh          CALL OUTPT2 ( STAID, WRCUAV, WRCUSD, WRCSKW, WRCFC,
     307 Cprh     I                  IA1 )
     308         END IF
     309 Ckf     IF (INFORM .EQ. 2 .AND. IMODFG .EQ. 1) THEN
     310 C         tell user completed, if ascii file
     311 Ckf       SCLU = 121
     312 Ckf       SGRP = 69
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 7
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     313 Ckf       MXLN = 10
     314 Ckf       SCI = 1
     315 Ckf       IWRT = 0
     316 Ckf       CNUM = 1
     317 Ckf       CLEN = 76
     318 Ckf       CALL PMXTXA (IA1,SCLU,SGRP,MXLN,SCI,IWRT,CNUM,CLEN,
     319 Ckf  $                 HEADNG(9)(1:76))
     320 Ckf     END IF
     321 C
     322 Cprh        IF (IER .EQ. 3) THEN
     323 CprhC         tell user aborted                    
     324 Cprh          SCLU = 121
     325 Cprh          SGRP = 75
     326 Cprh          MXLN = 10
     327 Cprh          SCI = 1
     328 Cprh          IWRT = 0
     329 Cprh          CNUM = 1
     330 Cprh          CLEN = 76
     331 Cprh          CALL PMXTXA (IA1,SCLU,SGRP,MXLN,SCI,IWRT,CNUM,CLEN,
     332 Cprh     $                 HEADNG(9)(1:76))
     333 Cprh        END IF
     334 C
     335         IF(INFORM .LE. 0)  RETURN
     336       GO TO 100
     337 C
     338   970 CONTINUE
     339       WRITE(MSG,1000) NPROC,NERR,NSKIP,NSTAYR
     340 C
     341       RETURN
     342       END
Bytes of stack required for this program unit: 96.


--------------------------------------------------  Symbol Cross Reference  ---------------------------------------------------
Name (Type)           Class          Offset     Context  (d-DO, =-Assignment, /-Initialization, i-Input, o-Output, p-Pointer,
                                                         r-Argument, s-Specification, u-Usage)
-------------------------------------------------------------------------------------------------------------------------------
ALIGNP                SUBROUTINE                   88u     234u
ALLSOM (INTEGER)      scalar         44         (I1)4s   (I1)7s
BIGLOG (REAL)         scalar         316        (I2)4s  (I2)12s
CLIML (REAL)          array          256        (I3)2s   (I3)4s     286r     282r     282r
CLIMU (REAL)          array          384        (I3)3s   (I3)5s     286r     282r     282r
CLSIZE (REAL)         scalar         40         (I2)3s  (I2)11s
CPAMP1 (REAL)         scalar         344        (I2)6s  (I2)14s
CPAMP2 (REAL)         scalar         348        (I2)6s  (I2)14s
CPAMP3 (REAL)         scalar         352        (I2)6s  (I2)14s
DOSTA (CHARACTER)     array          48         (I1)4s   (I1)9s
EMAOPT (INTEGER)      scalar                        5s      33s     138r     138r     138r     164r     164r     164r     166r
                                                  166r     166r     195r     195r     195r     201u     213r     212r     212r
                                                  219r     219r     219r     240r     240r     240r     245r     243r     243r
EPFC (REAL)           array          128        (I3)2s   (I3)4s
EPS1 (REAL)           scalar         320        (I2)5s  (I2)13s
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 8
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
EPS2 (REAL)           scalar         324        (I2)5s  (I2)13s
FCXPG (REAL)          array                        69s      79s     254=     284r     282r     282r
GAGEB (REAL)          scalar         12         (I4)2s  (I4)10s     169r     166r     166r     244r     243r     243r
GAUSEX                FUNCTION                     82s      90u     254u     261u     262u
GENSKU (REAL)         scalar         0          (I4)2s  (I4)10s     170r     166r     166r     206o
GRFMT (CHARACTER)     scalar         348        (I1)4s   (I1)8s     282r     282r     282r
GSKWGT (REAL)         scalar         108        (I4)6s  (I4)10s
GSMAX (REAL)          scalar         32         (I2)3s  (I2)11s
GSMIN (REAL)          scalar         28         (I2)3s  (I2)11s
HEADNG (CHARACTER)    array          0             58s      59s     282r     282r     282r
HISTPD (REAL)         scalar         28         (I4)3s  (I4)10s     169r     166r     166r     191u     274u
HISTPN (REAL)         scalar         100        (I4)6s  (I4)10s     296u
HISTWT (REAL)         scalar         104        (I4)6s  (I4)10s
HRECWO (REAL)         scalar         328        (I2)5s  (I2)13s
HRECWS (REAL)         scalar         336        (I2)5s  (I2)13s
HRECWX (REAL)         scalar         332        (I2)5s  (I2)13s
HSTFLG (INTEGER)      scalar                       72s     276=     279=     285r     282r     282r
I (INTEGER)           scalar                       71s     179u     254u     254u     261u     261u     262u     262u
IA1 (INTEGER)         scalar                        5s      33s     131o     166r     166r     166r     297r     294r     294r
IA3 (INTEGER)         scalar                        5s      33s     138r     138r     138r     164r     164r     164r     166r
                                                  166r     166r     166r     166r     166r     195r     195r     195r     213r
                                                  212r     212r     219r     219r     219r     240r     240r     240r     245r
                                                  243r     243r     297r     294r     294r
IBCPUN (INTEGER)      scalar         4          (I1)2s   (I1)5s     166r     166r     166r     291u     297r     294r     294r
IDEBUG (INTEGER)      scalar         12         (I1)2s   (I1)5s     144u     195r     195r     195r     219r     219r     219r
IER (INTEGER)         scalar                       70s      93/     170r     166r     166r     181u     198r     198r     198r
                                                  199o     210u
IGSOPT (INTEGER)      scalar         4          (I4)2s   (I4)9s     170r     166r     166r     188r     188r     188=
IMODFG (INTEGER)      scalar         40         (I1)4s   (I1)7s
INCRD (INTEGER)       scalar         4          (I5)2s   (I5)3s
INDX1 (INTEGER)       scalar         44         (I2)4s   (I2)9s     256u     284u     284u     284u     286u     286u
INDX2 (INTEGER)       scalar         48         (I2)4s   (I2)9s     256u
INDXPT (INTEGER)      array          56         (I2)4s   (I2)9s
INFIL2 (INTEGER)      scalar         12         (I5)2s   (I5)3s
INFORM (INTEGER)      scalar         16         (I5)2s   (I5)3s     131o     133u     166r     166r     166r     298u     304u
                                                  335u
INPUT                 SUBROUTINE                   88u     166u
IPKPTR (INTEGER)      array          0             68s      76u     233r     233r     233r     234r     234r     234r     244r
                                                  243r     243r
IPKSEQ (INTEGER)      array          1600       (I6)2s   (I6)6s     168r     166r     166r     207r     207r     207r     212r
                                                  212r     212r     234r     234r     234r     240r     240r     240r     243r
                                                  243r     243r
IPLTOP (INTEGER)      scalar         0          (I1)2s   (I1)5s     145u     230u     249u     282r     282r     282r
IPPOS (INTEGER)       scalar         16         (I1)2s   (I1)5s     145u     230u     238u
IPRTOP (INTEGER)      scalar         8          (I1)2s   (I1)5s     230u     237u
IPUNCH (INTEGER)      scalar         8          (I5)2s   (I5)3s     297r     294r     294r
IQUAL (INTEGER)       array          0             68s      76u     168r     166r     166r
ISKUDP (INTEGER)      scalar         20         (I1)3s   (I1)6s     147u     148u
ISTART (INTEGER)      scalar                       72s     160=     167r     166r     166r
IWXMOD (INTEGER)      scalar         372        (I2)7s  (I2)10s     138r     138r     138r     189u     285r     282r     282r
J407XE                SUBROUTINE                    4s
JOBTTL (CHARACTER)    scalar         0         (I1)11s  (I1)12s
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 9
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
JSEQNO (INTEGER)      scalar                       70s      79s      93/     133u     156=     163u     163=     164r     164r
                                                  164r     183u     183=     286r     282r     282r
MAXPKS (INTEGER)      scalar                       70s     129=     166r     166r     166r
MOROPT (INTEGER)      array          32         (I1)3s   (I1)6s
MSG (INTEGER)         scalar         0          (I2)2s   (I2)8s     135=     212r     212r     212r     240r     240r     240r
                                                  243r     243r     243r     282r     282r     282r     339o
MSG1 (INTEGER)        scalar         0          (I5)2s   (I5)3s     131o     135u
MSL (INTEGER)         scalar         4          (I2)2s   (I2)8s     143=     144=     212u
MXINT (INTEGER)       scalar                    (I7)1s   (I7)2s   (I2)9u  (I2)12u  (I4)12u   (I3)4u   (I3)4u   (I3)4u   (I3)5u
                                                (I3)5u      69u     253u
MXPK (INTEGER)        scalar                    (I8)1s   (I8)2s   (I6)2u   (I6)2u   (I6)2u   (I6)3u   (I6)3u   (I6)8u      68u
                                                   68u     129u
NBGB (INTEGER)        scalar         84         (I4)5s   (I4)9s     258u
NERR (INTEGER)        scalar                       70s     153=     211u     211=     339o
NFCXPG (INTEGER)      scalar                       70s      79s      93/     251u     256=     284r     282r     282r
NHIOUT (INTEGER)      scalar         92         (I4)5s   (I4)9s
NHIST (INTEGER)       scalar         24         (I4)2s   (I4)9s     169r     166r     166r     172o     173u     191u     234u
                                                  234r     234r     234r     258u
NHISTN (INTEGER)      scalar         96         (I4)5s   (I4)9s
NINDX (INTEGER)       scalar         52         (I2)4s   (I2)9s
NLWOUT (INTEGER)      scalar         88         (I4)5s   (I4)9s
NMISS (INTEGER)       scalar         76         (I4)5s   (I4)9s
NOCLIM (INTEGER)      scalar         24         (I2)2s   (I2)8s     150=     286r     282r     282r
NOCLM (INTEGER)       scalar         28         (I1)3s   (I1)6s     150u
NOEPFC (INTEGER)      scalar         20         (I2)2s   (I2)8s     149=
NOPPOS (INTEGER)      scalar         8          (I2)2s   (I2)8s     145=
NOSYS (INTEGER)       scalar         16         (I2)2s   (I2)8s
NOTRAN (INTEGER)      scalar         12         (I2)2s   (I2)8s
NOXPA (INTEGER)       scalar         24         (I1)3s   (I1)6s     149u
NPKPLT (INTEGER)      scalar                       71s     258=     260u     283r     282r     282r
NPKS (INTEGER)        scalar                       71s     173=     174u     178u     198r     198r     198r     206o     207r
                                                  207r     207r     212r     212r     212r     233r     233r     233r     234r
                                                  234r     234r     240r     240r     240r     243r     243r     243r
NPROC (INTEGER)       scalar                       70s     152=     215u     215=     339o
NSKIP (INTEGER)       scalar                       70s     154=     175u     175=     339o
NSKIP1 (INTEGER)      scalar                       71s     170r     166r     166r     175u     182u
NSTAYR (INTEGER)      scalar                       70s     155=     174u     174=     339o
NSYS (INTEGER)        scalar         80         (I4)5s   (I4)9s     169r     166r     166r     172o     173u     206o     258u
                                                  296r     294r     294r
OUTPUT                SUBROUTINE                   89u     294u
PAUSE (INTEGER)       scalar                        5s      33s     297r     294r     294r     298u     304u
PKLOG (REAL)          array          800        (I6)2s   (I6)4s     198r     198r     198r     233r     233r     233r     283r
                                                  282r     282r
PKS (REAL)            array          0          (I6)2s   (I6)4s     168r     166r     166r     179u     198r     198r     198r
                                                  207r     207r     207r     212r     212r     212r     240r     240r     240r
                                                  243r     243r     243r
PLTFRQ                SUBROUTINE                   89u     282u
PRTFIT                SUBROUTINE                   88u     219u
PRTIN2                SUBROUTINE                   90u     212u     240u
PRTIN3                SUBROUTINE                   90u     243u
PRTINP                SUBROUTINE                   88u     195u
PRTPHD                SUBROUTINE                   88u     138u     164u
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 10
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
QHIOUT (REAL)         scalar         20         (I4)2s  (I4)11s     169r     166r     166r     274u
QLWOUT (REAL)         scalar         16         (I4)2s  (I4)11s     169r     166r     166r
RMSDGS (REAL)         scalar         340        (I2)6s  (I2)14s     189u
RMSEGS (REAL)         scalar         8          (I4)2s  (I4)10s     170r     166r     166r     189u     189=     206o
RUNEMA                SUBROUTINE                   89u     207u
SIGHOT (REAL)         scalar         360        (I2)7s  (I2)15s
SIGLOT (REAL)         scalar         356        (I2)7s  (I2)15s
SORTM                 SUBROUTINE                   90u     233u
SPCFUN (INTEGER)      scalar         20         (I5)2s   (I5)3s
STAID (CHARACTER)     scalar         0          (I9)2s   (I9)3s     168r     166r     166r     190=     191=     197o     197o
                                                  203o     203o     294r     294r     294r
SUMH (REAL(kind 8))   array          176        (I4)8s  (I4)15s
SUMS (REAL(kind 8))   array          152        (I4)8s  (I4)15s
SYSAAV (REAL)         scalar         132        (I4)7s  (I4)11s
SYSASD (REAL)         scalar         136        (I4)7s  (I4)11s
SYSASK (REAL)         scalar         140        (I4)7s  (I4)11s
SYSBAS (REAL)         scalar         112        (I4)6s  (I4)11s
SYSMAX (REAL)         scalar         148        (I4)8s  (I4)11s
SYSMIN (REAL)         scalar         144        (I4)8s  (I4)12s
SYSPAB (REAL)         scalar         116        (I4)6s  (I4)12s
SYSPP (REAL)          array          2400       (I6)3s   (I6)5s     198r     198r     198r     234r     234r     234r     244r
                                                  243r     243r     261r     261r     261r     261=     283r     282r     282r
SYSRFC (REAL)         array          512        (I3)3s   (I3)5s     284r     282r     282r
SYSSKW (REAL)         scalar         128        (I4)7s  (I4)12s     294r     294r     294r
SYSUAV (REAL)         scalar         120        (I4)6s  (I4)12s     294r     294r     294r
SYSUSD (REAL)         scalar         124        (I4)7s  (I4)12s     294r     294r     294r
TXPROB (REAL)         array          184        (I2)4s  (I2)12s     254r     254r     254r
UPDATEFG (LOGICAL)    scalar                        5s      34s     281u
WCFAGB                SUBROUTINE                   89u     198u
WCXAUX (REAL)         array          364        (I2)7s  (I2)15s
WEIBA (REAL)          scalar         36         (I2)3s  (I2)11s     244r     243r     243r     283r     282r     282r
WORK (REAL)           array          200        (I4)8s  (I4)12s
WRCAAV (REAL)         scalar         52         (I4)4s  (I4)13s
WRCASD (REAL)         scalar         56         (I4)4s  (I4)13s
WRCASK (REAL)         scalar         60         (I4)4s  (I4)13s
WRCBAS (REAL)         scalar         32         (I4)3s  (I4)13s
WRCFC (REAL)          array          0          (I3)2s   (I3)4s     284r     282r     282r     295r     294r     294r
WRCHHB (REAL)         scalar         64         (I4)4s  (I4)13s
WRCHOT (REAL)         scalar         68         (I4)4s  (I4)13s
WRCLOW (REAL)         scalar         72         (I4)5s  (I4)13s
WRCPAB (REAL)         scalar         36         (I4)3s  (I4)14s
WRCPP (REAL)          array          3200       (I6)3s   (I6)5s     198r     198r     198r     244r     243r     243r     262r
                                                  262r     262r     262=     283r     282r     282r
WRCSKW (REAL)         scalar         48         (I4)4s  (I4)14s     295r     294r     294r
WRCUAV (REAL)         scalar         40         (I4)3s  (I4)14s     295r     294r     294r
WRCUSD (REAL)         scalar         44         (I4)4s  (I4)14s     295r     294r     294r
WSKLAT (REAL)         scalar         312        (I2)4s  (I2)12s     146=     147=     148=
XPKS (INTEGER)        scalar                       72s     177=     179u     179=     195r     195r     195r
XQUAL (CHARACTER)     array          0          (I6)8s   (I6)9s     168r     166r     166r     212r     212r     212r     240r
                                                  240r     240r     243r     243r     243r
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 11
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------


--------------------------------------------------  Label Cross Reference  ----------------------------------------------------
Label  Context  (d-DO, =-ASSIGN, f-FORMAT, g-GOTO, i-IF statement, s-Specification, r-Argument)
-------------------------------------------------------------------------------------------------------------------------------
100         162s     336g
1000         97s     339f
120         178d     180s
170         253d     255s
190         260d     263s
2000        102s     141f
970         181g     338s
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 12
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

SUBROUTINE PRTPHD    Compiling Options: -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     343 C
     344 C
     345 C
     346       SUBROUTINE   PRTPHD
     347      #                  ( II , IARG2, EMAOPT, WDMSFL )
     348 C
     349 C     + + + PURPOSE + + +
     350 C     PRINTS PAGE HEADINGS FOR J407 / BULLETIN 17.
     351 C
     352 C     + + + HISTORY + + +
     353 C     Updated 9/03 for batch version of PEAKFQ,
     354 C     Most common blocks now found in include files,
     355 C     Replaced MSG with MSG1 as declared in include file clunit.inc,
     356 C     Removed reference to JBOPT (equivalenced to IPLTOP) - not used
     357 C     Paul Hummel, AQUA TERRA Consultants
     358 C
     359 C     + + + DUMMY ARGUMENTS + + +
     360       INTEGER   II, IARG2, EMAOPT, WDMSFL
     361 C
     362 C     + + + ARGUMENT DEFINITIONS + + +
     363 C     II     - <= 0 - print initial header
     364 C              1000 - print page header
     365 C              2001 - print station id / header
     366 C              3000 - print header for list of peaks
     367 C     IARG2  - sequence number of station in input
     368 C     EMAOPT - indicator flag for performing EMA analysis
     369 C              0 - no, just do traditional J407
     370 C              1 - yes, run EMA
     371 C     WDMSFL - FORTRAN unit number for input WDM file
     372 C
     373 C     + + + COMMON BLOCKS + + +
     374       COMMON / HEADNS /  HEAD1, HEAD2, HEAD3, HEAD4, HEAD5,
     375      $                   HEAD6, HEAD7, HEAD8, HEAD9
     376       CHARACTER*80     HEAD1, HEAD2, HEAD3, HEAD4, HEAD5,
     377      $                 HEAD6, HEAD7, HEAD8, HEAD9
     378       CHARACTER*80  HEADNG(9), HEAD14(6)
     379       EQUIVALENCE  (HEADNG(1), HEAD14(1), HEAD1)
     380 C
     381       INCLUDE 'cstaid.inc'
     382       INCLUDE 'cjobop.inc'
     383 Cprh  don't see anywhere JBOPT is used
     384 Cprh      INTEGER   JBOPT(8)
     385 Cprh      EQUIVALENCE (JBOPT(1),IPLTOP)
     386 C
     387       INCLUDE 'clunit.inc'
     388 C
     389 C     + + + LOCAL VARIABLES + + +
     390       CHARACTER*1  BLANK
     391 C     INTEGER   JDATE(3)
     392       INTEGER   I, L70,L15,L48,L80,LOC,L10
     393 C     INTEGER   JTIME, ERRCOD, OLEN
     394       CHARACTER*3  CPRTOP(2), CDEBUG(2)
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 13
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     395       CHARACTER*18 CPLTOP(4)
     396       CHARACTER*14 CBCPUN(4)
     397       CHARACTER*5  CIPPOS(2)
     398       CHARACTER*20 CNFORM(3)
     399       CHARACTER*80 FNAME
     400       CHARACTER*1  HEADA9(80), CSTA(10)
     401       CHARACTER*16 CHDTTM
     402 C
     403 C     + + + SAVES + + +
     404       SAVE  DISCLM, DT,STAIND,PAGIND
     405       CHARACTER*80  DISCLM(2)
     406       INTEGER       DT(6),STAIND,PAGIND
     407 C
     408 C     + + + FUNCTIONS + + +
     409       INTEGER   LENSTR, CKNBLV
     410 C
     411 C     + + + EXTERNALS + + +
     412 C     EXTERNAL    DATTIM, ZIPC
     413       EXTERNAL    SYDATM, DATLST, LENSTR, CARVAR, CVARAR, CHRCHR, CKNBLV
     414 C
     415 C      + + + DATA INITIALIZATIONS + + +
     416       DATA BLANK / ' ' /, L15,L48,L70,L80,L10/15,48,70,80,10/
     417       DATA CPLTOP/'None','Graphics device','Line printer',
     418      $            'Graphics & Printer'/
     419       DATA CBCPUN/'None','WDM','WATSTORE','Both'/
     420       DATA CPRTOP/'No','Yes'/             
     421       DATA CDEBUG/'No','Yes'/
     422       DATA CIPPOS/'Short','Long'/
     423       DATA CNFORM/'WDM file            ','WATSTORE peak file',
     424      $            'Log-Pearson records'/
     425       DATA CSTA  /'S','t','a','t','i','o','n',' ','-',' '/
     426       DATA STAIND,PAGIND/0,0/
     427 C
     428 C     + + + FORMATS + + +
     429 C 101 FORMAT(///' EXECUTION BEGINNING AT DATE, TIME =',I5,2(1H/,I2),I7
     430 C    &       //)
     431 C 100 FORMAT(  28X,21A1)
     432   101 FORMAT(/,23X,' --- PROCESSING DATE/TIME ---',
     433      $      //,28X,21A1)
     434   102 FORMAT(/,24X,' --- PROCESSING OPTIONS ---  ',
     435      $      //,19X,'   Plot option         = ',A 
     436      $       /,19X,'   Basin char output   = ',A 
     437      $       /,19X,'   Print option        = ',A 
     438      $       /,19X,'   Debug print         = ',A 
     439      $       /,19X,'   Input peaks listing = ',A 
     440      $       /,19X,'   Input peaks format  = ',A,/)
     441 C    $ ' IPLTOP   IBCPUN  IPRTOP   IDEBUG   IPPOS   ISKUDP   NOXPA',
     442 C    $  '  NOCLM  INFORM '/ 9I8//)
     443 C 103 FORMAT( /' Input format =',I4,'  ANNIE/WDM     FILE RETRIEVAL',
     444 C    $  2A1,T21,66X,T21,     '  WATSTORE PEAK-FILE CARDS       ',
     445 C    $  1A1,T21,66X,T21,    '  LOG-PEARSON CARDS              ' )
     446   110 FORMAT(19X,'   Input files used:')
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 14
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     447   111 FORMAT(19X,'      peaks (WDM)    - ',A)
     448   112 FORMAT(19X,'      peaks (ascii)  - ',A)
     449   113 FORMAT(19X,'      specifications - ',A)
     450   114 FORMAT(19X,'   Output file(s): ',/
     451      $       19X,'      main - ',A)
     452   115 FORMAT(19X,'      bcd  - ',A)
     453   199 FORMAT( '1' )
     454   200 FORMAT('  ')
     455   201 FORMAT( 2X,'Program PeakFq',11X,'U. S. GEOLOGICAL SURVEY',
     456      $       13X,'Seq.',I3.3,'.',I3.3 )
     457 Cprh 202 FORMAT( 21X, 'OFFICE OF SURFACE WATER, RESTON, VA' )
     458   202 FORMAT( 2X,'Ver. 5.1',
     459      $       12X,'Annual peak flow frequency analysis',
     460      $        6X,'Run Date / Time' )
     461 Cprh 203 FORMAT( 21X, 'ANNUAL PEAK FLOW FREQUENCY ANALYSIS' )
     462   203 FORMAT( 2X,'02/01/2007',
     463      $       10X,'following Bulletin 17-B Guidelines',7X,A)
     464   213 FORMAT( 2X,'05/06/2005',
     465      $        9X,'using Expected Moments Algorithm (EMA)',4X,A )
     466 Cprh 204 FORMAT( 21X, 'Following Bulletin 17-B Guidelines' )
     467 Cprh 205 FORMAT( 21X, '          Program peakfq    ' )
     468   205 FORMAT(12X,'WARNING:  For experimental use only, EMA is not the')
     469   206 FORMAT(22X,'standard method for flood frequency analysis.')
     470 Cprh 206 FORMAT( 21X, '     (Version 4.1, February, 2002)' )
     471   207 FORMAT( 20X, A40 )
     472   227 FORMAT(A16)
     473   208 FORMAT( ' ',2A1,T1,5('   *** EXPERIMENTAL ***   ')  )
     474 C 209 FORMAT(2X, A10, A15, 2X, A48)
     475   301 FORMAT(  2X, '*********  NOTICE  --  Preliminary machine ',
     476      $             'computations.        *********' )
     477   302 FORMAT(  2X, '*********  User responsible for assessment ',
     478      $             'and interpretation.  *********' )
     479   401 FORMAT(  2X, '*********  WARNING  --  Experimental ',
     480      $             'modification of 17B calculations  *********' )
     481   402 FORMAT(  2X, '***************    User is responsible for ',
     482      $             'assessment and interpretation.    *********' )
     483   501 FORMAT(   '1', /, (A) )
     484   502 FORMAT(   80A1 )
     485   503 FORMAT(///, A, /, A, / )
     486   504 FORMAT(  /, A, /, A, / )
     487 
     488   600 FORMAT( A,'Bulletin 17B analysis run ',21A1)
     489   601 FORMAT( A,'EMA analsis run ',21A1)
     490   700 FORMAT(I2.2,'/',I2.2,'/',I4,I3.2,':',I2.2)
     491 C
     492 C     + + + END SPECIFICATIONS + + +
     493 C
     494       IF( II .LE. 0 )  THEN
     495 C       PRINT INITIAL PAGE, DETERMINE DATE AND TIME.
     496 C       CALL DATTIM( JDATE, JTIME )
     497 C       WRITE(MSG1, 101)JDATE,JTIME
     498         CALL SYDATM (DT(1),DT(2),DT(3),DT(4),DT(5),DT(6))
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 15
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     499 Ckmf    check for y2k, convert 2-digit year to 4 digit year if needed.
     500         IF (DT(1) .LT. 90) THEN
     501 C         assume 2000 or later
     502           DT(1) = DT(1) + 2000
     503 Cprh    fixed bug in following record that had D(I), not D(1)
     504         ELSE IF (DT(1) .LT. 100) THEN
     505 C         assume before 2000
     506           DT(1) = DT(1) + 1900
     507         END IF
     508         WRITE(CHDTTM,700) DT(2),DT(3),DT(1),DT(4),DT(5)
     509         WRITE(MSG1,  199)
     510         WRITE(MSG1,  201) STAIND,PAGIND
     511         WRITE(MSG1,  202)
     512         IF (EMAOPT .EQ. 0) THEN
     513 C         traditional B17 analysis
     514           WRITE(MSG1,  203) CHDTTM
     515         ELSE
     516 C         using new EMA option
     517           WRITE(MSG1,  213) CHDTTM
     518           WRITE(MSG1, *)
     519           WRITE(MSG1,  205)
     520           WRITE(MSG1,  206)
     521         END IF
     522 Cprh       WRITE(MSG1,  205)
     523 Cprh       WRITE(MSG1,  206)
     524 Cprh    original version never set JOBTTL, leave out for new version
     525 Cprh        WRITE(MSG1,  207)  JOBTTL
     526 Cprh        CALL DATLST (DT,CHDTTM,OLEN,ERRCOD)
     527         
     528 Cprh        WRITE(MSG1, 101) (CHDTTM(I),I=1,OLEN)
     529         WRITE(MSG1, 102) CPLTOP(IPLTOP+1), CBCPUN(IBCPUN+1),
     530      $                   CPRTOP(IPRTOP+1), CDEBUG(IDEBUG+1),
     531      $                   CIPPOS(IPPOS+1),  CNFORM(INFORM)
     532 C       WRITE(MSG1, 103) INFORM, (' ',I=1,INFORM)
     533         WRITE(MSG1, 110)
     534         IF (INFORM.EQ.1) THEN
     535 C         WDM file
     536           INQUIRE(WDMSFL,NAME=FNAME)
     537           WRITE(MSG1,111) FNAME
     538         ELSE
     539 C         Ascii file
     540           INQUIRE(INCRD,NAME=FNAME)
     541           WRITE(MSG1, 112) FNAME
     542         END IF
     543         INQUIRE(SPCFUN,NAME=FNAME)
     544         WRITE(MSG1,113) FNAME
     545         INQUIRE(MSG1,NAME=FNAME)
     546         WRITE(MSG1,114) FNAME
     547         IF (IBCPUN.GE.2) THEN
     548 C   	    outputting additional BCD file
     549           INQUIRE(IPUNCH,NAME=FNAME)
     550           WRITE(MSG1,115) FNAME
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 16
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     551         END IF
     552         WRITE(MSG1,200)
     553 C       prepare page heading in character strings
     554         WRITE(HEAD1,200)
     555         WRITE(HEAD2,201) STAIND,PAGIND
     556         WRITE(HEAD3,202)
     557         IF (EMAOPT .EQ. 0) THEN
     558 C         traditional B17 analysis
     559           WRITE(HEAD4,203) CHDTTM
     560           HEAD5 = ' '
     561           HEAD6 = ' '
     562         ELSE
     563 C         using new EMA option
     564           WRITE(HEAD4,213) CHDTTM
     565 C         include warning about using EMA method
     566           WRITE(HEAD5,205)
     567           WRITE(HEAD6,206)
     568         END IF
     569 C       WRITE(HEAD7,207) JOBTTL
     570 C       put date/time here for plots
     571 Cprh    date/time now in page header
     572 Cprh        WRITE(HEAD7,227) CHDTTM
     573         HEAD7 = ' '
     574         WRITE(HEAD8,208) (BLANK, I=1,IARG2)
     575 C       SET UP DISCLAIMER
     576         IF(IARG2 .GE. 2) THEN
     577           WRITE(DISCLM(1),401)
     578           WRITE(DISCLM(2),402)
     579         ELSE
     580           WRITE(DISCLM(1),301)
     581           WRITE(DISCLM(2),302)
     582         ENDIF
     583 C
     584       ELSE IF( II .EQ. 1000 )  THEN
     585 C       PRINT PAGE HEADINGS FOR PGM OUTPUT....
     586 C       FIRST INSERT SEQUENCE NUMBER
     587 C       WRITE(HEADNG(6)(47:50),   '(I4)' )  IARG2
     588 C       above sequence number deleted because didn't fit in header
     589 
     590 C       start of new station
     591         STAIND = STAIND + 1
     592         PAGIND = 0
     593         WRITE(MSG1,199)
     594 Cprh    header will be written under II=2001 conditional below
     595 Cprh        WRITE(MSG1,501) HEAD14
     596 C
     597       ELSE IF ( II .EQ. 2001 ) THEN
     598 C       start of new page
     599         PAGIND = PAGIND + 1
     600         WRITE(MSG1,  201) STAIND,PAGIND
     601         WRITE(MSG1,  202)
     602         IF (EMAOPT .EQ. 0) THEN
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 17
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     603 C         traditional B17 analysis
     604           WRITE(MSG1,  203) CHDTTM
     605         ELSE
     606 C         using new EMA option
     607           WRITE(MSG1,  213) CHDTTM
     608           WRITE(MSG1, *)
     609           WRITE(MSG1,  205)
     610           WRITE(MSG1,  206)
     611         END IF
     612         WRITE(MSG1,200)
     613 C       build station id/ description
     614         CALL CHRCHR(L10,CSTA,HEADA9(1))
     615         CALL ZIPC (L70,BLANK,HEADA9(11))
     616         CALL CVARAR (L15,STAID(1:15),L15,HEADA9(11))
     617         LOC = LENSTR(L80,HEADA9)
     618         CALL CVARAR (L48,STAID(21:68),L48,HEADA9(LOC+3))
     619         LOC = LENSTR(L80,HEADA9)
     620         CALL CARVAR (L80,HEADA9,L80,HEAD9)
     621 C       change null to blank
     622         DO 55 I = 11,80
     623           IF (ICHAR(HEADA9(I)) .EQ. 0) HEADA9(I) = ' '
     624  55     CONTINUE
     625         CALL CTRSTR (L80,HEADA9)
     626         WRITE(MSG1, 502) HEADA9
     627 Cprh        WRITE(MSG, 100) (CHDTTM(I),I=1,OLEN)
     628 C       WRITE(HEAD9,209)'Station - ',STAID(1:15), STAID(21:68)
     629 C       WRITE(MSG1,'(/1X,(A))') HEAD9
     630 Cprh    update station/page index on HEAD2 for future use
     631         WRITE(HEAD2,201) STAIND,PAGIND+1
     632       ELSE IF ( II .EQ. 2002 ) THEN
     633         WRITE(MSG1,503) DISCLM
     634       ELSE IF ( II .EQ. 3000 ) THEN
     635 C       PRINT HEADING FOR LIST OF INPUT PEAKS
     636         WRITE(MSG1,501) HEADNG
     637         IF(IARG2 .NE. -3301) WRITE(MSG1,504) DISCLM
     638       ELSE
     639         STOP 777
     640       END IF
     641 C
     642       RETURN
     643       END
Bytes of stack required for this program unit: 56.


--------------------------------------------------  Symbol Cross Reference  ---------------------------------------------------
Name (Type)           Class          Offset     Context  (d-DO, =-Assignment, /-Initialization, i-Input, o-Output, p-Pointer,
                                                         r-Argument, s-Specification, u-Usage)
-------------------------------------------------------------------------------------------------------------------------------
ALLSOM (INTEGER)      scalar         44         (I1)4s   (I1)7s
BLANK (CHARACTER)     scalar                      390s     416/     574o     574o     615r     615r     615r
CARVAR                SUBROUTINE                  413u     620u
CBCPUN (CHARACTER)    array                       396s     419/     529o     529o
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 18
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
CDEBUG (CHARACTER)    array                       394s     421/     530o     530o
CHDTTM (CHARACTER)    scalar                      401s     508o     508o     514o     514o     517o     517o     559o     559o
                                                  564o     564o     604o     604o     607o     607o
CHRCHR                SUBROUTINE                  413u     614u
CIPPOS (CHARACTER)    array                       397s     422/     531o     531o
CKNBLV                FUNCTION                    409s     413u
CNFORM (CHARACTER)    array                       398s     423/     531o     531o
CPLTOP (CHARACTER)    array                       395s     417/     529o     529o
CPRTOP (CHARACTER)    array                       394s     420/     530o     530o
CSTA (CHARACTER)      array                       400s     425/     614r     614r     614r
CTRSTR                SUBROUTINE                  625u
CVARAR                SUBROUTINE                  413u     616u     618u
DATLST                Procedure                   413u
DISCLM (CHARACTER)    array                       404s     405s     577o     577o     578o     578o     580o     580o     581o
                                                  581o     633o     633o     637o     637o
DOSTA (CHARACTER)     array          48         (I1)4s   (I1)9s
DT (INTEGER)          array                       404s     406s     498r     498r     498r     498r     498r     498r     498r
                                                  498r     498r     498r     498r     498r     498r     498r     498r     498r
                                                  498r     498r     500u     502u     502=     504u     506u     506=     508o
                                                  508o     508o     508o     508o
EMAOPT (INTEGER)      scalar                      347s     360s     512u     557u     602u
FNAME (CHARACTER)     scalar                      399s     536i     537o     537o     540i     541o     541o     543i     544o
                                                  544o     545i     546o     546o     549i     550o     550o
GRFMT (CHARACTER)     scalar         348        (I1)4s   (I1)8s
HEAD1 (CHARACTER)     scalar         0            374s     376s     379u     554o     554o
HEAD14 (CHARACTER)    array          0            378s     379u
HEAD2 (CHARACTER)     scalar         80           374s     376s     555o     555o     631o     631o
HEAD3 (CHARACTER)     scalar         160          374s     376s     556o     556o
HEAD4 (CHARACTER)     scalar         240          374s     376s     559o     559o     564o     564o
HEAD5 (CHARACTER)     scalar         320          374s     376s     560=     566o     566o
HEAD6 (CHARACTER)     scalar         400          375s     377s     561=     567o     567o
HEAD7 (CHARACTER)     scalar         480          375s     377s     573=
HEAD8 (CHARACTER)     scalar         560          375s     377s     574o     574o
HEAD9 (CHARACTER)     scalar         640          375s     377s     620r     620r     620r
HEADA9 (CHARACTER)    array                       400s     614r     614r     614r     615r     616r     616r     616r     617r
                                                  617r     617r     618r     618r     618r     619r     619r     619r     620r
                                                  620r     620r     623r     623=     625r     626o     626o     615r     615r
                                                  625r     625r
HEADNG (CHARACTER)    array          0            378s     379u     636o     636o
I (INTEGER)           scalar                      392s     574=     574u     623u     623u
IARG2 (INTEGER)       scalar                      347s     360s     574o     576u     637u
IBCPUN (INTEGER)      scalar         4          (I1)2s   (I1)5s     529u     547u
IDEBUG (INTEGER)      scalar         12         (I1)2s   (I1)5s     530u
II (INTEGER)          scalar                      347s     360s     494u     584u     597u     632u     634u
IMODFG (INTEGER)      scalar         40         (I1)4s   (I1)7s
INCRD (INTEGER)       scalar         4          (I5)2s   (I5)3s     540i
INFIL2 (INTEGER)      scalar         12         (I5)2s   (I5)3s
INFORM (INTEGER)      scalar         16         (I5)2s   (I5)3s     531u     534u
IPLTOP (INTEGER)      scalar         0          (I1)2s   (I1)5s     529u
IPPOS (INTEGER)       scalar         16         (I1)2s   (I1)5s     531u
IPRTOP (INTEGER)      scalar         8          (I1)2s   (I1)5s     530u
IPUNCH (INTEGER)      scalar         8          (I5)2s   (I5)3s     549i
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 19
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
ISKUDP (INTEGER)      scalar         20         (I1)3s   (I1)6s
JOBTTL (CHARACTER)    scalar         0         (I1)11s  (I1)12s
L10 (INTEGER)         scalar                      392s     416/     614r     614r     614r
L15 (INTEGER)         scalar                      392s     416/     616r     616r     616r     616r     616r     616r
L48 (INTEGER)         scalar                      392s     416/     618r     618r     618r     618r     618r     618r
L70 (INTEGER)         scalar                      392s     416/     615r     615r     615r
L80 (INTEGER)         scalar                      392s     416/     617r     617r     617r     619r     619r     619r     620r
                                                  620r     620r     620r     620r     620r     625r     625r     625r
LENSTR                FUNCTION                    409s     413u     617u     619u
LOC (INTEGER)         scalar                      392s     617=     618u     619=
MOROPT (INTEGER)      array          32         (I1)3s   (I1)6s
MSG1 (INTEGER)        scalar         0          (I5)2s   (I5)3s     509o     510o     511o     514o     517o     518o     519o
                                                  520o     529o     533o     537o     541o     544o     545i     546o     550o
                                                  552o     593o     600o     601o     604o     607o     608o     609o     610o
                                                  612o     626o     633o     636o     637o
NOCLM (INTEGER)       scalar         28         (I1)3s   (I1)6s
NOXPA (INTEGER)       scalar         24         (I1)3s   (I1)6s
PAGIND (INTEGER)      scalar                      404s     406s     426/     510o     555o     592=     599u     599=     600o
                                                  631u
PRTPHD                SUBROUTINE                  346s
SPCFUN (INTEGER)      scalar         20         (I5)2s   (I5)3s     543i
STAID (CHARACTER)     scalar         0          (I9)2s   (I9)3s     616r     616r     616r     618r     618r     618r
STAIND (INTEGER)      scalar                      404s     406s     426/     510o     555o     591u     591=     600o     631o
SYDATM                SUBROUTINE                  413u     498u
WDMSFL (INTEGER)      scalar                      347s     360s     536i
ZIPC                  SUBROUTINE                  615u


--------------------------------------------------  Label Cross Reference  ----------------------------------------------------
Label  Context  (d-DO, =-ASSIGN, f-FORMAT, g-GOTO, i-IF statement, s-Specification, r-Argument)
-------------------------------------------------------------------------------------------------------------------------------
101         432s
102         434s     529f
110         446s     533f
111         447s     537f
112         448s     541f
113         449s     544f
114         450s     546f
115         452s     550f
199         453s     509f     593f
200         454s     552f     554f     612f
201         455s     510f     555f     600f     631f
202         458s     511f     556f     601f
203         462s     514f     559f     604f
205         468s     519f     566f     609f
206         469s     520f     567f     610f
207         471s
208         473s     574f
213         464s     517f     564f     607f
227         472s
301         475s     580f
302         477s     581f
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 20
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
401         479s     577f
402         481s     578f
501         483s     636f
502         484s     626f
503         485s     633f
504         486s     637f
55          622d     624s
600         488s
601         489s
700         490s     508f
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 21
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

SUBROUTINE PRTINP    Compiling Options: -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     644 C
     645 C
     646 C
     647       SUBROUTINE   PRTINP
     648      #                  (IDEBUG ,XPKS, EMAOPT, WDMSFL)
     649 C
     650 C     + + + PURPOSE + + +
     651 C     PRINTS LISTINGS OF J407/WCF INPUT DATA --  INPUT PARAMS.
     652 C
     653 C     + + + DUMMY ARGUMENTS + + +
     654       INTEGER   IDEBUG, XPKS, EMAOPT, WDMSFL
     655 C
     656 C     + + + ARGUMENT DEFINITIONS + + +
     657 C     IDEBUG -
     658 C     XPKS   - number of peaks to be excluded from analysis (neg value)
     659 C     EMAOPT - indicator flag for performing EMA analysis
     660 C              0 - no, just do traditional J407
     661 C              1 - yes, run EMA
     662 C     WDMSFL - FORTRAN unit number for input WDM file
     663 C
     664 C     + + + PARAMETERS + + +
     665       INCLUDE 'pmxint.inc'
     666 C
     667 C     + + + COMMON BLOCKS + + +
     668       INCLUDE 'cwcf0.inc'
     669       INCLUDE 'cwcf1.inc'
     670 C
     671 C     + + + LOCAL VARIABLES + + +
     672       CHARACTER * 15  DWORK(4)
     673       CHARACTER*12 SKUOP(3)
     674       INTEGER   I
     675       CHARACTER*8  YNHIST
     676 C
     677 C     + + + INTRINSICS + + +
     678       INTRINSIC   INT
     679 C
     680 C     + + + EXTERNALS + + +
     681       EXTERNAL   PRTPHD
     682 C
     683 C     + + + DATA INITIALIZATIONS + + +
     684       DATA         SKUOP /'STATION SKEW','  WEIGHTED  ',
     685      $         ' GENERALIZED'/
     686 C
     687 C     + + + FORMATS + + +
     688     4 FORMAT(// 21X,  'I N P U T   D A T A   S U M M A R Y')
     689     5 FORMAT(  
     690      $  /16X,'Number of peaks in record            = ',I8,
     691      $  /16X,'Peaks not used in analysis           = ',I8,
     692      $  /16X,'Systematic peaks in analysis         = ',I8,
     693      $  /16X,'Historic peaks in analysis           = ',I8,
     694      $  /16X,'Years of historic record             = ',I8,
     695      $  /16X,'Generalized skew                     = ',F8.3,
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 22
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     696      $  /16X,'     Standard error                  = ',2X,A6,
     697      $  /16X,'     Mean Square error               = ',2X,A6,
     698      $  /16X,'Skew option                          = ',A,
     699      $  /16X,'Gage base discharge                  = ',F8.1,
     700      $  /16X,'User supplied high outlier threshold = ',A,
     701      $  /16X,'User supplied low outlier criterion  = ',A,
     702      $  /16X,'Plotting position parameter          = ',F8.2)
     703  6    FORMAT(/)
     704 C    $ /'     -- YEARS OF RECORD --    HISTORIC    GENERALIZED',
     705 C    $           'GAGE BASE'/
     706 C    $  5X,'SYSTEMATIC   HISTORIC',6X,'PEAKS',8X,'SKEW',7X,
     707 C    $  'GENERAL. SKEW   OPTION',
     708 C    $  5X,      'DISCHARGE'/
     709 C    $  /' ', 8X,I3,5X,I7,9X,I3,7X,F7.3,8X, A6,5X,  A ,2X,F8.1,//
     710 C    $         '     USER-SET OUTLIER CRITERIA   '         /
     711 C    $        '     HIGH OUTLIER   LOW OUTLIER  '        /
     712 C    $   6X, 2A )
     713 C
     714 C     + + + END SPECIFICATIONS + + +
     715 C
     716       DO 107 I = 1,3
     717         DWORK(I) = '  --  '
     718   107 CONTINUE
     719 C
     720       IF (NHIST .GT. 0 .OR. HISTPN .GT. 0.0) THEN
     721 C       historic adjustment applied
     722         YNHIST = '     YES'
                 |
WARNING -- CHARACTER scalar (YNHIST) is set but never used.

     723       ELSE
     724         YNHIST = '      NO'
     725       END IF
     726       IF(RMSEGS .GT. 0.) THEN
     727         WRITE(DWORK(1),'(F6.3)') RMSEGS
     728         WRITE(DWORK(4),'(F6.3)') RMSEGS**2
     729       END IF
     730       IF(QHIOUT .GT. 0.) WRITE(DWORK(2),'(1X,F9.1)') QHIOUT
     731       IF(QLWOUT .GT. 0.) WRITE(DWORK(3),'(1X,F9.1)') QLWOUT
     732       WRITE(MSG,6) 
     733       CALL  PRTPHD(  2001 , -999, EMAOPT, WDMSFL )
     734       WRITE(MSG,4)
     735       WRITE(MSG,5) NSYS+NHIST, XPKS, NSYS-XPKS, NHIST,
     736 C    $             INT(HISTPD+.5), YNHIST, GENSKU, DWORK(1),
     737      $             INT(HISTPD+.5),         GENSKU, DWORK(1),DWORK(4),
     738      $             SKUOP(IGSOPT+2),GAGEB, DWORK(2),DWORK(3),WEIBA
     739       CALL PRTPHD( 2002,   -999, EMAOPT, WDMSFL  )
     740       IF(IDEBUG.NE.0) THEN
     741         WRITE(MSG,*)'   PeakFQ-DEBUG OPTION SET =',IDEBUG
     742       ENDIF
     743 C
     744       RETURN
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 23
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     745       END
Bytes of stack required for this program unit: 72.


--------------------------------------------------  Symbol Cross Reference  ---------------------------------------------------
Name (Type)           Class          Offset     Context  (d-DO, =-Assignment, /-Initialization, i-Input, o-Output, p-Pointer,
                                                         r-Argument, s-Specification, u-Usage)
-------------------------------------------------------------------------------------------------------------------------------
BIGLOG (REAL)         scalar         316        (I2)4s  (I2)12s
CLSIZE (REAL)         scalar         40         (I2)3s  (I2)11s
CPAMP1 (REAL)         scalar         344        (I2)6s  (I2)14s
CPAMP2 (REAL)         scalar         348        (I2)6s  (I2)14s
CPAMP3 (REAL)         scalar         352        (I2)6s  (I2)14s
DWORK (CHARACTER)     array                       672s     717=     727o     727o     728o     728o     730o     730o     731o
                                                  731o     737o     737o     737o     737o     738o     738o     738o     738o
EMAOPT (INTEGER)      scalar                      648s     654s     733r     733r     733r     739r     739r     739r
EPS1 (REAL)           scalar         320        (I2)5s  (I2)13s
EPS2 (REAL)           scalar         324        (I2)5s  (I2)13s
GAGEB (REAL)          scalar         12         (I4)2s  (I4)10s     738o
GENSKU (REAL)         scalar         0          (I4)2s  (I4)10s     737o
GSKWGT (REAL)         scalar         108        (I4)6s  (I4)10s
GSMAX (REAL)          scalar         32         (I2)3s  (I2)11s
GSMIN (REAL)          scalar         28         (I2)3s  (I2)11s
HISTPD (REAL)         scalar         28         (I4)3s  (I4)10s     737u
HISTPN (REAL)         scalar         100        (I4)6s  (I4)10s     720u
HISTWT (REAL)         scalar         104        (I4)6s  (I4)10s
HRECWO (REAL)         scalar         328        (I2)5s  (I2)13s
HRECWS (REAL)         scalar         336        (I2)5s  (I2)13s
HRECWX (REAL)         scalar         332        (I2)5s  (I2)13s
I (INTEGER)           scalar                      674s     717u
IDEBUG (INTEGER)      scalar                      648s     654s     740u     741o
IGSOPT (INTEGER)      scalar         4          (I4)2s   (I4)9s     738u
INDX1 (INTEGER)       scalar         44         (I2)4s   (I2)9s
INDX2 (INTEGER)       scalar         48         (I2)4s   (I2)9s
INDXPT (INTEGER)      array          56         (I2)4s   (I2)9s
IWXMOD (INTEGER)      scalar         372        (I2)7s  (I2)10s
MSG (INTEGER)         scalar         0          (I2)2s   (I2)8s     732o     734o     735o     741o
MSL (INTEGER)         scalar         4          (I2)2s   (I2)8s
MXINT (INTEGER)       scalar                    (I7)1s   (I7)2s   (I2)9u  (I2)12u  (I4)12u
NBGB (INTEGER)        scalar         84         (I4)5s   (I4)9s
NHIOUT (INTEGER)      scalar         92         (I4)5s   (I4)9s
NHIST (INTEGER)       scalar         24         (I4)2s   (I4)9s     720u     735u     735o
NHISTN (INTEGER)      scalar         96         (I4)5s   (I4)9s
NINDX (INTEGER)       scalar         52         (I2)4s   (I2)9s
NLWOUT (INTEGER)      scalar         88         (I4)5s   (I4)9s
NMISS (INTEGER)       scalar         76         (I4)5s   (I4)9s
NOCLIM (INTEGER)      scalar         24         (I2)2s   (I2)8s
NOEPFC (INTEGER)      scalar         20         (I2)2s   (I2)8s
NOPPOS (INTEGER)      scalar         8          (I2)2s   (I2)8s
NOSYS (INTEGER)       scalar         16         (I2)2s   (I2)8s
NOTRAN (INTEGER)      scalar         12         (I2)2s   (I2)8s
NSYS (INTEGER)        scalar         80         (I4)5s   (I4)9s     735u     735u
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 24
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
PRTINP                SUBROUTINE                  647s
PRTPHD                SUBROUTINE                  681u     733u     739u
QHIOUT (REAL)         scalar         20         (I4)2s  (I4)11s     730u     730o
QLWOUT (REAL)         scalar         16         (I4)2s  (I4)11s     731u     731o
RMSDGS (REAL)         scalar         340        (I2)6s  (I2)14s
RMSEGS (REAL)         scalar         8          (I4)2s  (I4)10s     726u     727o     728u
SIGHOT (REAL)         scalar         360        (I2)7s  (I2)15s
SIGLOT (REAL)         scalar         356        (I2)7s  (I2)15s
SKUOP (CHARACTER)     array                       673s     684/     738o     738o
SUMH (REAL(kind 8))   array          176        (I4)8s  (I4)15s
SUMS (REAL(kind 8))   array          152        (I4)8s  (I4)15s
SYSAAV (REAL)         scalar         132        (I4)7s  (I4)11s
SYSASD (REAL)         scalar         136        (I4)7s  (I4)11s
SYSASK (REAL)         scalar         140        (I4)7s  (I4)11s
SYSBAS (REAL)         scalar         112        (I4)6s  (I4)11s
SYSMAX (REAL)         scalar         148        (I4)8s  (I4)11s
SYSMIN (REAL)         scalar         144        (I4)8s  (I4)12s
SYSPAB (REAL)         scalar         116        (I4)6s  (I4)12s
SYSSKW (REAL)         scalar         128        (I4)7s  (I4)12s
SYSUAV (REAL)         scalar         120        (I4)6s  (I4)12s
SYSUSD (REAL)         scalar         124        (I4)7s  (I4)12s
TXPROB (REAL)         array          184        (I2)4s  (I2)12s
WCXAUX (REAL)         array          364        (I2)7s  (I2)15s
WDMSFL (INTEGER)      scalar                      648s     654s     733r     733r     733r     739r     739r     739r
WEIBA (REAL)          scalar         36         (I2)3s  (I2)11s     738o
WORK (REAL)           array          200        (I4)8s  (I4)12s
WRCAAV (REAL)         scalar         52         (I4)4s  (I4)13s
WRCASD (REAL)         scalar         56         (I4)4s  (I4)13s
WRCASK (REAL)         scalar         60         (I4)4s  (I4)13s
WRCBAS (REAL)         scalar         32         (I4)3s  (I4)13s
WRCHHB (REAL)         scalar         64         (I4)4s  (I4)13s
WRCHOT (REAL)         scalar         68         (I4)4s  (I4)13s
WRCLOW (REAL)         scalar         72         (I4)5s  (I4)13s
WRCPAB (REAL)         scalar         36         (I4)3s  (I4)14s
WRCSKW (REAL)         scalar         48         (I4)4s  (I4)14s
WRCUAV (REAL)         scalar         40         (I4)3s  (I4)14s
WRCUSD (REAL)         scalar         44         (I4)4s  (I4)14s
WSKLAT (REAL)         scalar         312        (I2)4s  (I2)12s
XPKS (INTEGER)        scalar                      648s     654s     735o     735u
YNHIST (CHARACTER)    scalar                      675s     722=     724=


--------------------------------------------------  Label Cross Reference  ----------------------------------------------------
Label  Context  (d-DO, =-ASSIGN, f-FORMAT, g-GOTO, i-IF statement, s-Specification, r-Argument)
-------------------------------------------------------------------------------------------------------------------------------
107         716d     718s
4           688s     734f
5           689s     735f
6           703s     732f
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 25
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

SUBROUTINE PRTIN2    Compiling Options: -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     746 C
     747 C
     748 C
     749       SUBROUTINE   PRTIN2
     750      #                 ( IOPT, MSG, NPKS, IPKSEQ, PKS, XQUAL,
     751      #                   EMAOPT, WDMSFL )
     752 C
     753 C     + + + PURPOSE + + +
     754 C     PRINTS SHORT LIST OF INPUT PEAKS
     755 C
     756 C     + + + DUMMY ARGUMENTS + + +
     757       INTEGER   MSG, NPKS, IOPT, EMAOPT, WDMSFL
     758       INTEGER  IPKSEQ(NPKS)
     759       CHARACTER*(*)  XQUAL(NPKS)
     760       REAL     PKS(NPKS)
     761 C
     762 C     + + + ARGUMENT DEFINITIONS + + +
     763 C     IOPT   -
     764 C     MSG    -
     765 C     NPKS   -
     766 C     IPKSEQ -
     767 C     PKS    -
     768 C     XQUAL  -
     769 C     EMAOPT - indicator flag for performing EMA analysis
     770 C              0 - no, just do traditional J407
     771 C              1 - yes, run EMA
     772 C     WDMSFL - FORTRAN unit number for input WDM file
     773 C
     774 C     + + + LOCAL VARIABLES + + +
     775       INTEGER   I, ND2
     776 C
     777 C     + + + EXTERNALS + + +
     778       EXTERNAL   PRTPHD
     779 C
     780 C     + + + FORMATS + + +
     781    14 FORMAT(///7X,25HLISTING  OF  INPUT  PEAKS//
     782      $              9X,21H YR   DISCHARGE  CODE  //
     783      $                  (5X,I8,F12.1,A6) )
     784    18 FORMAT(///' ******  AFTER  CALC  ABORT  --')
     785   104 FORMAT(//8X,'Explanation of peak discharge qualification codes',
     786      $//6X,' PeakFQ    NWIS',
     787      $ /6X,'  CODE     CODE   DEFINITION',
     788      $//6X,'    D        3    Dam failure, non-recurrent flow anomaly',
     789      $ /6X,'    G        8    Discharge greater than stated value',
     790      $ /6X,'    X       3+8   Both of the above',
     791      $ /6X,'    L        4    Discharge less than stated value',
     792      $ /6X,'    K     6 OR C  Known effect of regulation or ',
     793      $                        'urbanization',
     794      $ /6X,'    H        7    Historic peak', /
     795      $ /6X,'    -  Minus-flagged discharge -- Not used in computation',
     796      $ /6X,'          -8888.0 -- No discharge value given',
     797      $ /6X,'    -  Minus-flagged water year -- ',
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 26
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     798      $            'Historic peak used in computation' ///)
     799  1010 FORMAT('1',//)
     800  1011 FORMAT(//23X,'I N P U T   D A T A   L I S T I N G')
     801  1012 FORMAT(//,2('     WATER YEAR    DISCHARGE   CODES ')/)
     802  1013 FORMAT(2(I12,F15.1, 1A10))
     803 C
     804 C     + + + END SPECIFICATIONS + + +
     805 C
     806       WRITE(MSG,1010) 
     807       IF(IOPT .EQ. 1) WRITE(MSG,18)
     808 C     IF(IOPT .NE. 1)  CALL PRTPHD( 3000, -3301 )
     809 C     write table of observed data
     810       CALL PRTPHD ( 2001, -999, EMAOPT, WDMSFL )
     811       WRITE(MSG,1011)
     812       WRITE(MSG,1012)
     813       ND2 = (NPKS+1)/2
     814       DO 210 I = 1,ND2
     815         IF (I+ND2 .LE. NPKS) THEN
     816           WRITE(MSG,1013) IPKSEQ(I), PKS(I), XQUAL(I),
     817      $             IPKSEQ(I+ND2), PKS(I+ND2), XQUAL(I+ND2)
     818         ELSE
     819           WRITE(MSG,1013) IPKSEQ(I), PKS(I), XQUAL(I)
     820         END IF
     821   210 CONTINUE
     822 C
     823 C     write key to codes
     824       WRITE(MSG, 104 )
     825 C
     826 C     WRITE(MSG,14)(IPKSEQ(I),PKS(I),XQUAL(I),I=1,NPKS)
     827 C
     828       RETURN
     829       END
Bytes of stack required for this program unit: 64.


--------------------------------------------------  Symbol Cross Reference  ---------------------------------------------------
Name (Type)           Class          Offset     Context  (d-DO, =-Assignment, /-Initialization, i-Input, o-Output, p-Pointer,
                                                         r-Argument, s-Specification, u-Usage)
-------------------------------------------------------------------------------------------------------------------------------
EMAOPT (INTEGER)      scalar                      751s     757s     810r     810r     810r
I (INTEGER)           scalar                      775s     815u     816u     816u     816u     817u     817u     817u     819u
                                                  819u     819u
IOPT (INTEGER)        scalar                      750s     757s     807u
IPKSEQ (INTEGER)      array                       750s     758s     816o     817o     819o
MSG (INTEGER)         scalar                      750s     757s     806o     807o     811o     812o     816o     819o     824o
ND2 (INTEGER)         scalar                      775s     813=     814u     815u     817u     817u     817u
NPKS (INTEGER)        scalar                      750s     757s     758u     759u     760u     813u     815u
PKS (REAL)            array                       750s     760s     816o     817o     819o
PRTIN2                SUBROUTINE                  749s
PRTPHD                SUBROUTINE                  778u     810u
WDMSFL (INTEGER)      scalar                      751s     757s     810r     810r     810r
XQUAL (CHARACTER)     array                       750s     759s     816o     816o     817o     817o     819o     819o
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 27
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------


--------------------------------------------------  Label Cross Reference  ----------------------------------------------------
Label  Context  (d-DO, =-ASSIGN, f-FORMAT, g-GOTO, i-IF statement, s-Specification, r-Argument)
-------------------------------------------------------------------------------------------------------------------------------
1010        799s     806f
1011        800s     811f
1012        801s     812f
1013        802s     816f     819f
104         785s     824f
14          781s
18          784s     807f
210         814d     821s
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 28
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

SUBROUTINE PRTIN3    Compiling Options: -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     830 C
     831 C
     832 C
     833       SUBROUTINE   PRTIN3
     834      #                 ( MSG,  NPKS, IPKSEQ,PKS, XQUAL,
     835      $     GAGEB,  IPKPTR, SYSPP, WRCPP , WEIBA, EMAOPT, WDMSFL )
     836 C
     837 C     + + + PURPOSE + + +
     838 C     PRINTS INPUT PEAKS IN INPUT ORDER AND IN RANKED ORDER
     839 C     WITH SYSTEMATIC AND WRC PLOTTING POSITIONS.
     840 C
     841 C     NOTE -- THE PEAKS AND THEIR PLOTTING POSITIONS MUST
     842 C     BE LINED UP PROPERLY BY PREVIOUS CALLS TO SORTM
     843 C     AND ALIGNP.
     844 C
     845 C     + + + DUMMY ARGUMENTS + + +
     846       INTEGER   MSG, NPKS, EMAOPT, WDMSFL
     847       REAL    PKS(NPKS),  SYSPP(NPKS), WRCPP(NPKS), WEIBA
     848       REAL    GAGEB
     849       INTEGER  IPKSEQ(NPKS), IPKPTR(NPKS)
     850       CHARACTER*(*)  XQUAL(NPKS)
     851 C
     852 C     + + + ARGUMENT DEFINITIONS + + +
     853 C     MSG    -
     854 C     NPKS   -
     855 C     IPKSEQ -
     856 C     PKS    -
     857 C     XQUAL  -
     858 C     GAGEB  -
     859 C     IPKPTR -
     860 C     SYSPP  -
     861 C     WRCPP  -
     862 C     WEIBA  -
     863 C     EMAOPT - indicator flag for performing EMA analysis
     864 C              0 - no, just do traditional J407
     865 C              1 - yes, run EMA
     866 C     WDMSFL - FORTRAN unit number for input WDM file
     867 C
     868 C     + + + LOCAL VARIABLES + + +
     869       INTEGER   JLINE,         I, NB, J, ILINE, ND2
     870       REAL    EPSILN
     871       CHARACTER*8 ESTTYP(2)
     872 C
     873 C     + + + INTRINSICS + + +
     874       INTRINSIC   ABS
     875 C
     876 C     + + + EXTERNALS + + +
     877 C     EXTERNAL   PRTPHD
     878 C
     879 C     + + + FORMATS + + +
     880   104 FORMAT(//8X,'Explanation of peak discharge qualification codes',
     881      $//6X,' PeakFQ    NWIS',
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 29
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     882      $ /6X,'  CODE     CODE   DEFINITION',
     883      $//6X,'    D        3    Dam failure, non-recurrent flow anomaly',
     884      $ /6X,'    G        8    Discharge greater than stated value',
     885      $ /6X,'    X       3+8   Both of the above',
     886      $ /6X,'    L        4    Discharge less than stated value',
     887      $ /6X,'    K     6 OR C  Known effect of regulation or ',
     888      $                        'urbanization',
     889      $ /6X,'    H        7    Historic peak' /
     890      $ /6X,'    -  Minus-flagged discharge -- Not used in computation',
     891      $ /6X,'          -8888.0 -- No discharge value given',
     892      $ /6X,'    -  Minus-flagged water year -- ',
     893      $            'Historic peak used in computation' ///)
     894  1010 FORMAT('1',//)
     895  1011 FORMAT(//23X,'I N P U T   D A T A   L I S T I N G')
     896 C1012 FORMAT(/ 23X,10HWATER YEAR,4X, 9HDISCHARGE,    
     897 C    $       9H   CODES /)  
     898  1012 FORMAT(//,2('     WATER YEAR    DISCHARGE   CODES ')/)
     899 C1013 FORMAT(20X,I10,F15.1, 1A10) 
     900  1013 FORMAT(2(I12,F15.1, 1A10))
     901 C1017 FORMAT(/33X,'-- CONTINUED --')
     902 C
     903  1021 FORMAT( //3X,
     904      $      'EMPIRICAL FREQUENCY CURVES -- ',A,' PLOTTING POSITIONS'
     905      $      / 73X, A, '** WEIBA =', F6.3, ' ***' )
     906 Cprh 1022 FORMAT( 6X, 5HWATER, 9X, 6HRANKED, 7X,
     907 Cprh     $       10HSYSTEMATIC, 6X,'BULL.17B'/ 
     908 Cprh     $       7X,4HYEAR, 7X, 9HDISCHARGE, 8X, 6HRECORD,8X,8HESTIMATE/)
     909  1022 FORMAT(6X,'WATER',7X,'  RANKED ',6X,'SYSTEMATIC',6X, A, / 
     910      $       6X,' YEAR',7X,'DISCHARGE',6X,'  RECORD  ',6X,'ESTIMATE'/)
     911  1023 FORMAT( I11,F15.1,2F15.4,
     912      $      2A1,T27,'           --  ',  1A1, '          --  ' )
     913 C1027 FORMAT(/33X,'-- CONTINUED --')
     914 C
     915 C     + + + DATA INITIALIZATIONS + + +
     916       DATA   EPSILN/1.0E-6/
     917       DATA   ESTTYP/ 'BULL.17B' , '  EMA   ' /
     918 C
     919 C     + + + END SPECIFICATIONS + + +
     920 C
     921 C     write table of observed data
     922       WRITE(MSG,1010)
     923       CALL PRTPHD ( 2001, -999, EMAOPT, WDMSFL )
     924       WRITE(MSG,1011)
     925       WRITE(MSG,1012)
     926       ND2 = (NPKS+1)/2
     927       DO 210 I = 1,ND2
     928         IF (I+ND2 .LE. NPKS) THEN
     929           WRITE(MSG,1013) IPKSEQ(I), PKS(I), XQUAL(I),
     930      $             IPKSEQ(I+ND2), PKS(I+ND2), XQUAL(I+ND2)
     931         ELSE
     932           WRITE(MSG,1013) IPKSEQ(I), PKS(I), XQUAL(I)
     933         END IF
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 30
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     934   210 CONTINUE
     935 C
     936 C     write key to codes
     937       WRITE(MSG, 104 )
     938 C
     939 C     write table of frequency curves
     940       WRITE(MSG,1010)
     941       CALL PRTPHD ( 2001, -999, EMAOPT, WDMSFL )
     942       JLINE = 0
     943   302 CONTINUE
     944         ILINE = JLINE+1
     945 C       IF(ILINE.GT.1)  WRITE(MSG,1027)
     946 C       CALL PRTPHD( 3000 , -999  )
     947         IF ( ABS(WEIBA).GT.EPSILN ) THEN
     948           WRITE(MSG,1021) 'WEIBXXX', '*', WEIBA
     949         ELSE
     950           WRITE(MSG,1021) 'WEIBULL'
     951         END IF
     952         WRITE(MSG,1022) ESTTYP(EMAOPT + 1)
     953 C       IF(ILINE.GT.1)WRITE(MSG,1027)
     954         JLINE = NPKS
     955 C       NLINES = JLINE-ILINE+1
     956 C       IF(NLINES.GT.40)JLINE = ILINE+34
     957 C       IF(NLINES.GT.50)JLINE = ILINE+39
     958         DO 310 I = ILINE,JLINE
     959           NB = 1
     960           IF(IPKSEQ(IPKPTR(I)) .LT. 0)    NB = 2
     961           IF(PKS(IPKPTR(I)) .LE. GAGEB )  NB = 3
     962           WRITE(MSG,1023) IPKSEQ(IPKPTR(I)), PKS(IPKPTR(I)), 
     963      *                  SYSPP(I), WRCPP(I) ,
     964      $                  (' ',J=1,NB)
     965   310   CONTINUE
     966       IF(JLINE.LT.NPKS) GO TO 302
     967 C
     968       RETURN
     969       END
Bytes of stack required for this program unit: 112.


--------------------------------------------------  Symbol Cross Reference  ---------------------------------------------------
Name (Type)           Class          Offset     Context  (d-DO, =-Assignment, /-Initialization, i-Input, o-Output, p-Pointer,
                                                         r-Argument, s-Specification, u-Usage)
-------------------------------------------------------------------------------------------------------------------------------
EMAOPT (INTEGER)      scalar                      835s     846s     923r     941r     952u     923r     923r     941r     941r
EPSILN (REAL)         scalar                      870s     916/     947u
ESTTYP (CHARACTER)    array                       871s     917/     952o     952o
GAGEB (REAL)          scalar                      835s     848s     961u
I (INTEGER)           scalar                      869s     928u     929u     929u     929u     930u     930u     930u     932u
                                                  932u     932u     960u     961u     962u     962u     963u     963u
ILINE (INTEGER)       scalar                      869s     944=     958u
IPKPTR (INTEGER)      array                       835s     849s     960u     961u     962u     962u
IPKSEQ (INTEGER)      array                       834s     849s     929o     930o     932o     960u     962o
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 31
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
J (INTEGER)           scalar                      869s     964=     964u
JLINE (INTEGER)       scalar                      869s     942=     944u     954=     958u     966u
MSG (INTEGER)         scalar                      834s     846s     922o     924o     925o     929o     932o     937o     940o
                                                  948o     950o     952o     962o
NB (INTEGER)          scalar                      869s     959=     960=     961=     964o
ND2 (INTEGER)         scalar                      869s     926=     927u     928u     930u     930u     930u
NPKS (INTEGER)        scalar                      834s     846s     847u     847u     847u     849u     849u     850u     926u
                                                  928u     954u     966u
PKS (REAL)            array                       834s     847s     929o     930o     932o     961u     962o
PRTIN3                SUBROUTINE                  833s
PRTPHD                SUBROUTINE                  923u     941u
SYSPP (REAL)          array                       835s     847s     963o
WDMSFL (INTEGER)      scalar                      835s     846s     923r     941r     923r     923r     941r     941r
WEIBA (REAL)          scalar                      835s     847s     947r     948o
WRCPP (REAL)          array                       835s     847s     963o
XQUAL (CHARACTER)     array                       834s     850s     929o     929o     930o     930o     932o     932o


--------------------------------------------------  Label Cross Reference  ----------------------------------------------------
Label  Context  (d-DO, =-ASSIGN, f-FORMAT, g-GOTO, i-IF statement, s-Specification, r-Argument)
-------------------------------------------------------------------------------------------------------------------------------
1010        894s     922f     940f
1011        895s     924f
1012        898s     925f
1013        900s     929f     932f
1021        903s     948f     950f
1022        909s     952f
1023        911s     962f
104         880s     937f
210         927d     934s
302         943s     966g
310         958d     965s
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 32
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

SUBROUTINE PRTFIT    Compiling Options: -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
      970C
      971C
      972C
      973      SUBROUTINE   PRTFIT
      974     #                 ( IDEBUG, EMAOPT, WDMSFL )
      975C
      976C     + + + PURPOSE + + +
      977C     PRINTS TABLUATED FITTED LOG-PEARSON TYPE III CURVE FOR J407.
      978C
      979C     + + + HISTORY + + +
      980C     Updated 11/03 by PRH of AQUA TERRA Consultants for batch PEAKFQ
      981C
      982C     + + + DUMMY ARGUMENTS + + +
      983      INTEGER   IDEBUG, EMAOPT, WDMSFL
      984C
      985C     + + + ARGUMENT DEFINITIONS + + +
      986C     IDEBUG -
      987C     EMAOPT - indicator flag for performing EMA analysis
      988C              0 - no, just do traditional J407
      989C              1 - yes, run EMA
      990C
      991C     + + + PARAMETERS + + +
      992      INCLUDE 'pmxint.inc'
      993C
      994C     + + + COMMON BLOCKS + + +
      995      INCLUDE 'cwcf0.inc'
      996      INCLUDE 'cwcf1.inc'
      997      INCLUDE 'cwcf2.inc'
      998C
      999C     + + + LOCAL VARIABLES + + +
     1000      CHARACTER*13  DWORK(5)
     1001      INTEGER   I, J, SIGDIG, DECPLA, LEN
     1002      REAL      PEP, TMP !, XTRPK
     1003C
     1004C     + + + SAVES + + +
     1005      SAVE     INITIP, IPLIST
     1006      INTEGER  IPLIST(MXINT)
     1007C
     1008C     + + + INTRINSICS + + +
     1009      INTRINSIC   INT, EXP
     1010C
     1011C     + + + EXTERNALS + + +
     1012      EXTERNAL   SORTI, MOVEI, ZIPI, DECCHX  !, QEXTRA
     1013C
     1014C     + + + DATA INITIALIZATIONS + + +
     1015Cprh  use INITIP flag to force init of IPLIST so that change to
     1016Cprh  size of MXINT doesn't require update of this DATA statement
     1017Cprh      DATA     IPLIST / -777, 30*0 /
     1018      DATA     INITIP / 0 /
     1019C
     1020C     + + + FORMATS + + +
     1021    8 FORMAT(//1X,10X,  'ANNUAL FREQUENCY CURVE PARAMETERS -- ',
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 33
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     1022     $       21HLOG-PEARSON TYPE III    // 
     1023     $'                        FLOOD BASE      ',
     1024     $'             LOGARITHMIC         '/
     1025     $'                  ----------------------',
     1026     $'  -------------------------------'/
     1027     $'                             EXCEEDANCE ',
     1028     $'               STANDARD          '/
     1029     $'                   DISCHARGE PROBABILITY',
     1030     $'     MEAN     DEVIATION     SKEW '/18X,55('-'))      
     1031C   9 FORMAT(     5X,32HSYSTEMATIC PEAKS ABOVE BASE  --    ,
     1032C    $  10X,2H--,2X,2F15.4,F15.3/
     1033C    $       6X,32HWRC-ADJUSTED PKS ABOVE BASE  --  ,
     1034C    $       10X,2H--,2X,2F15.4,F15.3)
     1035    9 FORMAT(  /,' SYSTEMATIC PKS',
     1036     $         /,'   ABOVE BASE            ---     ---   ',
     1037     $           F11.4,F12.4,F11.3,
     1038     $         /,' BULL.17B-ADJ PKS',
     1039     $         /,'   ABOVE BASE            ---     ---   ',
     1040     $           F11.4,F12.4,F11.3)
     1041   19 FORMAT(  /,' SYSTEMATIC PKS',
     1042     $         /,'   ABOVE BASE            ---     ---   ',
     1043     $           F11.4,F12.4,F11.3,
     1044     $         /,' EMA-ADJ PKS',
     1045     $         /,'   ABOVE BASE            ---     ---   ',
     1046     $           F11.4,F12.4,F11.3)
     1047   10 FORMAT(    ' SYSTEMATIC RECORD',F10.1,F11.4,F11.4,F12.4,F11.3
     1048     $         /,' BULL.17B ESTIMATE',F10.1,F11.4,F11.4,F12.4,F11.3)
     1049   11 FORMAT(    ' SYSTEMATIC RECORD',F10.1,F11.4,F11.4,F12.4,F11.3
     1050     $         /,' EMA ESTIMATE     ',F10.1,F11.4,F11.4,F12.4,F11.3)
     1051   15 FORMAT(///,'    ANNUAL FREQUENCY CURVE -- DISCHARGES',
     1052     $           ' AT SELECTED EXCEEDANCE PROBABILITIES',
     1053     $        //,'      ANNUAL                            ',
     1054     $           '  ''EXPECTED   ',I2,'-PCT CONFIDENCE LIMITS',
     1055     $         /,'   EXCEEDANCE     BULL.17B    SYSTEMATIC',
     1056     $           ' PROBABILITY''  FOR BULL. 17B ESTIMATES',
     1057     $         /,'   PROBABILITY    ESTIMATE      RECORD  ',
     1058     $           '   ESTIMATE        LOWER        UPPER',  /  )
     1059   16 FORMAT(///,'    ANNUAL FREQUENCY CURVE -- DISCHARGES',
     1060     $           ' AT SELECTED EXCEEDANCE PROBABILITIES',
     1061     $        //,'      ANNUAL                            ',
     1062     $           '  ''EXPECTED       ',I2,'-PCT CONFIDENCE',
     1063     $         /,'   EXCEEDANCE       EMA       SYSTEMATIC',
     1064     $           ' PROBABILITY'' LIMITS FOR EMA ESTIMATES',
     1065     $         /,'   PROBABILITY    ESTIMATE      RECORD  ',
     1066     $           '   ESTIMATE        LOWER        UPPER',  /  )
     1067   20 FORMAT(1X,F11.4,  5A   )
     1068 1010 FORMAT('1',//)
     1069 2011 FORMAT ( 1X, F11.4, 1X, '         -- ',
     1070     $         2X, '(', F6.2, '-year flood below base' )
     1071 2012 FORMAT ( 1X, F11.4, 1X, F12.1,
     1072     $         2X, '(', F6.2, '-year flood )' )
     1073C 203 FORMAT(1X,F12.1)
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 34
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     1074C
     1075C     + + + END SPECIFICATIONS + + +
     1076C
     1077C     PRINT FITTED LOG-PEARSON TYPE III FREQUENCY CURVES PARAMETERS
     1078C     AND ORDINATES
     1079      WRITE(MSG,1010)
     1080      CALL PRTPHD ( 2001, -999, EMAOPT, WDMSFL )
     1081      WRITE(MSG,8)
     1082      IF(IDEBUG.GT.0) THEN
     1083        IF(EMAOPT.EQ.0) THEN
     1084          WRITE(MSG,9) SYSAAV, SYSASD, SYSASK,
     1085     $                 WRCAAV,WRCASD,WRCASK
     1086        ELSE
     1087          WRITE(MSG,19) SYSAAV, SYSASD, SYSASK,
     1088     $                  WRCAAV,WRCASD,WRCASK
     1089        END IF
     1090      END IF
     1091      SYSBAS = 10.**SYSBAS
     1092      WRCBAS = 10.**WRCBAS
     1093C
     1094      IF (EMAOPT.EQ.0) THEN
     1095C       original B-17 estimates
     1096        WRITE(MSG,10)SYSBAS,SYSPAB,SYSUAV,SYSUSD,SYSSKW,
     1097     $               WRCBAS,WRCPAB,WRCUAV,WRCUSD,WRCSKW
     1098        WRITE(MSG,15) INT( CLSIZE*100. + .5)
     1099      ELSE
     1100C       new EMA estimates
     1101        WRITE(MSG,11)SYSBAS,SYSPAB,SYSUAV,SYSUSD,SYSSKW,
     1102     $               WRCBAS,WRCPAB,WRCUAV,WRCUSD,WRCSKW
     1103        WRITE(MSG,16) INT( CLSIZE*100. + .5)
     1104      END IF
     1105C
     1106      IF(INITIP .EQ. 0) THEN
     1107        CALL MOVEI(INDXPT,IPLIST,NINDX)
     1108        CALL SORTI(IPLIST,NINDX)
     1109        INITIP = 1
     1110      ENDIF
     1111C
     1112C     fill in table, 4 significant digits, 1 decimal place and --
     1113C     for no entries.  DECCHX replaced intermal writes to get
     1114C     significant digits - aml 8/93
     1115Ckmf  list arrays
     1116Ckmf  write (99,3001) (iplist(i),10**wrcfc(i),10**sysrfc(i),
     1117Ckmf $                 10**climl(i),10**climu(i), i = 1, mxint)
     1118C3001 format ( 'PRTFIT:',/,'    iplist      wrcfc       sysrfc  ',
     1119Ckmf $         '    climl       climu   ',
     1120Ckmf $       / ( I8, 4X, 4f12.4 ) )
     1121      LEN = 13
     1122      SIGDIG = 4
     1123      DECPLA = 1
     1124      DO 210 I = 1,NINDX
     1125        DO 201 J = 1,5
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 35
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     1126          DWORK(J) = '          -- '
     1127  201   CONTINUE
     1128        J = IPLIST(I)
     1129        PEP = TXPROB(J)
     1130        IF(PEP.LE.SYSPAB) THEN       
     1131C         WRITE(DWORK(2),203) 10.**SYSRFC(J)
     1132          TMP = 10.**SYSRFC(J)
     1133CPRH          TMP = EXP(SYSRFC(J))
     1134          CALL DECCHX (TMP,LEN,SIGDIG,DECPLA,DWORK(2))
     1135          IF (DWORK(2)(13:13) .EQ. ' ') DWORK(2)(13:13) = '0'
     1136C         IF(PEP.LE.WRCPAB) THEN      
     1137C         changed 5/94 by aml in consultation with wt and wk
     1138          IF(PEP.LT.WRCPAB) THEN
     1139C           WRITE(DWORK(1),203) 10.**WRCFC(J)
     1140            TMP = 10.**WRCFC(J)
     1141CPRH            TMP = EXP(WRCFC(J))
     1142            CALL DECCHX (TMP,LEN,SIGDIG,DECPLA,DWORK(1))
     1143            IF (DWORK(1)(13:13) .EQ. ' ') DWORK(1)(13:13) = '0'
     1144            IF(NOEPFC.NE.1) THEN
     1145C              WRITE(DWORK(3),203)  10.**EPFC(J)
     1146               IF (EPFC(J) .LT. 11.0) THEN
     1147C                number not to big for space
     1148c            write(99,*) 'PRTFIT: J,EPFC ',J,EPFC(J)
     1149                 TMP = 10.**EPFC(J)
     1150                 CALL DECCHX (TMP,LEN,SIGDIG,DECPLA,DWORK(3))
     1151                 IF (DWORK(3)(13:13) .EQ. ' ') DWORK(3)(13:13) = '0'
     1152               END IF
     1153            END IF
     1154            IF(NOCLIM.NE.1) THEN      
     1155C             WRITE(DWORK(4),203) 10.**CLIML(J)
     1156              TMP = 10.**CLIML(J)
     1157CPRH              TMP = EXP(CLIML(J))
     1158              CALL DECCHX (TMP,LEN,SIGDIG,DECPLA,DWORK(4))
     1159              IF (DWORK(4)(13:13) .EQ. ' ') DWORK(4)(13:13) = '0'
     1160C             WRITE(DWORK(5),203) 10.**CLIMU(J)
     1161              TMP = 10.**CLIMU(J)
     1162CPRH              TMP = EXP(CLIMU(J))
     1163              CALL DECCHX (TMP,LEN,SIGDIG,DECPLA,DWORK(5))
     1164              IF (DWORK(5)(13:13) .EQ. ' ') DWORK(5)(13:13) = '0'
     1165            END IF
     1166          END IF
     1167          WRITE(MSG,20)  PEP, DWORK
     1168        END IF
     1169  210 CONTINUE
     1170C
     1171Ckmf  Oct 3, 2000, in consultation with wrk
     1172Ckmf  call added to compute and print extra n-year floods
     1173Cprh  updated 11/03 for batch version of PEAKFQ that uses EMA method
     1174Cprh  calls to QEXTRA not needed since EMA calculates these intervals
     1175Cprh      TMP = 1.5
     1176Cprh      CALL QEXTRA ( TMP, XTRPK )
     1177Cprh      IF (XTRPK .GT. 0) THEN
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 36
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     1178Cprh        WRITE (MSG,2012) 1./TMP, XTRPK, TMP
     1179Cprh      ELSE
     1180Cprh        WRITE (MSG,2011) 1./TMP, TMP
     1181Cprh      END IF
     1182Cprh      TMP = 2.33
     1183Cprh      CALL QEXTRA ( TMP, XTRPK )
     1184Cprh      IF (XTRPK .GT. 0) THEN
     1185Cprh        WRITE (MSG,2012) 1./TMP, XTRPK, TMP
     1186Cprh      ELSE
     1187Cprh        WRITE (MSG,2011) 1./TMP, TMP
     1188Cprh      END IF
     1189C
     1190      RETURN
     1191      END
Bytes of stack required for this program unit: 56.


--------------------------------------------------  Symbol Cross Reference  ---------------------------------------------------
Name (Type)           Class          Offset     Context  (d-DO, =-Assignment, /-Initialization, i-Input, o-Output, p-Pointer,
                                                         r-Argument, s-Specification, u-Usage)
-------------------------------------------------------------------------------------------------------------------------------
BIGLOG (REAL)         scalar         316         (I2)4s   (I2)12s
CLIML (REAL)          array          256         (I3)2s    (I3)4s     1156u
CLIMU (REAL)          array          384         (I3)3s    (I3)5s     1161u
CLSIZE (REAL)         scalar         40          (I2)3s   (I2)11s     1098u     1103u
CPAMP1 (REAL)         scalar         344         (I2)6s   (I2)14s
CPAMP2 (REAL)         scalar         348         (I2)6s   (I2)14s
CPAMP3 (REAL)         scalar         352         (I2)6s   (I2)14s
DECCHX                SUBROUTINE                  1012u     1134u     1142u     1150u     1158u     1163u
DECPLA (INTEGER)      scalar                      1001s     1123=     1134r     1134r     1134r     1142r     1142r     1142r
                                                  1150r     1150r     1150r     1158r     1158r     1158r     1163r     1163r
                                                  1163r
DWORK (CHARACTER)     array                       1000s     1126=     1134r     1134r     1134r     1135u     1135=     1142r
                                                  1142r     1142r     1143u     1143=     1150r     1150r     1150r     1151u
                                                  1151=     1158r     1158r     1158r     1159u     1159=     1163r     1163r
                                                  1163r     1164u     1164=     1167o     1167o     1135i     1143i     1151i
                                                  1159i     1164i
EMAOPT (INTEGER)      scalar                       974s      983s     1080r     1083u     1094u     1080r     1080r
EPFC (REAL)           array          128         (I3)2s    (I3)4s     1146u     1149u
EPS1 (REAL)           scalar         320         (I2)5s   (I2)13s
EPS2 (REAL)           scalar         324         (I2)5s   (I2)13s
GAGEB (REAL)          scalar         12          (I4)2s   (I4)10s
GENSKU (REAL)         scalar         0           (I4)2s   (I4)10s
GSKWGT (REAL)         scalar         108         (I4)6s   (I4)10s
GSMAX (REAL)          scalar         32          (I2)3s   (I2)11s
GSMIN (REAL)          scalar         28          (I2)3s   (I2)11s
HISTPD (REAL)         scalar         28          (I4)3s   (I4)10s
HISTPN (REAL)         scalar         100         (I4)6s   (I4)10s
HISTWT (REAL)         scalar         104         (I4)6s   (I4)10s
HRECWO (REAL)         scalar         328         (I2)5s   (I2)13s
HRECWS (REAL)         scalar         336         (I2)5s   (I2)13s
HRECWX (REAL)         scalar         332         (I2)5s   (I2)13s
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 37
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
I (INTEGER)           scalar                      1001s     1128u
IDEBUG (INTEGER)      scalar                       974s      983s     1082u
IGSOPT (INTEGER)      scalar         4           (I4)2s    (I4)9s
INDX1 (INTEGER)       scalar         44          (I2)4s    (I2)9s
INDX2 (INTEGER)       scalar         48          (I2)4s    (I2)9s
INDXPT (INTEGER)      array          56          (I2)4s    (I2)9s     1107r     1107r     1107r
INITIP (INTEGER)      scalar                      1005s     1018/     1106u     1109=
IPLIST (INTEGER)      array                       1005s     1006s     1107r     1107r     1107r     1108r     1108r     1108r
                                                  1128u
IWXMOD (INTEGER)      scalar         372         (I2)7s   (I2)10s
J (INTEGER)           scalar                      1001s     1126u     1128=     1129u     1132u     1140u     1146u     1149u
                                                  1156u     1161u
LEN (INTEGER)         scalar                      1001s     1121=     1134r     1134r     1134r     1142r     1142r     1142r
                                                  1150r     1150r     1150r     1158r     1158r     1158r     1163r     1163r
                                                  1163r
MOVEI                 SUBROUTINE                  1012u     1107u
MSG (INTEGER)         scalar         0           (I2)2s    (I2)8s     1079o     1081o     1084o     1087o     1096o     1098o
                                                  1101o     1103o     1167o
MSL (INTEGER)         scalar         4           (I2)2s    (I2)8s
MXINT (INTEGER)       scalar                     (I7)1s    (I7)2s    (I2)9u   (I2)12u   (I4)12u    (I3)4u    (I3)4u    (I3)4u
                                                 (I3)5u    (I3)5u     1006u
NBGB (INTEGER)        scalar         84          (I4)5s    (I4)9s
NHIOUT (INTEGER)      scalar         92          (I4)5s    (I4)9s
NHIST (INTEGER)       scalar         24          (I4)2s    (I4)9s
NHISTN (INTEGER)      scalar         96          (I4)5s    (I4)9s
NINDX (INTEGER)       scalar         52          (I2)4s    (I2)9s     1107r     1107r     1107r     1108r     1108r     1108r
                                                  1124u
NLWOUT (INTEGER)      scalar         88          (I4)5s    (I4)9s
NMISS (INTEGER)       scalar         76          (I4)5s    (I4)9s
NOCLIM (INTEGER)      scalar         24          (I2)2s    (I2)8s     1154u
NOEPFC (INTEGER)      scalar         20          (I2)2s    (I2)8s     1144u
NOPPOS (INTEGER)      scalar         8           (I2)2s    (I2)8s
NOSYS (INTEGER)       scalar         16          (I2)2s    (I2)8s
NOTRAN (INTEGER)      scalar         12          (I2)2s    (I2)8s
NSYS (INTEGER)        scalar         80          (I4)5s    (I4)9s
PEP (REAL)            scalar                      1002s     1129=     1130u     1138u     1167o
PRTFIT                SUBROUTINE                   973s
PRTPHD                SUBROUTINE                  1080u
QHIOUT (REAL)         scalar         20          (I4)2s   (I4)11s
QLWOUT (REAL)         scalar         16          (I4)2s   (I4)11s
RMSDGS (REAL)         scalar         340         (I2)6s   (I2)14s
RMSEGS (REAL)         scalar         8           (I4)2s   (I4)10s
SIGDIG (INTEGER)      scalar                      1001s     1122=     1134r     1134r     1134r     1142r     1142r     1142r
                                                  1150r     1150r     1150r     1158r     1158r     1158r     1163r     1163r
                                                  1163r
SIGHOT (REAL)         scalar         360         (I2)7s   (I2)15s
SIGLOT (REAL)         scalar         356         (I2)7s   (I2)15s
SORTI                 SUBROUTINE                  1012u     1108u
SUMH (REAL(kind 8))   array          176         (I4)8s   (I4)15s
SUMS (REAL(kind 8))   array          152         (I4)8s   (I4)15s
SYSAAV (REAL)         scalar         132         (I4)7s   (I4)11s     1084o     1087o
SYSASD (REAL)         scalar         136         (I4)7s   (I4)11s     1084o     1087o
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 38
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
SYSASK (REAL)         scalar         140         (I4)7s   (I4)11s     1084o     1087o
SYSBAS (REAL)         scalar         112         (I4)6s   (I4)11s     1091u     1091=     1096o     1101o
SYSMAX (REAL)         scalar         148         (I4)8s   (I4)11s
SYSMIN (REAL)         scalar         144         (I4)8s   (I4)12s
SYSPAB (REAL)         scalar         116         (I4)6s   (I4)12s     1096o     1101o     1130u
SYSRFC (REAL)         array          512         (I3)3s    (I3)5s     1132u
SYSSKW (REAL)         scalar         128         (I4)7s   (I4)12s     1096o     1101o
SYSUAV (REAL)         scalar         120         (I4)6s   (I4)12s     1096o     1101o
SYSUSD (REAL)         scalar         124         (I4)7s   (I4)12s     1096o     1101o
TMP (REAL)            scalar                      1002s     1132=     1134r     1134r     1134r     1140=     1142r     1142r
                                                  1142r     1149=     1150r     1150r     1150r     1156=     1158r     1158r
                                                  1158r     1161=     1163r     1163r     1163r
TXPROB (REAL)         array          184         (I2)4s   (I2)12s     1129u
WCXAUX (REAL)         array          364         (I2)7s   (I2)15s
WDMSFL (INTEGER)      scalar                       974s      983s     1080r     1080r     1080r
WEIBA (REAL)          scalar         36          (I2)3s   (I2)11s
WORK (REAL)           array          200         (I4)8s   (I4)12s
WRCAAV (REAL)         scalar         52          (I4)4s   (I4)13s     1085o     1088o
WRCASD (REAL)         scalar         56          (I4)4s   (I4)13s     1085o     1088o
WRCASK (REAL)         scalar         60          (I4)4s   (I4)13s     1085o     1088o
WRCBAS (REAL)         scalar         32          (I4)3s   (I4)13s     1092u     1092=     1097o     1102o
WRCFC (REAL)          array          0           (I3)2s    (I3)4s     1140u
WRCHHB (REAL)         scalar         64          (I4)4s   (I4)13s
WRCHOT (REAL)         scalar         68          (I4)4s   (I4)13s
WRCLOW (REAL)         scalar         72          (I4)5s   (I4)13s
WRCPAB (REAL)         scalar         36          (I4)3s   (I4)14s     1097o     1102o     1138u
WRCSKW (REAL)         scalar         48          (I4)4s   (I4)14s     1097o     1102o
WRCUAV (REAL)         scalar         40          (I4)3s   (I4)14s     1097o     1102o
WRCUSD (REAL)         scalar         44          (I4)4s   (I4)14s     1097o     1102o
WSKLAT (REAL)         scalar         312         (I2)4s   (I2)12s
ZIPI                  Procedure                   1012u


--------------------------------------------------  Label Cross Reference  ----------------------------------------------------
Label  Context  (d-DO, =-ASSIGN, f-FORMAT, g-GOTO, i-IF statement, s-Specification, r-Argument)
-------------------------------------------------------------------------------------------------------------------------------
10          1047s     1096f
1010        1068s     1079f
11          1049s     1101f
15          1051s     1098f
16          1059s     1103f
19          1041s     1087f
20          1067s     1167f
201         1125d     1127s
2011        1069s
2012        1071s
210         1124d     1169s
8           1021s     1081f
9           1035s     1084f
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 39
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

SUBROUTINE ALIGNP    Compiling Options: -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     1192C
     1193C
     1194C
     1195      SUBROUTINE   ALIGNP
     1196     #                 (IPKPTR, IPKSEQ, NPKS, NHIST, SYSPP)
     1197C
     1198C     + + + PURPOSE + + +
     1199C     ALIGNS SYSTEMATIC-RECORD PROBABILITY-PLOTTING POSITIONS RETURNED
     1200C     BY WCFAGB WITH CORRESPONDING SYSTEMATIC-RECORD DISCHARGES IN THE
     1201C     SEQUENTIALLY ORDERED ARRAY OF INPUT SYSTEMATIC AND HISTORIC PEAKS.
     1202C
     1203C     + + + DUMMY ARGUMENTS + + +
     1204      INTEGER   NPKS, NHIST
     1205      INTEGER   IPKPTR(NPKS), IPKSEQ(NPKS)
     1206      REAL                                  SYSPP(NPKS)
     1207C
     1208C     + + + ARGUMENT DEFINITIONS + + +
     1209C     IPKPTR - ARRAY OF POINTERS FROM RANKED-PEAK LIST TO
     1210C              INPUT-SEQUENTIAL-ORDERED LIST.  IPKPTR CAN BE SET BY
     1211C              CALLING SUBRTNE  SORTM.
     1212C     IPKSEQ - ARRAY OF INPUT-SEQUENCE IDENTIFIERS. HISTORIC PEAKS
     1213C              HAVE  NEGATIVE  VALUES, SYSTEMATIC ONES, POSITIVE.
     1214C     NPKS   -
     1215C     NHIST  -
     1216C     SYSPP  -
     1217C
     1218C     + + + LOCAL VARIABLES + + +
     1219      INTEGER   IH, IS, I
     1220C
     1221C     + + + END SPECIFICATIONS + + +
     1222C
     1223      IF(NHIST.GT.0)  THEN      
     1224        IH = 0
     1225        IS = 0
     1226        DO 150 I = 1,NPKS
     1227          IF(IPKSEQ(IPKPTR(I)).GT.0) THEN       
     1228            IS = IS+1
     1229            SYSPP(I) = SYSPP(NHIST+IS)
     1230          ELSE
     1231            IH = IH+1
     1232            SYSPP(I) = -1.
     1233            IF(IH.GE.NHIST)  GO TO 160
     1234          END IF
     1235  150   CONTINUE
     1236      END IF
     1237C
     1238  160 CONTINUE
     1239C
     1240      RETURN
     1241      END
Bytes of stack required for this program unit: 40.
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 40
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------


--------------------------------------------------  Symbol Cross Reference  ---------------------------------------------------
Name (Type)           Class          Offset     Context  (d-DO, =-Assignment, /-Initialization, i-Input, o-Output, p-Pointer,
                                                         r-Argument, s-Specification, u-Usage)
-------------------------------------------------------------------------------------------------------------------------------
ALIGNP                SUBROUTINE                  1195s
I (INTEGER)           scalar                      1219s     1227u     1229u     1232u
IH (INTEGER)          scalar                      1219s     1224=     1231u     1231=     1233u
IPKPTR (INTEGER)      array                       1196s     1205s     1227u
IPKSEQ (INTEGER)      array                       1196s     1205s     1227u
IS (INTEGER)          scalar                      1219s     1225=     1228u     1228=     1229u
NHIST (INTEGER)       scalar                      1196s     1204s     1223u     1229u     1233u
NPKS (INTEGER)        scalar                      1196s     1204s     1205u     1205u     1206u     1226u
SYSPP (REAL)          array                       1196s     1206s     1229=     1229u     1232=


--------------------------------------------------  Label Cross Reference  ----------------------------------------------------
Label  Context  (d-DO, =-ASSIGN, f-FORMAT, g-GOTO, i-IF statement, s-Specification, r-Argument)
-------------------------------------------------------------------------------------------------------------------------------
150         1226d     1235s
160         1233g     1238s
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 41
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

SUBROUTINE INPUT    Compiling Options: -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     1242C
     1243C
     1244C
     1245      SUBROUTINE   INPUT
     1246     I              (IA1,IA3,INFORM,MAXPKS,EMAOPT,WDMSFL,IBCPUN,
     1247     M               ISTART,
     1248     O               STAID,PKSABG,IWYSN,XQUAL,IQUAL, 
     1249     O               NHIST,NSYS,HISTPD,  QHIOUT,QLWOUT,GAGEB,
     1250     O               GENSKU, RMSEGS,ISKUOP,  NSKIP1,  IRC )
     1251C
     1252C     + + + PURPOSE + + +
     1253C     RE-WRITTEN FOR PRIME VERSION 3.8-P,  WK, 7/88.
     1254C
     1255C     + + + DUMMY ARGUMENTS + + +
     1256      INTEGER   IA1,IA3, INFORM, MAXPKS, EMAOPT, WDMSFL, NHIST, 
     1257     &          NSYS, ISKUOP, NSKIP1, IRC, ISTART, IBCPUN
     1258      INTEGER                     IWYSN(MAXPKS),  IQUAL(MAXPKS)
     1259      REAL       PKSABG(MAXPKS)
     1260      REAL       HISTPD, QHIOUT, QLWOUT, GAGEB, GENSKU, RMSEGS
     1261      CHARACTER*(*)  STAID , XQUAL(MAXPKS)
     1262C
     1263C     + + + ARGUMENT DEFINITIONS + + +
     1264C     IA1   -
     1265C     IA3   -
     1266C     INFORM -
     1267C     MAXPKS -
     1268C     EMAOPT - indicator flag for performing EMA analysis
     1269C              0 - no, just do traditional J407
     1270C              1 - yes, run EMA
     1271C     WDMSFL - FORTRAN unit number of input WDM file
     1272C     IBCPUN - Additional output indicator,
     1273C              0 - none
     1274C              1 - WDM attributes
     1275C              2 - Watstore BCD file
     1276C              3 - Both WDM and BCD
     1277C     ISTART -
     1278C     STAID  -
     1279C     PKSABG -
     1280C     IWYSN  -
     1281C     XQUAL  -
     1282C     IQUAL  -
     1283C     NHIST  -
     1284C     NSYS   -
     1285C     HISTPD -
     1286C     QHIOUT -
     1287C     QLWOUT -
     1288C     GAGEB  -
     1289C     GENSKU -
     1290C     RMSEGS  -
     1291C     ISKUOP -
     1292C     NSKIP1 -
     1293C     IRC    -
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 42
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     1294C
     1295C     + + + LOCAL VARIABLES + + +
     1296      CHARACTER*90   IDSTA
     1297      INTEGER   I
     1298C
     1299C     + + + EXTERNALS + + +
     1300      EXTERNAL   INPUT1, INPUT2, INPUT3
     1301C
     1302C     + + + END SPECIFICATIONS + + +
     1303C
     1304      IRC = 0
     1305      NSKIP1 = 0
     1306C
     1307C
     1308      IF ( INFORM .LE. 0 )  THEN   
     1309C       do nothing
     1310C
     1311      ELSE IF ( INFORM .EQ. 1 )  THEN
     1312        CALL INPUT1(IA1, IA3, IBCPUN,
     1313     I              MAXPKS, STAID, PKSABG, IWYSN, XQUAL,
     1314     O              NHIST, NSYS, HISTPD, QHIOUT, QLWOUT, GAGEB, GENSKU,
     1315     O              RMSEGS,ISKUOP, NSKIP1, IRC)
     1316C
     1317      ELSE IF ( INFORM .EQ. 2 )  THEN
     1318        CALL INPUT2(IA1, MAXPKS, EMAOPT, WDMSFL,
     1319     M              ISTART,
     1320     O              STAID, PKSABG, IWYSN, XQUAL, IQUAL, 
     1321     O              NHIST, NSYS, HISTPD, QHIOUT, QLWOUT, GAGEB,
     1322     O              GENSKU, RMSEGS, ISKUOP, NSKIP1, IRC)
     1323C
     1324      ELSE IF ( INFORM .EQ. 3 ) THEN
     1325        CALL INPUT3(  MAXPKS, IDSTA,PKSABG, IWYSN, NHIST,NSYS,HISTPD,
     1326     $     QHIOUT,QLWOUT,GAGEB,GENSKU,RMSEGS,ISKUOP,  NSKIP1, IRC)
     1327        WRITE( STAID, '(7X,A12,1X,A52)') IDSTA(1:12), IDSTA(13:64)
     1328        DO 80 I = 1,(NHIST+NSYS)
     1329          XQUAL(I) = ' -- '
     1330 80     CONTINUE
     1331C
     1332      ELSE
     1333        STOP 233
     1334      END IF
     1335C
     1336      RETURN
     1337      END
Bytes of stack required for this program unit: 120.


--------------------------------------------------  Symbol Cross Reference  ---------------------------------------------------
Name (Type)           Class          Offset     Context  (d-DO, =-Assignment, /-Initialization, i-Input, o-Output, p-Pointer,
                                                         r-Argument, s-Specification, u-Usage)
-------------------------------------------------------------------------------------------------------------------------------
EMAOPT (INTEGER)      scalar                      1246s     1256s     1318r     1318r     1318r
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 43
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
GAGEB (REAL)          scalar                      1249s     1260s     1314r     1312r     1312r     1321r     1318r     1318r
                                                  1326r     1325r     1325r
GENSKU (REAL)         scalar                      1250s     1260s     1314r     1312r     1312r     1322r     1318r     1318r
                                                  1326r     1325r     1325r
HISTPD (REAL)         scalar                      1249s     1260s     1314r     1312r     1312r     1321r     1318r     1318r
                                                  1325r     1325r     1325r
I (INTEGER)           scalar                      1297s     1329u
IA1 (INTEGER)         scalar                      1246s     1256s     1312r     1312r     1312r     1318r     1318r     1318r
IA3 (INTEGER)         scalar                      1246s     1256s     1312r     1312r     1312r
IBCPUN (INTEGER)      scalar                      1246s     1257s     1312r     1312r     1312r
IDSTA (CHARACTER)     scalar                      1296s     1325r     1325r     1325r     1327o     1327o     1327o     1327o
INFORM (INTEGER)      scalar                      1246s     1256s     1308u     1311u     1317u     1324u
INPUT                 SUBROUTINE                  1245s
INPUT1                SUBROUTINE                  1300u     1312u
INPUT2                SUBROUTINE                  1300u     1318u
INPUT3                SUBROUTINE                  1300u     1325u
IQUAL (INTEGER)       array                       1248s     1258s     1320r     1318r     1318r
IRC (INTEGER)         scalar                      1250s     1257s     1304=     1315r     1312r     1312r     1322r     1318r
                                                  1318r     1326r     1325r     1325r
ISKUOP (INTEGER)      scalar                      1250s     1257s     1315r     1312r     1312r     1322r     1318r     1318r
                                                  1326r     1325r     1325r
ISTART (INTEGER)      scalar                      1247s     1257s     1319r     1318r     1318r
IWYSN (INTEGER)       array                       1248s     1258s     1313r     1312r     1312r     1320r     1318r     1318r
                                                  1325r     1325r     1325r
MAXPKS (INTEGER)      scalar                      1246s     1256s     1258u     1258u     1259u     1261u     1313r     1312r
                                                  1312r     1318r     1318r     1318r     1325r     1325r     1325r
NHIST (INTEGER)       scalar                      1249s     1256s     1314r     1312r     1312r     1321r     1318r     1318r
                                                  1325r     1325r     1325r     1328u
NSKIP1 (INTEGER)      scalar                      1250s     1257s     1305=     1315r     1312r     1312r     1322r     1318r
                                                  1318r     1326r     1325r     1325r
NSYS (INTEGER)        scalar                      1249s     1257s     1314r     1312r     1312r     1321r     1318r     1318r
                                                  1325r     1325r     1325r     1328u
PKSABG (REAL)         array                       1248s     1259s     1313r     1312r     1312r     1320r     1318r     1318r
                                                  1325r     1325r     1325r
QHIOUT (REAL)         scalar                      1249s     1260s     1314r     1312r     1312r     1321r     1318r     1318r
                                                  1326r     1325r     1325r
QLWOUT (REAL)         scalar                      1249s     1260s     1314r     1312r     1312r     1321r     1318r     1318r
                                                  1326r     1325r     1325r
RMSEGS (REAL)         scalar                      1250s     1260s     1315r     1312r     1312r     1322r     1318r     1318r
                                                  1326r     1325r     1325r
STAID (CHARACTER)     scalar                      1248s     1261s     1313r     1312r     1312r     1320r     1318r     1318r
                                                  1327o     1327o
WDMSFL (INTEGER)      scalar                      1246s     1256s     1318r     1318r     1318r
XQUAL (CHARACTER)     array                       1248s     1261s     1313r     1312r     1312r     1320r     1318r     1318r
                                                  1329=


--------------------------------------------------  Label Cross Reference  ----------------------------------------------------
Label  Context  (d-DO, =-ASSIGN, f-FORMAT, g-GOTO, i-IF statement, s-Specification, r-Argument)
-------------------------------------------------------------------------------------------------------------------------------
80          1328d     1330s
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 44
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

SUBROUTINE INPUT2    Compiling Options: -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     1338C
     1339C
     1340C
     1341      SUBROUTINE   INPUT2
     1342     I                 (  MESSFL, MAXPKS, EMAOPT, WDMSFL,
     1343     M                    ISTART,
     1344     O                    STAID, PKSABG, IWYSN, XQUAL, IQUAL, 
     1345     O                    NHIST, NSYS, HISTPD, QHIOUT, QLWOUT, GAGEB,
     1346     O                    GENSKU, RMSEGS, ISKUOP, NSKIP1, IRC )
     1347C
     1348C     + + + PURPOSE + + +
     1349C     GETS INPUT DATA FROM WATSTORE PEAK-FILE PUNCHED-CARD RETRIEVAL
     1350C
     1351C     + + + HISTORY + + +
     1352C     ORIGINALLY WRITTEN AS INPUT3 FOR VECTOR-FORMAT PEAK FILE DATA. WK 5/79.
     1353C     REV  1/81 WK - FOR B-17-B - TO PASS RMSEGS DATA.
     1354C     RE-WRITTEN AS INPUT2 FOR PRIME VERSION 3.8.   WK, 7/88.
     1355C     Updated for batch version of PEAKFQ, 9/03
     1356C     Paul Hummel of AQUA TERRA Consultants
     1357C
     1358C     + + + DUMMY ARGUMENTS + + +
     1359      INTEGER   MAXPKS, NHIST, NSYS, ISKUOP, NSKIP1, IRC, ISTART
     1360      INTEGER   MESSFL,         IWYSN(MAXPKS) , IQUAL(MAXPKS)
     1361      INTEGER   EMAOPT, WDMSFL
     1362      REAL      PKSABG(MAXPKS)
     1363      REAL      HISTPD, QHIOUT, QLWOUT, GAGEB, GENSKU, RMSEGS
     1364      CHARACTER*(*) XQUAL(MAXPKS)
     1365      CHARACTER*(*) STAID
     1366C
     1367C     + + + ARGUMENT DEFINITIONS + + +
     1368C     MESSFL - Fortran unit number of AIDE message file
     1369C     ISTART - flag 1st time = 0, else > 0.
     1370C     EMAOPT - indicator flag for performing EMA analysis
     1371C              0 - no, just do traditional J407
     1372C              1 - yes, run EMA
     1373C     WDMSFL - FORTRAN unit number of input WDM file
     1374C     MAXPKS - MAX NUMBER OF PEAKS THAT CAN BE STORED IN DATA ARRAYS
     1375C     STAID  - CHARACTER STRING STATION ID NO AND NAME --
     1376C              1-15 = 15-DIGIT STATION ID NO.  (8-DIGIT D.S. ORDER NO,
     1377C              RIGHT JUST.)
     1378C              16-20 = AGENCY CODE
     1379C              21-78 = STATION NAME, LEFT JUSTIFIED.
     1380C              79-90 = USED BY J407.
     1381C     PKSABG - FLOOD PEAK DISCHARGES --
     1382C              HISTORICAL VALUES IN FIRST NHIST (IF ANY)
     1383C              FOLLOWED BY NSYS SYSTEMATIC PKS.
     1384C     IWYSN  - WATER-YEARS OR SEQUENCE NUMBERS OF PKSABG PEAKS--
     1385C              WATER-YRS OR SEQ NOS OF HISTORIC PEAKS ARE NEGATIVE-VALUED
     1386C              VALUES FOR SYSTEMATIC PKS ARE POSITIVE.
     1387C     XQUAL  - QUALIFICATION CODES FOR PKSABG  --   CHARACTER
     1388C     IQUAL  - QUALIFICATION CODES FOR PKSABG  --   INTEGER
     1389C     NHIST  - NUMBER  OF HISTORIC peaks returned
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 45
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     1390C     NSYS   - number of systematic peaks
     1391C     HISTPD - LENGTH OF HISTORIC PERIOD
     1392C     QHIOUT - USER-SET HIGH- OUTLIER DISCHARGE THRESHOLDS
     1393C     QLWOUT - USER-SET low-outlier discharge threshold
     1394C     GAGEB  - GAGE BASE DISCHARGE
     1395C     GENSKU - GENERALIZED SKEW
     1396C     RMSEGS - RMS ERROR OF GENERALIZED SKEW
     1397C     ISKUOP - GEN.SKEW OPTION -- 1= GEN SKU, 0=WTD SKU, -1= STA SKU.
     1398C     NSKIP1 - NUMBER OF STATIONS SKIPPED BECAUSE OF INPUT ERRORS
     1399C     IRC    - RETURN CODE - 0=NO ERROR, 1=ERRORS, 2=END OF FILE, 3=BOTH
     1400C
     1401C     + + + COMMON BLOCKS + + +
     1402      INCLUDE 'clunit.inc'
     1403      INCLUDE 'cjobop.inc'
     1404C
     1405C     + + + LOCAL VARIABLES + + +
     1406      REAL      AUX(13),  FLAT, FLONG, GAGEBT, XSYSPK,XHSTPK
     1407      LOGICAL   BIT(15) ,  NOHIST,  REJECT
     1408      CHARACTER*1   LQCODE(6)
     1409      CHARACTER*4  LREG
     1410Cprh      CHARACTER*15 CD
     1411      CHARACTER*18 CURSTA
     1412      INTEGER   MSG, NOBS, IBEGYR, IENDYR, IHOPTI, IKROPT, I, IBEGIN,
     1413     &          IEND, IPK, LOOPBK, OKFG
     1414Cprh                , K, L15, IRET, SCLU, SGRP,
     1415Cprh     $          IVAL(2), CVAL(3), L3, L2, L7, L4, L1, L8,
     1416Cprh     $          L6, L9, L10
     1417C
     1418C     + + + FUNCTIONS + + +
     1419      INTEGER   IBITEX
     1420      REAL      WCFGSM
     1421      LOGICAL   DOSTATION
     1422C
     1423C     + + + INTRINSICS + + +
     1424      INTRINSIC   AMAX1, ABS, INT
     1425C
     1426C     + + + EXTERNALS + + +
     1427      EXTERNAL   PKFRD4, WCFGSM, IBITEX, LFTSTR
     1428      EXTERNAL   DOSTATION, PARSESTASPECS
     1429Cprh      EXERNAL    Q1EDIT, Q1INIT, QGETR
     1430Cprh      EXTERNAL   QSETR, QSETI, QGETI, QSETCO, QGETCO, QSTCTF
     1431Cprh      EXTERNAL   ZSTCMA, QSETRB, QGETRB
     1432C
     1433C     + + + DATA INITIALIZATIONS + + +
     1434      DATA          LQCODE   /'D','L','K','H','G','X'/
     1435C
     1436C     + + + FORMATS + + + 
     1437  593 FORMAT(/' *** INPUT2 - HISTORIC PEAKS OVERFLOWED -',2I6,
     1438     $        3X, 30A1//' *** SKIPPING FOR NEXT STATION.')
     1439  403 FORMAT(/' *** INPUT2 - PEAK COUNT EXCEEDS STORAGE CAPACITY',
     1440     $       I9,2X,30A1//' *** SKIPPING FOR NEXT STATION')
     1441  486 FORMAT(/' *** INPUT2 - REQUESTED YEARS NOT IN RECORD',4I8,3X,
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 46
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     1442     $        30A1/  /' *** SKIPPING FOR NEXT STATION.')
     1443  493 FORMAT(I4,'-',I4)
     1444C
     1445C     + + + END SPECIFICATIONS + + +
     1446C
     1447      MSG = MSG1
     1448Cprh      L1 = 1
     1449Cprh      L2 = 2
     1450Cprh      L3 = 3
     1451Cprh      L4 = 4
     1452Cprh      L6 = 6
     1453Cprh      L7 = 7
     1454Cprh      L8 = 8
     1455Cprh      L9 = 9
     1456Cprh      L10= 10
     1457Cprh      L15= 15
     1458      NSKIP1 = 0
     1459      NSYS   = 0
     1460      NHIST  = 0
     1461Cprh      SCLU   = 121
     1462C
     1463  100 CONTINUE
     1464        LOOPBK = 0
     1465        CALL PKFRD4( INCRD, MSG1, MAXPKS, EMAOPT, WDMSFL,
     1466     M               ISTART, STAID, AUX, NOBS, PKSABG(21), 
     1467     M               IQUAL(21), IWYSN(21), IRC, 
     1468     O               XSYSPK, XHSTPK)
     1469C       note PKSABG are offset for space for historic peaks
     1470C
     1471        IF (IRC.LT.2)  THEN  
     1472C         not end of file so process
     1473C
     1474          IF(IRC.EQ.1)  NSKIP1 = NSKIP1 + 1
     1475C
     1476          CURSTA = TRIM(STAID(1:15))
     1477          IF (ALLSOM .EQ. 2) THEN
     1478C           check to see if this is a station user wanted
     1479            OKFG = 0
     1480C           call to DOSTATION will update argument CURSTA with an index 
     1481C           if multiple instances of this station are encountered
     1482            IF (DOSTATION(ISTART,CURSTA)) OKFG = 1
     1483Cprh            DO 110 K = 1,20
     1484Cprh              CD = DOSTA(K)
     1485Cprh              CALL LFTSTR(L15,CD) 
     1486Cprh              IF (CS .EQ. CD) OKFG = 1                     
     1487Cprh 110        CONTINUE
     1488          ELSE
     1489C           do them all
     1490            OKFG = 1
     1491          END IF
     1492C
     1493          IF(NOBS+20.GT.MAXPKS .OR. OKFG .EQ. 0) THEN        
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 47
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     1494C           too many peaks or 
     1495            IF (OKFG .EQ. 1) WRITE(MSG,403)NOBS, STAID(1:30)
     1496            NSKIP1 = NSKIP1 + 1
     1497            LOOPBK = 1
     1498C
     1499          ELSE
     1500Cprh            IF (IMODFG .EQ. 1) THEN
     1501CprhC             user wants to modify options
     1502Cprh              CALL ZSTCMA (16,1)
     1503Cprh              SGRP = 67
     1504Cprh 120          CONTINUE
     1505Cprh                CALL Q1INIT (MESSFL, SCLU, SGRP)
     1506Cprh                IVAL(1) = INT(AUX(7))
     1507Cprh                IVAL(2) = INT(AUX(8))
     1508Cprh                CALL QSETI (L2,IVAL)       
     1509Cprh                CVAL(2) = INT(AUX(11))+ 1
     1510Cprh                CVAL(1) = INT(AUX(9)) + 2
     1511Cprh                CALL QSETCO (L2,CVAL)
     1512Cprh                CALL QSETRB (L1,L1,AUX(2))
     1513Cprh                CALL QSETRB (L2,L2,AUX(4))
     1514Cprh                CALL QSETRB (L2,L4,AUX(12))
     1515Cprh                CALL QSETRB (L1,L6,AUX(3))
     1516Cprh                CALL QSETRB (L1,L7,XHSTPK)
     1517Cprh                CALL QSETRB (L1,L8,XSYSPK)
     1518Cprh                IF (AUX(1).LT.-9999.0 .AND. AUX(12).GT.0.0 .AND.
     1519Cprh     $            AUX(13).GT.0.0) THEN
     1520Cprh                  AUX(1)  = WCFGSM(AUX(12),AUX(13))
     1521Cprh                END IF
     1522Cprh                IF (AUX(1).LT.-998.0) THEN
     1523Cprh                  CALL QSETRB (L1,L9,-999.0)
     1524Cprh                ELSE
     1525Cprh                  CALL QSETRB (L1,L9,AUX(1))
     1526Cprh                END IF
     1527Cprh                CALL QSETRB (L1,L10,AUX(6))
     1528Cprh                CALL QSTCTF (L3,L15,STAID(1:15))
     1529Cprh                CALL Q1EDIT (IRET)
     1530Cprh              IF (IRET .EQ. -1) GO TO 120
     1531Cprh              CALL QGETI (L2, IVAL)
     1532Cprh              AUX(7) = REAL(IVAL(1))
     1533Cprh              AUX(8) = REAL(IVAL(2))
     1534Cprh              CALL QGETCO (L2,CVAL)
     1535Cprh              AUX(9) = REAL(CVAL(1)-2)
     1536Cprh              AUX(11)= REAL(CVAL(2)-1)  
     1537Cprh              CALL QGETRB (L1,L1,AUX(2))
     1538Cprh              CALL QGETRB (L2,L2,AUX(4))
     1539Cprh              CALL QGETRB (L2,L4,AUX(12))
     1540Cprh              CALL QGETRB (L1,L6,AUX(3))
     1541Cprh              CALL QGETRB (L1,L9,AUX(1))
     1542Cprh              IF (AUX(1) .LT. -998.0) THEN
     1543Cprh                AUX(1) = -1.01E29         
     1544Cprh              END IF
     1545Cprh              CALL QGETRB (L1,L10,AUX(6))
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 48
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     1546Cprh              CALL ZSTCMA (16,0)
     1547Cprh            ELSE
     1548Cprh              IRET = 1
     1549Cprh            END IF
     1550C
     1551Cprh            IF (IRET .NE. 7) THEN
     1552C             not too many peaks & user wants to continue
     1553              GENSKU    =  AUX(1)
     1554              HISTPD    =  AUX(2)
     1555              QHIOUT    =  AUX(3)
     1556              QLWOUT    =  AUX(4)
     1557              GAGEB     =  AUX(5)
     1558              RMSEGS    =  AUX(6)
     1559              IBEGYR    =  AUX(7)            
     1560              IENDYR    =  AUX(8)             
     1561              IHOPTI    =  AUX(10)
     1562              ISKUOP    =  AUX(9)      
     1563              IKROPT    =  AUX(11)
     1564              FLAT      =  AUX(12)
     1565              FLONG     =  AUX(13)
     1566C
     1567              IF( GENSKU  .LT. -9999.9)  GENSKU  = WCFGSM(FLAT,FLONG)
     1568
     1569C             update specs
     1570              CALL PARSESTASPECS (CURSTA,XSYSPK,XHSTPK,
     1571     M                            GENSKU,HISTPD,QHIOUT,QLWOUT,
     1572     M                            GAGEB,RMSEGS,IBEGYR,IENDYR,
     1573     M                            ISKUOP,IKROPT,FLAT,FLONG)
     1574              
     1575C 
     1576              NOHIST = HISTPD.LE.0. .AND. QHIOUT.LE.0. .AND. IHOPTI.LE.0
     1577              GAGEBT= 0.
     1578C
     1579C             find first and last years of record
     1580              IF(IENDYR.LE.0) IENDYR = 9999
     1581              IF(IWYSN(20+NOBS).LT.IBEGYR. OR. IWYSN(21).GT.IENDYR)
     1582     $          GO TO 485
     1583C
     1584                DO 470 I = 1, NOBS
     1585                  IF(IWYSN(20+I).GE.IBEGYR) GO TO 475
     1586  470           CONTINUE
     1587                GO TO 485
     1588C
     1589  475         CONTINUE
     1590                IBEGIN = 20 + I
     1591                DO 480 I=1,NOBS
     1592                  IF(IWYSN(21+NOBS-I).LE.IENDYR) GO TO 490
     1593  480           CONTINUE
     1594C
     1595  485         CONTINUE
     1596                WRITE(MSG,486)IBEGYR,IENDYR,IWYSN(21),IWYSN(20+NOBS),
     1597     $                        STAID(1:30)
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 49
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     1598                NSKIP1  = NSKIP1 + 1
     1599                LOOPBK = 1
     1600C
     1601  490         CONTINUE
     1602C 
     1603              IF (LOOPBK .EQ. 0) THEN
     1604C               first/last year within record continue processing
     1605                IEND = 21 + NOBS - I
     1606                WRITE(STAID(69:78), 493)IWYSN(IBEGIN), IWYSN(IEND)
     1607C
     1608C               select peaks for input
     1609                DO 590  IPK = IBEGIN, IEND
     1610C                 examine quality codes
     1611                  DO 510 I = 1,15
     1612                    BIT(  I ) =  IBITEX(IQUAL(IPK), I) .NE. 0
     1613  510             CONTINUE
     1614                  LREG = ' '
     1615                  IF( BIT(3)) LREG(1:1) = LQCODE(1)
     1616                  IF(BIT( 8)) LREG(1:1) = LQCODE(5)
     1617                  IF(BIT( 8).AND.BIT(3)) LREG(1:1) = LQCODE(6)
     1618                  IF(BIT(4))  LREG(2:2) = LQCODE(2)
     1619                  IF(BIT(6).OR.BIT(12)) LREG(3:3) = LQCODE(3)
     1620                  IF(BIT(7))  LREG(4:4) = LQCODE(4)
     1621                  XQUAL(IPK) = LREG
     1622C
     1623C                 act on codes
     1624                  REJECT = PKSABG(IPK).LT.0. .OR. BIT(3) .OR. BIT( 8)
     1625     $                    .OR.((BIT(6).OR.BIT(12)) .AND. IKROPT.LE.0)
     1626                  REJECT = REJECT .OR. (BIT(7).AND.NOHIST)
     1627                  REJECT = REJECT .OR. (BIT(7).AND.
     1628     $                     PKSABG(IPK).LT.(QHIOUT+0.5)
     1629     $                     .AND. IHOPTI.LE.0)
     1630                  REJECT = REJECT .OR. (BIT(7) .AND. HISTPD.LE.0)
     1631                  IF( REJECT ) THEN
     1632                    PKSABG(IPK) = -( ABS(PKSABG(IPK))+1E-4 )
     1633C
     1634                  ELSE
     1635                    IF(BIT(4)) GAGEBT= AMAX1(GAGEBT,PKSABG(IPK))
     1636C
     1637C                   move historic peaks
     1638                    IF(BIT(7)) THEN
     1639                      NHIST = NHIST + 1
     1640                      IWYSN (NHIST) =  -IWYSN  (IPK)
     1641                      PKSABG(NHIST) =  PKSABG  (IPK)
     1642                      XQUAL (NHIST) =  XQUAL   (IPK)
     1643                      IQUAL (IPK) = -999
     1644C                     CODE IQUAL = -999 TO DENOTE MOVED HIST PEAK
     1645                    END IF   
     1646                  END IF  
     1647  590           CONTINUE
     1648C
     1649                IF(GAGEB.LE.0.) GAGEB = GAGEBT
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 50
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     1650C  
     1651                IF(NHIST.GT. IBEGIN) THEN      
     1652                  WRITE(MSG,593) NHIST, IBEGIN, STAID(1:30)
     1653                  NSKIP1 = NSKIP1 + 1
     1654                  LOOPBK = 1
     1655C 
     1656                ELSE
     1657C                 CLOSE UP PEAKS FOR RETURN TO INPUT
     1658                  DO 630 IPK = IBEGIN, IEND
     1659                    IF(IQUAL(IPK).NE.-999) THEN      
     1660                      NSYS = NSYS + 1
     1661                      XQUAL  (NHIST+NSYS) = XQUAL  (IPK)
     1662                      PKSABG (NHIST+NSYS) = PKSABG (IPK)
     1663                      IWYSN  (NHIST+NSYS) = IWYSN  (IPK)
     1664                    END IF
     1665  630             CONTINUE
     1666                END IF
     1667C
     1668              END IF
     1669Cprh            ELSE
     1670CprhC             user did an intrpt
     1671Cprh              LOOPBK = 0
     1672Cprh              IRC = 2
     1673Cprh            END IF
     1674          END IF 
     1675C
     1676        IF (LOOPBK .EQ. 1) GO TO 100
     1677C     
     1678      END IF
     1679C
     1680      RETURN
     1681      END
Bytes of stack required for this program unit: 200.


--------------------------------------------------  Symbol Cross Reference  ---------------------------------------------------
Name (Type)           Class          Offset     Context  (d-DO, =-Assignment, /-Initialization, i-Input, o-Output, p-Pointer,
                                                         r-Argument, s-Specification, u-Usage)
-------------------------------------------------------------------------------------------------------------------------------
ALLSOM (INTEGER)      scalar         44          (I1)4s    (I1)7s     1477u
AUX (REAL)            array                       1406s     1466r     1465r     1465r     1553u     1554u     1555u     1556u
                                                  1557u     1558u     1559u     1560u     1561u     1562u     1563u     1564u
                                                  1565u
BIT (LOGICAL)         array                       1407s     1612=     1615u     1616u     1617u     1617u     1618u     1619u
                                                  1619u     1620u     1624u     1624u     1625u     1625u     1626u     1627u
                                                  1630u     1635u     1638u
CURSTA (CHARACTER)    scalar                      1411s     1476=     1482r     1482r     1482r     1570r     1570r     1570r
DOSTA (CHARACTER)     array          48          (I1)4s    (I1)9s
DOSTATION             FUNCTION                    1421s     1428u     1482u
EMAOPT (INTEGER)      scalar                      1342s     1361s     1465r     1465r     1465r
FLAT (REAL)           scalar                      1406s     1564=     1567r     1567r     1567r     1573r     1570r     1570r
FLONG (REAL)          scalar                      1406s     1565=     1567r     1567r     1567r     1573r     1570r     1570r
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 51
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
GAGEB (REAL)          scalar                      1345s     1363s     1557=     1572r     1570r     1570r     1649u     1649=
GAGEBT (REAL)         scalar                      1406s     1577=     1635r     1635r     1635=     1649u
GENSKU (REAL)         scalar                      1346s     1363s     1553=     1567u     1567=     1571r     1570r     1570r
GRFMT (CHARACTER)     scalar         348         (I1)4s    (I1)8s
HISTPD (REAL)         scalar                      1345s     1363s     1554=     1571r     1570r     1570r     1576u     1630u
I (INTEGER)           scalar                      1412s     1585u     1590u     1592u     1605u     1612u     1612r     1612r
                                                  1612r
IBCPUN (INTEGER)      scalar         4           (I1)2s    (I1)5s
IBEGIN (INTEGER)      scalar                      1412s     1590=     1606u     1609u     1651u     1652o     1658u
IBEGYR (INTEGER)      scalar                      1412s     1559=     1572r     1570r     1570r     1581u     1585u     1596o
IBITEX                FUNCTION                    1419s     1427u     1612u
IDEBUG (INTEGER)      scalar         12          (I1)2s    (I1)5s
IEND (INTEGER)        scalar                      1413s     1605=     1606u     1609u     1658u
IENDYR (INTEGER)      scalar                      1412s     1560=     1572r     1570r     1570r     1580u     1580=     1581u
                                                  1592u     1596o
IHOPTI (INTEGER)      scalar                      1412s     1561=     1576u     1629u
IKROPT (INTEGER)      scalar                      1412s     1563=     1573r     1570r     1570r     1625u
IMODFG (INTEGER)      scalar         40          (I1)4s    (I1)7s
INCRD (INTEGER)       scalar         4           (I5)2s    (I5)3s     1465r     1465r     1465r
INFIL2 (INTEGER)      scalar         12          (I5)2s    (I5)3s
INFORM (INTEGER)      scalar         16          (I5)2s    (I5)3s
INPUT2                SUBROUTINE                  1341s
IPK (INTEGER)         scalar                      1413s     1612u     1621u     1624u     1628u     1632u     1632u     1635u
                                                  1640u     1641u     1642u     1643u     1659u     1661u     1662u     1663u
IPLTOP (INTEGER)      scalar         0           (I1)2s    (I1)5s
IPPOS (INTEGER)       scalar         16          (I1)2s    (I1)5s
IPRTOP (INTEGER)      scalar         8           (I1)2s    (I1)5s
IPUNCH (INTEGER)      scalar         8           (I5)2s    (I5)3s
IQUAL (INTEGER)       array                       1344s     1360s     1467r     1465r     1465r     1612r     1612r     1612r
                                                  1643=     1659u
IRC (INTEGER)         scalar                      1346s     1359s     1467r     1465r     1465r     1471u     1474u
ISKUDP (INTEGER)      scalar         20          (I1)3s    (I1)6s
ISKUOP (INTEGER)      scalar                      1346s     1359s     1562=     1573r     1570r     1570r
ISTART (INTEGER)      scalar                      1343s     1359s     1466r     1465r     1465r     1482r     1482r     1482r
IWYSN (INTEGER)       array                       1344s     1360s     1467r     1465r     1465r     1581u     1581u     1585u
                                                  1592u     1596o     1596o     1606o     1606o     1640u     1640=     1663=
                                                  1663u
JOBTTL (CHARACTER)    scalar         0          (I1)11s   (I1)12s
LFTSTR                Procedure                   1427u
LOOPBK (INTEGER)      scalar                      1413s     1464=     1497=     1599=     1603u     1654=     1676u
LQCODE (CHARACTER)    array                       1408s     1434/     1615u     1616u     1617u     1618u     1619u     1620u
LREG (CHARACTER)      scalar                      1409s     1614=     1615=     1616=     1617=     1618=     1619=     1620=
                                                  1621u
MAXPKS (INTEGER)      scalar                      1342s     1359s     1360u     1360u     1362u     1364u     1465r     1465r
                                                  1465r     1493u
MESSFL (INTEGER)      scalar                      1342s     1360s
MOROPT (INTEGER)      array          32          (I1)3s    (I1)6s
MSG (INTEGER)         scalar                      1412s     1447=     1495o     1596o     1652o
MSG1 (INTEGER)        scalar         0           (I5)2s    (I5)3s     1447u     1465r     1465r     1465r
NHIST (INTEGER)       scalar                      1345s     1359s     1460=     1639u     1639=     1640u     1641u     1642u
                                                  1651u     1652o     1661u     1662u     1663u
NOBS (INTEGER)        scalar                      1412s     1466r     1465r     1465r     1493u     1495o     1581u     1584u
                                             Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 52
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
                                                  1591u     1592u     1596u     1605u
NOCLM (INTEGER)       scalar         28          (I1)3s    (I1)6s
NOHIST (LOGICAL)      scalar                      1407s     1576=     1626u
NOXPA (INTEGER)       scalar         24          (I1)3s    (I1)6s
NSKIP1 (INTEGER)      scalar                      1346s     1359s     1458=     1474u     1474=     1496u     1496=     1598u
                                                  1598=     1653u     1653=
NSYS (INTEGER)        scalar                      1345s     1359s     1459=     1660u     1660=     1661u     1662u     1663u
OKFG (INTEGER)        scalar                      1413s     1479=     1482=     1490=     1493u     1495u
PARSESTASPECS         SUBROUTINE                  1428u     1570u
PKFRD4                SUBROUTINE                  1427u     1465u
PKSABG (REAL)         array                       1344s     1362s     1466r     1465r     1465r     1624u     1628u     1632r
                                                  1632=     1635r     1635r     1641=     1641u     1662=     1662u
QHIOUT (REAL)         scalar                      1345s     1363s     1555=     1571r     1570r     1570r     1576u     1628u
QLWOUT (REAL)         scalar                      1345s     1363s     1556=     1571r     1570r     1570r
REJECT (LOGICAL)      scalar                      1407s     1624=     1626u     1626=     1627u     1627=     1630u     1630=
                                                  1631u
RMSEGS (REAL)         scalar                      1346s     1363s     1558=     1572r     1570r     1570r
SPCFUN (INTEGER)      scalar         20          (I5)2s    (I5)3s
STAID (CHARACTER)     scalar                      1344s     1365s     1466r     1465r     1465r     1476r     1495o     1495o
                                                  1597o     1597o     1606o     1606o     1652o     1652o
WCFGSM                FUNCTION                    1420s     1427u     1567u
WDMSFL (INTEGER)      scalar                      1342s     1361s     1465r     1465r     1465r
XHSTPK (REAL)         scalar                      1406s     1468r     1465r     1465r     1570r     1570r     1570r
XQUAL (CHARACTER)     array                       1344s     1364s     1621=     1642=     1642u     1661=     1661u
XSYSPK (REAL)         scalar                      1406s     1468r     1465r     1465r     1570r     1570r     1570r


--------------------------------------------------  Label Cross Reference  ----------------------------------------------------
Label  Context  (d-DO, =-ASSIGN, f-FORMAT, g-GOTO, i-IF statement, s-Specification, r-Argument)
-------------------------------------------------------------------------------------------------------------------------------
100         1463s     1676g
403         1439s     1495f
470         1584d     1586s
475         1585g     1589s
480         1591d     1593s
485         1582g     1587g     1595s
486         1441s     1596f
490         1592g     1601s
493         1443s     1606f
510         1611d     1613s
590         1609d     1647s
593         1437s     1652f
630         1658d     1665s
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 53
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

SUBROUTINE PKFRD4    Compiling Options: -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     1682C
     1683C
     1684C
     1685      SUBROUTINE   PKFRD4
     1686     I                  ( IN,MSG, MXPKS, EMAOPT, WDMSFL,
     1687     M                    ISTART, STAID, AUX, NPKS, PKQ,
     1688     M                    IPKQ, IWYEAR, IER,
     1689     O                    XSYSPK, XHSTPK)
     1690C
     1691C     + + + PURPOSE + + +
     1692C     Reads annual-peak discharge CARD-format retrieval data from
     1693C     AMDAHL/WATSTORE peak retrieval PGM.  It also will handle
     1694C     WATSTORE/J407 I-CARDS that immediately follow the Y-CARD.
     1695C
     1696C     IT IS ASSUMED THAT THE RETRIEVAL WAS DONE WITH RETRIEVAL
     1697C     OPTIONS IN THE M CARD AS FOLLOWS --
     1698C       M-COL 47 = H -- HEADER RECORDS
     1699C       M-COL 48 = 3 -- TYPE-3 ANNUAL-PEAK RECORDS
     1700C
     1701C     IF AN ERROR IS FOUND, THIS ROUTINE AUTOMATICALLY SKIPS TO
     1702C     THE START OF THE NEXT STATION.   THUS IT ALWAYS RETURNS WITH
     1703C     A RECORD GOOD FOR PROCESSING, EXCEPT AT THE END OF THE FILE
     1704C     (IER .GE. 2).
     1705C
     1706C     Bad cards (not Y,Z,N,H,I,2,3, or 4 on column 1) are reported
     1707C     on a temporary file (UNIT 91) and are appended to the output
     1708C     file.
     1709C
     1710C     + + + HISTORY + + +
     1711C     Updated 4/05 for batch version of PEAKFQ,
     1712C     show station being processed and 
     1713C     then only the cards that were ignored
     1714C     (i.e. don't show text explaining which cards are ignored)
     1715C
     1716C     + + + DUMMY ARGUMENTS + + +
     1717      INTEGER   IN, MSG, MXPKS, NPKS, IER, EMAOPT, WDMSFL, ISTART
     1718      INTEGER   IPKQ(MXPKS),  IWYEAR(MXPKS)
     1719      REAL      PKQ(MXPKS),  AUX(*), XSYSPK, XHSTPK
     1720      CHARACTER*(*)  STAID
     1721C
     1722C     + + + ARGUMENT DEFINITIONS + + +
     1723C     IN,MSG - LOGICAL UNIT NOS FOR INPUT AND MESSAGES
     1724C     EMAOPT - indicator flag for performing EMA analysis
     1725C              0 - no, just do traditional J407
     1726C              1 - yes, run EMA 
     1727C     WDMSFL - FORTRAN unit number for input WDM file
     1728C     ISTART - initially 1, then incremented
     1729C     MXPKS  - MAX ALLOWABLE NUMBER OF PEAKS TO BE RETRIEVED
     1730C     STAID  - STATION IDENT -- 15-DIGIT STA NO, AGENCY CODE, NAME
     1731C     AUX    - VECTOR OF AUX DATA, DIM 13 --
     1732C     NPKS   - NUMBER OF PEAKS ACTUALLY RETRIEVED
     1733C     PKQ    - THE PEAK DISCHARGES  ( -888 = BLANK IN FILE.)
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 54
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     1734C     IPKQ   - PEAK DISCHARGE QUALIFICATION CODES FROM WATSTORE
     1735C              STORED AS OCTAL-CODED DECIMAL INTEGER AS FOLLOWS --
     1736C                WATSTORE CODE    IPKQ-VALUE
     1737C                   1, 2, 3         1, 2, 4
     1738C                   4, 5, 6        10, 20, 40
     1739C                   7, 8, 9       100, 200, 400
     1740C                   A, B, C      1000, 2000, 4000
     1741C                   D, E, F     10000, 20000, 40000
     1742C              IPKQ = SUM OF IPKQ-VALUES.   (USE ROUTINE IBITEX TO
     1743C              EXTRACT INDIVIDUAL BITS.)
     1744C     IWYEAR - INTEGER ARRAY OF WATER YEARS.
     1745C     IER    - ERROR CODE 0=NONE, 1=SKIP, 2=END OF FILE, 3=BOTH.
     1746C     XSYSPK - highest systematic peak
     1747C     XHSTPK - lowest historic peak
     1748C
     1749C     + + + SAVES + + +
     1750      SAVE  CARD
     1751C
     1752C     + + + LOCAL VARIABLES + + +
     1753      CHARACTER*80 CARD
     1754      CHARACTER*48 NAME
     1755      CHARACTER*5 AGENCY
     1756      CHARACTER*15 STANO
     1757      CHARACTER*9  PEAKQ
     1758      CHARACTER*1 QCODE(14), COLD
     1759      INTEGER   IBITS(14), I2, AGAIN
     1760      INTEGER   I, J, MONTH, MINYR, MAXYR !, L15
     1761      REAL    FLAT, FLON, FS, FM
     1762C
     1763C     + + + INTRINSICS + + +
     1764      INTRINSIC   ABS, REAL, LEN
     1765C
     1766C     + + + FUNCTIONS + + +
     1767      INTEGER   IBITOX
     1768C
     1769C     + + + EXTERNALS + + +
     1770      EXTERNAL   IBITOX, PRTPHD
     1771      EXTERNAL   LFTSTR, ZLJUST
     1772C
     1773C     + + + DATA INITIALIZATIONS + + +
     1774      DATA        QCODE    /'1','2','3','4','5','6','7','8','9',
     1775     $      'A','B','C','D','E' /
     1776C
     1777C     + + + INPUT FORMATS + + +
     1778 1000 FORMAT ( A )
     1779C
     1780C     + + + OUTPUT FORMATS + + +
     1781 2000 FORMAT (    ' ***PKFRD4 - PEAK OVERFLOW.  NPKS,MAX =', 2I5 )
     1782Cprh 2001 FORMAT (    ' CARD types 4, 2, and * are ignored',
     1783Cprh     $         /, 1X, A )
     1784 2001 FORMAT ( A )
     1785Cprh 2002 FORMAT (    ' Unrecognized CARD type.',
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 55
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     1786Cprh     $            '  Must be Y, Z, N, H, I, 2, 3, 4,  or *.',
     1787Cprh     $         /, ' (2, 4, and * records are ignored.)',
     1788Cprh     $         /, 1X, A )
     1789 2002 FORMAT ( A )
     1790 2003 FORMAT (    '  **PKFRD4 - Error reading input lat. or long.',
     1791     $            ' on H card.',
     1792     $         /, 1X, A )
     1793 2004 FORMAT (    ' ***PKFRD4 - Error reading I-card',
     1794     $         /, 1X, A )
     1795 2005 FORMAT (    '  **PKFRD4 - Error reading a 3 card.',
     1796     $         /, 1X, A )
     1797 2010 FORMAT (//, ' ***PKFRD4 - Insufficient data to process, only',
     1798     $            I2, ' peaks for station ', A )
     1799 2100 FORMAT ( /  ' For the station below, the following',
     1800     $            ' records were ignored:')
     1801 2110 FORMAT ( /  ' FINISHED PROCESSING STATION:  ',A,/)
     1802C
     1803C     + + + END SPECIFICATIONS + + +
     1804C
     1805C     This routine requires station id on each card and at least 3
     1806C     peak flow values.  Except for the first call, CARD is processed
     1807C     as the last input from the previous call.  At least one N,Z or H
     1808C     card is required to establish the station number.    
     1809C
     1810C     indicate which station is being processed
     1811      WRITE(91,2100)
     1812C
     1813      IER = 0
     1814      NPKS = 0
     1815Cprh      L15  = 0
     1816C     set Z,N,H card flags
     1817      DO 6 I = 2,13
     1818        AUX(I) = 0.
     1819 6    CONTINUE
     1820      AUX(1) = -1.01E29
     1821      XHSTPK = 1.0E29
     1822      XSYSPK = 0.0
     1823      AGENCY = '     '	
     1824      NAME = '                                                '
     1825      I2 = LEN(STAID)
     1826      IF (I2 .GT. 0) THEN
     1827        DO 7 I = 1,LEN(STAID)
     1828          STAID(I:I) = ' '
     1829 7      CONTINUE
     1830      END IF  
     1831C
     1832      IF (ISTART .EQ. 0) THEN
     1833C       first call, no CARD value to process, so read one
     1834 9      CONTINUE
     1835          READ(IN, '(A)', END=998) CARD
     1836Ckmf      left-shift station number
     1837Ckmf      CALL LFTSTR ( L15, CARD(2:16) )
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 56
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     1838          IF (CARD(1:1).EQ.'Z'.OR.CARD(1:1).EQ.'Y'.OR.
     1839     $        CARD(1:1).EQ.'N'.OR.CARD(1:1).EQ.'H'.OR.
     1840     $        CARD(1:1).EQ.'I'.OR.CARD(1:1).EQ.'3')   THEN
     1841            AGAIN = 0
     1842            CALL ZLJUST( CARD(2:16) )
     1843          ELSE IF (CARD(1:1).EQ.'4'.OR.CARD(1:1).EQ.'2'.OR.
     1844     $             CARD(1:1).EQ.'*') THEN
     1845C           skip partial duration peak, 2, and comment records
     1846            WRITE (91,2001) CARD
     1847            AGAIN = 1
     1848          ELSE
     1849C           unrecognized card type
     1850            WRITE (91,2002) CARD
     1851            AGAIN = 1
     1852          END IF
     1853        IF (AGAIN .EQ. 1) GO TO 9  
     1854        ISTART = ISTART + 1
     1855      END IF
     1856      STANO = CARD(2:16)
     1857C
     1858      IF(CARD .NE. '$EOF') THEN       
     1859C       last CARD not end of file
     1860        MINYR = 2020
     1861        MAXYR = 0
     1862C
     1863  10    CONTINUE
     1864          IF(CARD(1:1) .EQ. 'Z') THEN
     1865            AGENCY = CARD(33:37)
     1866C
     1867          ELSE IF(CARD(1:1) .EQ. 'H' ) THEN      
     1868            STANO = CARD(2:16)
     1869            READ(CARD(17:22),'(3F2.0)',ERR=20) FLAT,FM,FS
     1870            AUX(12) = FLAT+FM/60.+FS/3600.
     1871            READ(CARD(23:29),'(F3.0,2F2.0)',ERR=20) FLON,FM,FS
     1872            AUX(13) = FLON +FM/60.+FS/3600.
     1873C
     1874            GO TO 21
     1875 20         CONTINUE
     1876C             Error reading input lat. or long. on H card.
     1877              WRITE (MSG,2003) CARD
     1878 21         CONTINUE
     1879C
     1880          ELSE IF(CARD(1:1).EQ.'N') THEN      
     1881            NAME = CARD(17:64)
     1882            STANO = CARD(2:16)
     1883C
     1884          ELSE IF(CARD(1:1) .EQ. 'Y') THEN     
     1885C           do nothing
     1886C
     1887          ELSE IF (CARD(1:1) .EQ. 'I') THEN
     1888C           READ OPTIONAL I-CARD
     1889            IF(CARD(2:16).EQ.'               '
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 57
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     1890     $        .OR. CARD(2:16).EQ.STANO) THEN     
     1891              IF(CARD(2:16).EQ.'               ') THEN
     1892C               put stano in blank space
     1893                CARD(2:16) = STANO
     1894              END IF
     1895              READ(CARD,91,ERR=98)(AUX(I),I=1,8)
     1896   91         FORMAT(16X,6F8.0,T71,2F4.0)
     1897              IF(CARD(17:24) .EQ. ' ')  AUX(1) = -1.01E29
     1898              DO 95 I=65,69
     1899                IF(CARD(I:I) .EQ. 'H' )  AUX(10) = 1.1
     1900                IF(CARD(I:I) .EQ. 'G' )  AUX( 9) = 1.1
     1901                IF(CARD(I:I) .EQ. 'S' )  AUX( 9) = -1.1
     1902                IF(CARD(I:I) .EQ. 'K' )  AUX(11) = 1.1
     1903   95         CONTINUE
     1904C
     1905              GO TO 99
     1906   98         CONTINUE
     1907C               error reading an I card
     1908                WRITE (MSG,2004) CARD
     1909   99         CONTINUE
     1910C
     1911            END IF
     1912C  
     1913          ELSE IF(CARD(1:1).EQ.'3') THEN               
     1914            NPKS = NPKS + 1
     1915            IF(NPKS.GT.MXPKS) THEN
     1916C             peak overflow
     1917              IER = 1
     1918              WRITE (MSG,2000) NPKS, MXPKS
     1919            ELSE
     1920              READ(CARD(17:22),'(I4,I2)',ERR=140) IWYEAR(NPKS), MONTH
     1921              IF(MONTH.GE.10) IWYEAR(NPKS) =   IWYEAR(NPKS) + 1
     1922              PEAKQ = CARD(25:31)
     1923              READ(PEAKQ,'(F7.0)',ERR=140)  PKQ(NPKS)
     1924              IF(PEAKQ.EQ.' ')  PKQ(NPKS) =  -8888.
     1925C 
     1926C             EXTRACT PEAK--Q QUAL CODES
     1927              DO 118 I=1,14
     1928                IBITS(I) = 0
     1929  118         CONTINUE
     1930              DO 130 I = 32,43
     1931                IF(CARD(I:I).NE.' ') THEN      
     1932                  DO 120 J = 1,14
     1933                    IF(CARD(I:I).EQ.QCODE(J)) THEN
     1934                      IBITS(J) = 1
     1935                    END IF
     1936  120             CONTINUE
     1937                END IF
     1938  130         CONTINUE
     1939C             find lowest historic and highest systematic
     1940              IF (IBITS(7) .EQ. 1) THEN    
     1941C               historic peak
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 58
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     1942                IF (XHSTPK .GT. PKQ(NPKS)) XHSTPK = PKQ(NPKS)
     1943              ELSE
     1944C               systematic peak
     1945                IF (XSYSPK .LT. PKQ(NPKS)) XSYSPK = PKQ(NPKS)
     1946              END IF
     1947C             set local start/end of systematic record
     1948              IF (IWYEAR(NPKS) .GT. MAXYR) MAXYR = IWYEAR(NPKS)
     1949              IF (IWYEAR(NPKS) .LT. MINYR) MINYR = IWYEAR(NPKS)
     1950              IPKQ(NPKS) = IBITOX(IBITS,14)
     1951C
     1952              GO TO 141
     1953 140          CONTINUE
     1954C               error reading 3 card
     1955                WRITE (MSG,2005) CARD
     1956 141          CONTINUE
     1957            END IF
     1958          END IF    
     1959C
     1960C         set old card type
     1961          COLD = CARD(1:1)
     1962C         read new card
     1963 150      CONTINUE   
     1964            READ(IN, '(A)', END=998) CARD
     1965Ckmf        left-shift station number
     1966Ckmf        CALL LFTSTR ( L15, CARD(2:16) )
     1967            IF (CARD(1:1).EQ.'Z'.OR.CARD(1:1).EQ.'Y'.OR.
     1968     $          CARD(1:1).EQ.'N'.OR.CARD(1:1).EQ.'H'.OR.
     1969     $          CARD(1:1).EQ.'I'.OR.CARD(1:1).EQ.'3')   THEN       
     1970              AGAIN = 0
     1971              CALL ZLJUST( CARD(2:16) )
     1972            ELSE IF (CARD(1:1).EQ.'4'.OR.CARD(1:1).EQ.'2'.OR.
     1973     $               CARD(1:1).EQ.'*') THEN
     1974C             skip partial duration peak, 2, and comment records
     1975              WRITE (91,2001) CARD
     1976              AGAIN = 1
     1977            ELSE
     1978C             unrecognized card type
     1979              WRITE (91,2002) CARD
     1980              AGAIN = 1
     1981            END IF
     1982          IF (AGAIN .EQ. 1) GO TO 150
     1983C
     1984C         check conditions for looping back to process the new card
     1985        IF (CARD(2:16).EQ.STANO .AND. IER.EQ.0)          GO TO 10
     1986        IF (CARD(1:1).EQ.'I'.AND.STANO.EQ.'               ') 
     1987     &                                                   GO TO 10
     1988        IF (COLD .EQ. 'Z')                               GO TO 10
     1989C
     1990C       must be new station or too many peaks
     1991C
     1992        IF (NPKS .LT. 3) THEN
     1993C         insufficient data to process
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 59
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     1994          IF (NPKS .GT. 0) THEN
     1995            IF(STANO.EQ.'               ') STANO='unknown        '
     1996            WRITE (MSG,2010) NPKS, STANO
     1997       write (*,*) '3rd call to PRTPHD 1000'
     1998            CALL PRTPHD (1000,1,EMAOPT,WDMSFL)
     1999          END IF
     2000          NPKS  = 0
     2001        ELSE
     2002          STAID = STANO//AGENCY//NAME
     2003        END IF 
     2004C
     2005        IF (NPKS .EQ. 0) GO TO 10
     2006C
     2007      ELSE
     2008C       end of file
     2009        IER = IER + 2
     2010      END IF
     2011C
     2012      GO TO 999
     2013  998 CONTINUE
     2014C       reached end of file
     2015        CARD = '$EOF'
     2016        STAID = STANO//AGENCY//NAME
     2017        IF (NPKS .LT. 5) IER = IER + 2
     2018  999 CONTINUE
     2019C    
     2020C     check if start/end on I card, if not, use systematic record
     2021      IF (ABS(AUX(7)) .LT. 1.0) AUX(7) = REAL(MINYR)
     2022      IF (ABS(AUX(8)) .LT. 1.0) AUX(8) = REAL(MAXYR)
     2023      IF (ABS(AUX(6)) .LT. 0.00001) AUX(6) = 0.55
     2024Cprh      IF (XHSTPK .GT. 1.0E29) XHSTPK = 0.0
     2025      IF (XHSTPK .GE. 1.0E29) XHSTPK = 0.0
     2026C
     2027      WRITE (91,2110) STAID
     2028C
     2029      RETURN
     2030      END
Bytes of stack required for this program unit: 360.


--------------------------------------------------  Symbol Cross Reference  ---------------------------------------------------
Name (Type)           Class          Offset     Context  (d-DO, =-Assignment, /-Initialization, i-Input, o-Output, p-Pointer,
                                                         r-Argument, s-Specification, u-Usage)
-------------------------------------------------------------------------------------------------------------------------------
AGAIN (INTEGER)       scalar                      1759s     1841=     1847=     1851=     1853u     1970=     1976=     1980=
                                                  1982u
AGENCY (CHARACTER)    scalar                      1755s     1823=     1865=     2002u     2016u
AUX (REAL)            array                       1687s     1719s     1818=     1820=     1870=     1872=     1895i     1897=
                                                  1899=     1900=     1901=     1902=     2021r     2021=     2022r     2022=
                                                  2023r     2023=
CARD (CHARACTER)      scalar                      1750s     1753s     1835i     1835i     1838u     1838u     1839u     1839u
                                                  1840u     1840u     1842r     1842r     1842r     1843u     1843u     1844u
                                             Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 60
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
                                                  1846o     1846o     1850o     1850o     1856u     1858u     1864u     1865u
                                                  1867u     1868u     1869i     1869i     1871i     1871i     1877o     1877o
                                                  1880u     1881u     1882u     1884u     1887u     1889u     1890u     1891u
                                                  1893=     1895i     1895i     1897u     1899u     1900u     1901u     1902u
                                                  1908o     1908o     1913u     1920i     1920i     1922u     1931u     1933u
                                                  1955o     1955o     1961u     1964i     1964i     1967u     1967u     1968u
                                                  1968u     1969u     1969u     1971r     1971r     1971r     1972u     1972u
                                                  1973u     1975o     1975o     1979o     1979o     1985u     1986u     2015=
                                                  1838i     1838i     1838i     1838i     1838i     1838i     1843i     1843i
                                                  1843i     1858i     1864i     1867i     1880i     1884i     1887i     1889i
                                                  1889i     1891i     1897i     1899i     1900i     1901i     1902i     1913i
                                                  1931i     1933i     1967i     1967i     1967i     1967i     1967i     1967i
                                                  1972i     1972i     1972i     1985i     1986i
COLD (CHARACTER)      scalar                      1758s     1961=     1988u     1988i
EMAOPT (INTEGER)      scalar                      1686s     1717s     1998r     1998r     1998r
FLAT (REAL)           scalar                      1761s     1869i     1870u
FLON (REAL)           scalar                      1761s     1871i     1872u
FM (REAL)             scalar                      1761s     1869i     1870u     1871i     1872u
FS (REAL)             scalar                      1761s     1869i     1870u     1871i     1872u
I (INTEGER)           scalar                      1760s     1818u     1828u     1828u     1895=     1895u     1895u     1899u
                                                  1899u     1900u     1900u     1901u     1901u     1902u     1902u     1928u
                                                  1931u     1931u     1933u     1933u
I2 (INTEGER)          scalar                      1759s     1825=     1826u
IBITOX                FUNCTION                    1767s     1770u     1950u
IBITS (INTEGER)       array                       1759s     1928=     1934=     1940u     1950r     1950r     1950r
IER (INTEGER)         scalar                      1688s     1717s     1813=     1917=     1985u     2009u     2009=     2017u
                                                  2017=
IN (INTEGER)          scalar                      1686s     1717s     1835i     1964i
IPKQ (INTEGER)        array                       1688s     1718s     1950=
ISTART (INTEGER)      scalar                      1687s     1717s     1832u     1854u     1854=
IWYEAR (INTEGER)      array                       1688s     1718s     1920i     1921u     1921=     1948u     1948u     1949u
                                                  1949u
J (INTEGER)           scalar                      1760s     1933u     1934u
LFTSTR                Procedure                   1771u
MAXYR (INTEGER)       scalar                      1760s     1861=     1948u     1948=     2022r
MINYR (INTEGER)       scalar                      1760s     1860=     1949u     1949=     2021r
MONTH (INTEGER)       scalar                      1760s     1920i     1921u
MSG (INTEGER)         scalar                      1686s     1717s     1877o     1908o     1918o     1955o     1996o
MXPKS (INTEGER)       scalar                      1686s     1717s     1718u     1718u     1719u     1915u     1918o
NAME (CHARACTER)      scalar                      1754s     1824=     1881=     2002u     2016u
NPKS (INTEGER)        scalar                      1687s     1717s     1814=     1914u     1914=     1915u     1918o     1920u
                                                  1921u     1921u     1923u     1924u     1942u     1942u     1945u     1945u
                                                  1948u     1948u     1949u     1949u     1950u     1992u     1994u     1996o
                                                  2000=     2005u     2017u
PEAKQ (CHARACTER)     scalar                      1757s     1922=     1923i     1923i     1924u     1924i
PKFRD4                SUBROUTINE                  1685s
PKQ (REAL)            array                       1687s     1719s     1923i     1924=     1942u     1942u     1945u     1945u
PRTPHD                SUBROUTINE                  1770u     1998u
QCODE (CHARACTER)     array                       1758s     1774/     1933u     1933i
STAID (CHARACTER)     scalar                      1687s     1720s     1825r     1827r     1828=     2002=     2016=     2027o
                                                  2027o
STANO (CHARACTER)     scalar                      1756s     1856=     1868=     1882=     1890u     1893u     1985u     1986u
                                             Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 61
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
                                                  1995u     1995=     1996o     1996o     2002u     2016u     1889i     1985i
                                                  1986i     1995i
WDMSFL (INTEGER)      scalar                      1686s     1717s     1998r     1998r     1998r
XHSTPK (REAL)         scalar                      1689s     1719s     1821=     1942u     1942=     2025u     2025=
XSYSPK (REAL)         scalar                      1689s     1719s     1822=     1945u     1945=
ZLJUST                SUBROUTINE                  1771u     1842u     1971u


--------------------------------------------------  Label Cross Reference  ----------------------------------------------------
Label  Context  (d-DO, =-ASSIGN, f-FORMAT, g-GOTO, i-IF statement, s-Specification, r-Argument)
-------------------------------------------------------------------------------------------------------------------------------
10          1863s     1985g     1987g     1988g     2005g
1000        1778s
118         1927d     1929s
120         1932d     1936s
130         1930d     1938s
140         1920g     1923g     1953s
141         1952g     1956s
150         1963s     1982g
20          1869g     1871g     1875s
2000        1781s     1918f
2001        1784s     1846f     1975f
2002        1789s     1850f     1979f
2003        1790s     1877f
2004        1793s     1908f
2005        1795s     1955f
2010        1797s     1996f
21          1874g     1878s
2100        1799s     1811f
2110        1801s     2027f
6           1817d     1819s
7           1827d     1829s
9           1834s     1853g
91          1895f     1896s
95          1898d     1903s
98          1895g     1906s
99          1905g     1909s
998         1835g     1964g     2013s
999         2012g     2018s
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 62
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

SUBROUTINE INPUT3    Compiling Options: -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     2031C
     2032C
     2033C
     2034      SUBROUTINE   INPUT3
     2035     #                  ( MAXPKS, IDSTA, PKSABG, IWYSN, NHIST,NSYS,
     2036     $     HISTPD,  QHIOUT,QLWOUT,GAGEB,GENSKU,RMSEGS,ISKUOP,
     2037     $     NSKIP,  IRC )
     2038C
     2039C     + + + PURPOSE + + +
     2040C     INPUT FROM WATSTORE LOG-PEARSON CARD FORMAT
     2041C     -- NOTE -- THIS DOES NOT HAVE FULL ERROR-DETECTION AND OPTION-
     2042C             SETTING CAPABILITIES OF THE WATSTORE J407 VERSION.
     2043C     REWRITTEN FOR PRIME VERSION 3.8-P,  WK, 7/88.
     2044C
     2045C     + + + DUMMY ARGUMENTS + + +
     2046      INTEGER   MAXPKS, NHIST, NSYS, NSKIP, IRC, ISKUOP
     2047      INTEGER                               IWYSN(MAXPKS)
     2048      CHARACTER*(*)  IDSTA
     2049      REAL    PKSABG(MAXPKS)
     2050      REAL     HISTPD, QHIOUT, QLWOUT, GAGEB, GENSKU, RMSEGS
     2051C
     2052C     + + + ARGUMENT DEFINITIONS + + +
     2053C     MAXPKS -
     2054C     IDSTA  -
     2055C     PKSABG -
     2056C     IWYSN  -
     2057C     NHIST  -
     2058C     NSYS   -
     2059C     HISTPD -
     2060C     QHIOUT -
     2061C     QLWOUT -
     2062C     GAGEB  -
     2063C     GENSKU -
     2064C     RMSEGS -
     2065C     ISKUOP -
     2066C     NSKIP  -
     2067C     IRC    -
     2068C
     2069C     + + + COMMON BLOCKS + + +
     2070      INCLUDE 'clunit.inc'
     2071C
     2072C     + + + LOCAL VARIABLES + + +
     2073      INTEGER   I, NPK
     2074C
     2075C     + + + EXTERNALS + + +
     2076      EXTERNAL   PKFQH3
     2077C
     2078C     + + + END SPECIFICATIONS + + +
     2079C
     2080      NSKIP = 0
     2081  100 CONTINUE
     2082      CALL PKFQH3(INCRDS,MSG,  MAXPKS, IDSTA,GAGEB,GENSKU,ISKUOP,NSYS,
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 63
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     2083     $       RMSEGS,QLWOUT,QHIOUT,HISTPD,NHIST,PKSABG,IRC)
     2084      IF(IRC.GT.1)  RETURN
     2085      NPK=NHIST+NSYS
     2086      IF(NPK.GT.0) GO TO 120
     2087      WRITE(MSG,111) IDSTA(1:64)
     2088 111  FORMAT(/53H ***INPUT2 - STATION HAS NO PEAK FLOW DATA.  STA-ID = /
     2089     $  12X,A64)
     2090      NSKIP = NSKIP+1
     2091      GO TO 100
     2092  120 CONTINUE
     2093C   ASSIGN WATER-YEAR SEQ NOS.
     2094      IF(NHIST.LT.0)  NHIST = 0
     2095      IF(NHIST.LE.0)  GO TO 150
     2096      DO 130 I=1,NHIST
     2097  130 IWYSN(I) = I-1-NHIST
     2098  150 CONTINUE
     2099      DO 160 I=1,NSYS
     2100  160 IWYSN(NHIST+I) = I
     2101C
     2102      RETURN
     2103      END
Bytes of stack required for this program unit: 88.


--------------------------------------------------  Symbol Cross Reference  ---------------------------------------------------
Name (Type)           Class          Offset     Context  (d-DO, =-Assignment, /-Initialization, i-Input, o-Output, p-Pointer,
                                                         r-Argument, s-Specification, u-Usage)
-------------------------------------------------------------------------------------------------------------------------------
GAGEB (REAL)          scalar                      2036s     2050s     2082r     2082r     2082r
GENSKU (REAL)         scalar                      2036s     2050s     2082r     2082r     2082r
HISTPD (REAL)         scalar                      2036s     2050s     2083r     2082r     2082r
I (INTEGER)           scalar                      2073s     2097u     2097u     2100u     2100u
IDSTA (CHARACTER)     scalar                      2035s     2048s     2082r     2082r     2082r     2087o     2087o
INCRD (INTEGER)       scalar         4           (I5)2s    (I5)3s
INCRDS (INTEGER)      scalar                      2082r     2082r     2082r
INFIL2 (INTEGER)      scalar         12          (I5)2s    (I5)3s
INFORM (INTEGER)      scalar         16          (I5)2s    (I5)3s
INPUT3                SUBROUTINE                  2034s
IPUNCH (INTEGER)      scalar         8           (I5)2s    (I5)3s
IRC (INTEGER)         scalar                      2037s     2046s     2083r     2082r     2082r     2084u
ISKUOP (INTEGER)      scalar                      2036s     2046s     2082r     2082r     2082r
IWYSN (INTEGER)       array                       2035s     2047s     2097=     2100=
MAXPKS (INTEGER)      scalar                      2035s     2046s     2047u     2049u     2082r     2082r     2082r
MSG (INTEGER)         scalar                      2082r     2082r     2082r     2087o
MSG1 (INTEGER)        scalar         0           (I5)2s    (I5)3s
NHIST (INTEGER)       scalar                      2035s     2046s     2083r     2082r     2082r     2085u     2094u     2094=
                                                  2095u     2096u     2097u     2100u
NPK (INTEGER)         scalar                      2073s     2085=     2086u
NSKIP (INTEGER)       scalar                      2037s     2046s     2080=     2090u     2090=
NSYS (INTEGER)        scalar                      2035s     2046s     2082r     2082r     2082r     2085u     2099u
PKFQH3                SUBROUTINE                  2076u     2082u
PKSABG (REAL)         array                       2035s     2049s     2083r     2082r     2082r
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 64
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
QHIOUT (REAL)         scalar                      2036s     2050s     2083r     2082r     2082r
QLWOUT (REAL)         scalar                      2036s     2050s     2083r     2082r     2082r
RMSEGS (REAL)         scalar                      2036s     2050s     2083r     2082r     2082r
SPCFUN (INTEGER)      scalar         20          (I5)2s    (I5)3s


--------------------------------------------------  Label Cross Reference  ----------------------------------------------------
Label  Context  (d-DO, =-ASSIGN, f-FORMAT, g-GOTO, i-IF statement, s-Specification, r-Argument)
-------------------------------------------------------------------------------------------------------------------------------
100         2081s     2091g
111         2087f     2088s
120         2086g     2092s
130         2096d     2097s
150         2095g     2098s
160         2099d     2100s
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 65
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

SUBROUTINE PKFQH3    Compiling Options: -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     2104C
     2105C
     2106C
     2107      SUBROUTINE   PKFQH3
     2108     #                 ( IN,MSG, MAXPK,IDSTA,GAGEB,GENSKU,IGSOPT,NSYS,
     2109     $             RMSEGS,
     2110     $                  QLWOUT,QHIOUT,HISTPD,NHIST,PKQ,IRC)
     2111C
     2112C     + + + PURPOSE + + +
     2113C     READS LOG-PEARSON-FORMAT FLOOD DATA CARDS + HISTORIC/OUTLIER DATA
     2114C     CARDS FOR  J407 VER 2.0.  THIS VERSION HAS MINIMAL ERROR DETECTION
     2115C     AND RECOVERY.
     2116C     REV 1/16/81 WK. FOR J407 VER 3.5 HISTORIC/OUTLIER/GAGEB + RMSEGS.
     2117C     REV 7/88 WK.  FOR VERS 3.8-P, MOVED 'IN,MSG' TO ARG LIST.
     2118C
     2119C     + + + DUMMY ARGUMENTS + + +
     2120      INTEGER   IN, MSG, MAXPK, IGSOPT, NSYS, NHIST, IRC
     2121      REAL      GAGEB, GENSKU, RMSEGS, QLWOUT, QHIOUT, HISTPD
     2122      REAL               PKQ(*)
     2123      CHARACTER*(*)   IDSTA
     2124C
     2125C     + + + LOCAL VARIABLES + + +
     2126      CHARACTER*1  HH, HG, HS, HW, HN, OPT(5)
     2127      CHARACTER*4  DEND, DEOD
     2128      CHARACTER*8  BLANK
     2129      CHARACTER*10 CID
     2130      INTEGER   I, J, J1, J2, IERNO, IHIOP, NCARD
     2131      REAL    FNHIST
     2132C
     2133C     + + + DATA INITIALIZATION + + +
     2134      DATA HH,HN,HG,HW,HS/'H','N','G','W','S'/
     2135      DATA DEND,BLANK,DEOD/'$END','        ','$EOD'/
     2136C
     2137C     + + + END SPECIFICATIONS + + +
     2138C
     2139      IRC = 0
     2140      CID = '**********'
     2141      IDSTA(1:1)=HH
     2142      IDSTA(2:51)='                                                  '
     2143      IDSTA(52:90)='                                       '
     21441000  CONTINUE
     2145      GAGEB  =  0.
     2146      QHIOUT = 0.
     2147      QLWOUT = 0.
     2148      HISTPD = 0.
     2149      NHIST = 0
     2150      READ(IN,1) IDSTA(13:64),RMSEGS,GENSKU,OPT,NSYS,IDSTA(1:10)
     2151    1 FORMAT(A52 ,2F5.0,5A1,I3,A10)
     2152      IF(IDSTA(1:10).EQ.CID) GO TO 1000
     2153      IF(IDSTA(13:16).EQ.DEND.OR.IDSTA(13:16).EQ.DEOD) GO TO 970
     2154      IF(NSYS.EQ.0)RETURN
     2155      IERNO = 3
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 66
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     2156      IF(NSYS.LT.0.OR.NSYS.GT.MAXPK) GO TO 900
     2157      IHIOP  = 0
     2158      IGSOPT = 0
     2159      DO10I = 1,5
     2160      IF(OPT(I).EQ.HH)IHIOP = 1
     2161      IF(OPT(I).EQ.HN)IHIOP = 0
     2162      IF(OPT(I).EQ.HG)IGSOPT = +1
     2163      IF(OPT(I).EQ.HS)IGSOPT = -1
     2164      IF(OPT(I).EQ.HW)IGSOPT =  0
     2165   10 CONTINUE
     2166      IERNO = 5
     2167      NCARD = (NSYS+9)/10
     2168      DO30I = 1,NCARD
     2169      J2  =  10*I + IHIOP*15
     2170      J1 = J2-9
     2171      READ(IN,2)(PKQ(J),J = J1,J2),CID
     2172    2 FORMAT(10F7.0,A10)
     2173      IF(CID(1:10).NE.IDSTA(1:10)) GO TO 900
     2174   30 CONTINUE
     2175      IF(IHIOP.NE.0) GO TO 40
     2176      RETURN
     2177   40 READ(IN,2)GAGEB,QLWOUT,QHIOUT,HISTPD,FNHIST,(PKQ(J),J = 1,5),CID
     2178      NHIST = FNHIST
     2179      IERNO = 203
     2180      IF(NHIST.LT.0.OR.NHIST.GT.15.) GO TO 900
     2181      IERNO = 205
     2182      IF((CID(1:8).NE.IDSTA(1:8))
     2183     $        .AND. (CID(1:8).NE.BLANK(1:8))) GO TO 900
     2184      IF(NHIST.LE.5) GO TO 50
     2185      READ(IN,2)(PKQ(J),J = 6,15),CID
     2186      IF((CID(1:8).NE.IDSTA(1:8))
     2187     $        .AND. (CID(1:8).NE.BLANK(1:8))) GO TO 900
     2188   50 CONTINUE
     2189      DO60I = 1,NSYS
     2190   60 PKQ(NHIST+I)  =  PKQ(15+I)
     2191      RETURN
     2192  900 WRITE(MSG,901)IERNO,CID,IDSTA(1:10)
     2193  901 FORMAT(/37H *** PKFQH3 ERROR AT CARD-ID, STA-ID.,I5,
     2194     $       2(3X,1H-,A10   ,1H-),A10/10X,
     2195     $58HERROR CODES 3,203=INVALID PEAK COUNTS.  5,205=ID MISMATCH./)
     2196      IRC = 1
     2197      GO TO 1000
     2198  970 IRC = IRC+2
     2199      RETURN
     2200      END
Bytes of stack required for this program unit: 144.


--------------------------------------------------  Symbol Cross Reference  ---------------------------------------------------
Name (Type)           Class          Offset     Context  (d-DO, =-Assignment, /-Initialization, i-Input, o-Output, p-Pointer,
                                                         r-Argument, s-Specification, u-Usage)
-------------------------------------------------------------------------------------------------------------------------------
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 67
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
BLANK (CHARACTER)     scalar                      2128s     2135/     2183u     2187u     2182i     2186i
CID (CHARACTER)       scalar                      2129s     2140=     2152u     2171i     2171i     2173u     2177i     2177i
                                                  2182u     2183u     2185i     2185i     2186u     2187u     2192o     2192o
                                                  2152i     2173i     2182i     2182i     2186i     2186i
DEND (CHARACTER)      scalar                      2127s     2135/     2153u     2153i
DEOD (CHARACTER)      scalar                      2127s     2135/     2153u     2153i
FNHIST (REAL)         scalar                      2131s     2177i     2178u
GAGEB (REAL)          scalar                      2108s     2121s     2145=     2177i
GENSKU (REAL)         scalar                      2108s     2121s     2150i
HG (CHARACTER)        scalar                      2126s     2134/     2162u     2162i
HH (CHARACTER)        scalar                      2126s     2134/     2141u     2160u     2160i
HISTPD (REAL)         scalar                      2110s     2121s     2148=     2177i
HN (CHARACTER)        scalar                      2126s     2134/     2161u     2161i
HS (CHARACTER)        scalar                      2126s     2134/     2163u     2163i
HW (CHARACTER)        scalar                      2126s     2134/     2164u     2164i
I (INTEGER)           scalar                      2130s     2160u     2161u     2162u     2163u     2164u     2169u     2190u
                                                  2190u
IDSTA (CHARACTER)     scalar                      2108s     2123s     2141=     2142=     2143=     2150i     2150i     2150i
                                                  2150i     2152u     2153u     2153u     2173u     2182u     2186u     2192o
                                                  2192o     2152i     2153i     2153i     2173i     2182i     2186i
IERNO (INTEGER)       scalar                      2130s     2155=     2166=     2179=     2181=     2192o
IGSOPT (INTEGER)      scalar                      2108s     2120s     2158=     2162=     2163=     2164=
IHIOP (INTEGER)       scalar                      2130s     2157=     2160=     2161=     2169u     2175u
IN (INTEGER)          scalar                      2108s     2120s     2150i     2171i     2177i     2185i
IRC (INTEGER)         scalar                      2110s     2120s     2139=     2196=     2198u     2198=
J (INTEGER)           scalar                      2130s     2171=     2171u     2171u     2177=     2177u     2177u     2185=
                                                  2185u     2185u
J1 (INTEGER)          scalar                      2130s     2170=     2171i
J2 (INTEGER)          scalar                      2130s     2169=     2170u     2171i
MAXPK (INTEGER)       scalar                      2108s     2120s     2156u
MSG (INTEGER)         scalar                      2108s     2120s     2192o
NCARD (INTEGER)       scalar                      2130s     2167=     2168u
NHIST (INTEGER)       scalar                      2110s     2120s     2149=     2178=     2180u     2180u     2184u     2190u
NSYS (INTEGER)        scalar                      2108s     2120s     2150i     2154u     2156u     2156u     2167u     2189u
OPT (CHARACTER)       array                       2126s     2150i     2150i     2160u     2161u     2162u     2163u     2164u
                                                  2160i     2161i     2162i     2163i     2164i
PKFQH3                SUBROUTINE                  2107s
PKQ (REAL)            array                       2110s     2122s     2171i     2177i     2185i     2190=     2190u
QHIOUT (REAL)         scalar                      2110s     2121s     2146=     2177i
QLWOUT (REAL)         scalar                      2110s     2121s     2147=     2177i
RMSEGS (REAL)         scalar                      2109s     2121s     2150i


--------------------------------------------------  Label Cross Reference  ----------------------------------------------------
Label  Context  (d-DO, =-ASSIGN, f-FORMAT, g-GOTO, i-IF statement, s-Specification, r-Argument)
-------------------------------------------------------------------------------------------------------------------------------
1           2150f     2151s
10          2159d     2165s
1000        2144s     2152g     2197g
2           2171f     2172s     2177f     2185f
30          2168d     2174s
40          2175g     2177s
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 68
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
50          2184g     2188s
60          2189d     2190s
900         2156g     2173g     2180g     2183g     2187g     2192s
901         2192f     2193s
970         2153g     2198s
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 69
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

SUBROUTINE OUTPUT    Compiling Options: -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     2201C
     2202C
     2203C
     2204      SUBROUTINE   OUTPUT
     2205     #                  (STAID,SYSUAV,SYSUSD,SYSSKW,
     2206     $      WRCUAV,WRCUSD,WRCSKW,WRCFC ,  NHSTPN, NSYS,
     2207     $      IBCPUN, LBCPU, IA1,IA3, PAUSE )
     2208C
     2209C     + + + PURPOSE + + +
     2210C     WRITES OUTPUT OF J407 RESULTS TO FILE SELECTED BY IBCPUN -
     2211C
     2212C     + + + HISTORY + + +
     2213C     kmf 96/12/17 - changed ibcpu to ibcpun to be consistent,
     2214C                    simplified check for wdm and/or basin char
     2215C
     2216C     + + + DUMMY ARGUMENTS + + +
     2217      CHARACTER*90 STAID
     2218      REAL      WRCFC(*),SYSUSD, SYSSKW, WRCUAV, WRCUSD, WRCSKW,
     2219     &                SYSUAV
     2220      INTEGER   NHSTPN, NSYS, IBCPUN, LBCPU, IA1, IA3, PAUSE
     2221C
     2222C     + + + ARGUMENT DEFINITIONS + + +
     2223C     IBCPUN - indicator flag for writing calculated statistics
     2224C              0 - don't save
     2225C              1 - save as attributes in wdm file
     2226C              2 - save in WATSTORE basin characteristics format
     2227C              3 - save in wdm file (1) and WATSTORE (2)
     2228C
     2229C     + + + EXTERNALS + + +
     2230      EXTERNAL   OUTPT1, BCFPCH
     2231C
     2232C     + + + END SPECIFICATIONS + + +
     2233C
     2234      IF (IBCPUN .EQ. 1  .OR.  IBCPUN .EQ. 3) THEN
     2235C       save statistics in wdm file
     2236        CALL OUTPT1 (STAID,SYSUAV,SYSUSD,SYSSKW,
     2237     $               WRCUAV,WRCUSD,WRCSKW,WRCFC,NHSTPN, NSYS,
     2238     $               IA1,IA3, PAUSE )
     2239      END IF
     2240      IF (IBCPUN .EQ. 2  .OR.  IBCPUN .EQ. 3) THEN
     2241C       save statistics in watstore basin characteristics format
     2242        CALL BCFPCH (STAID,SYSUAV,SYSUSD,SYSSKW,
     2243     $               WRCUAV,WRCUSD,WRCSKW,WRCFC,NHSTPN, NSYS, LBCPU)
     2244      END IF
     2245C
     2246      RETURN
     2247      END
Bytes of stack required for this program unit: 64.
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 70
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------


--------------------------------------------------  Symbol Cross Reference  ---------------------------------------------------
Name (Type)           Class          Offset     Context  (d-DO, =-Assignment, /-Initialization, i-Input, o-Output, p-Pointer,
                                                         r-Argument, s-Specification, u-Usage)
-------------------------------------------------------------------------------------------------------------------------------
BCFPCH                SUBROUTINE                  2230u     2242u
IA1 (INTEGER)         scalar                      2207s     2220s     2238r     2236r     2236r
IA3 (INTEGER)         scalar                      2207s     2220s     2238r     2236r     2236r
IBCPUN (INTEGER)      scalar                      2207s     2220s     2234u     2234u     2240u     2240u
LBCPU (INTEGER)       scalar                      2207s     2220s     2243r     2242r     2242r
NHSTPN (INTEGER)      scalar                      2206s     2220s     2237r     2236r     2236r     2243r     2242r     2242r
NSYS (INTEGER)        scalar                      2206s     2220s     2237r     2236r     2236r     2243r     2242r     2242r
OUTPT1                SUBROUTINE                  2230u     2236u
OUTPUT                SUBROUTINE                  2204s
PAUSE (INTEGER)       scalar                      2207s     2220s     2238r     2236r     2236r
STAID (CHARACTER)     scalar                      2205s     2217s     2236r     2236r     2236r     2242r     2242r     2242r
SYSSKW (REAL)         scalar                      2205s     2218s     2236r     2236r     2236r     2242r     2242r     2242r
SYSUAV (REAL)         scalar                      2205s     2219s     2236r     2236r     2236r     2242r     2242r     2242r
SYSUSD (REAL)         scalar                      2205s     2218s     2236r     2236r     2236r     2242r     2242r     2242r
WRCFC (REAL)          array                       2206s     2218s     2237r     2236r     2236r     2243r     2242r     2242r
WRCSKW (REAL)         scalar                      2206s     2218s     2237r     2236r     2236r     2243r     2242r     2242r
WRCUAV (REAL)         scalar                      2206s     2218s     2237r     2236r     2236r     2243r     2242r     2242r
WRCUSD (REAL)         scalar                      2206s     2218s     2237r     2236r     2236r     2243r     2242r     2242r
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 71
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

SUBROUTINE BCFPCH    Compiling Options: -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     2248C
     2249C
     2250C
     2251      SUBROUTINE   BCFPCH
     2252     #                 (  STAID,SYSAV,SYSSD,SYSG, WRCAV, WRCSD,
     2253     $                    GWRC, WRCFC, NHSTYR, NSYSYR,  IPCH)
     2254C
     2255C     + + + PURPOSE + + +
     2256C     PUNCHES J407 RESULTS IN BASIN-CHARACTERISTICS INPUT FORMAT
     2257C     ON LOGICAL UNIT IPCH
     2258C
     2259C     + + + DUMMY ARGUMENTS + + +
     2260      CHARACTER*90  STAID
     2261      REAL         WRCFC(*), SYSAV, SYSSD, SYSG, WRCAV, WRCSD,
     2262     &             GWRC
     2263      INTEGER   NHSTYR, NSYSYR, IPCH
     2264C
     2265C     + + + LOCAL VARIABLES + + +
     2266      CHARACTER*7 CHAR(9)
     2267      INTEGER JPUN(9)
     2268      INTEGER VAR (9)
     2269      INTEGER   I, IX
     2270      REAL      X, POWER
     2271C
     2272C      + + + INTRINSICS + + +
     2273       INTRINSIC  INT
     2274C
     2275C     + + + DATA INITIALIZATIONS + + +
     2276Cprh      DATA    JPUN   /12,16,20,21,23,25,26,27,28/
     2277Cprh  updated for inclusion of 1.5 and 2.33 intervals, 11/03
     2278      DATA    JPUN   /12,17,21,22,24,26,27,28,29/
     2279      DATA    VAR    /75,76,77,78,79,80,81,82,178/
     2280C
     2281C     + + + END SPECIFICATIONS + + +
     2282C
     2283C  ROUND AND CONVERT USING FORMATS AND CHAR ARRAY
     2284      DO 70 I=1,9
     2285      X=10.**WRCFC(JPUN(I))
     2286      IF(X.LT.99.95 .OR. X.GE.9995000.) GO TO 50
     2287      POWER=1.
     2288   40 IX=(X/POWER)+.5
     2289      IF(IX.LE.1000) GO TO 60
     2290      POWER=10.*POWER
     2291      GO TO 40
     2292   50 WRITE(CHAR(I) ,   51)X
     2293   51 FORMAT(1F7.1)
     2294      GO TO 70
     2295   60 IX=IX*INT(POWER)
     2296      WRITE(CHAR(I) ,   61)IX
     2297   61 FORMAT(1I7)
     2298   70 CONTINUE
     2299C
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 72
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     2300Ckmf  add staion name record ("2" card) Oct 02, 2000
     2301Ckmf  station name is defined as being 21-78, space for 21-62
     2302      WRITE (IPCH,100) STAID(1:15), STAID(21:62)
     2303  100 FORMAT('1',  A15, 4X, A )
     2304C PUNCH 3 CARDS
     2305      WRITE(IPCH,101)STAID(1:15),(VAR(I),CHAR(I),I=1,6)
     2306  101 FORMAT('2',  A15,6(I3,1A7))
     2307      WRITE(IPCH, 102)  STAID(1:15),(VAR(I),CHAR(I),I=7,8),SYSAV,SYSSD,
     2308     $       SYSG, VAR(9), CHAR(9)
     2309  102 FORMAT('2',  A15,2(I3,1A7),' 83',F7.3,' 84',F7.3,' 85',F7.3,
     2310     $          I3, 1A7)
     2311      IX = 2
     2312      IF(NHSTYR.GT.NSYSYR) IX = 1
     2313      WRITE(IPCH,   103)STAID(1:15),GWRC,WRCAV,WRCSD ,
     2314     $       NSYSYR, NHSTYR, (' ',I=1,IX)
     2315  103 FORMAT('2',  A15,'179',F7.3, '180',F7.3,'181',F7.3 ,
     2316     $        '196',I7, '197',I7, 2A1,T57, 10X)
     2317      RETURN
     2318      END
Bytes of stack required for this program unit: 80.


--------------------------------------------------  Symbol Cross Reference  ---------------------------------------------------
Name (Type)           Class          Offset     Context  (d-DO, =-Assignment, /-Initialization, i-Input, o-Output, p-Pointer,
                                                         r-Argument, s-Specification, u-Usage)
-------------------------------------------------------------------------------------------------------------------------------
BCFPCH                SUBROUTINE                  2251s
CHAR (CHARACTER)      array                       2266s     2292o     2292o     2296o     2296o     2305o     2305o     2307o
                                                  2307o     2308o     2308o
GWRC (REAL)           scalar                      2253s     2262s     2313o
I (INTEGER)           scalar                      2269s     2285u     2292u     2296u     2305=     2305u     2305u     2305u
                                                  2307=     2307u     2307u     2307u     2314=     2314u
IPCH (INTEGER)        scalar                      2253s     2263s     2302o     2305o     2307o     2313o
IX (INTEGER)          scalar                      2269s     2288=     2289u     2295u     2295=     2296o     2311=     2312=
                                                  2314o
JPUN (INTEGER)        array                       2267s     2278/     2285u
NHSTYR (INTEGER)      scalar                      2253s     2263s     2312u     2314o
NSYSYR (INTEGER)      scalar                      2253s     2263s     2312u     2314o
POWER (REAL)          scalar                      2270s     2287=     2288u     2290u     2290=     2295r
STAID (CHARACTER)     scalar                      2252s     2260s     2302o     2302o     2302o     2302o     2305o     2305o
                                                  2307o     2307o     2313o     2313o
SYSAV (REAL)          scalar                      2252s     2261s     2307o
SYSG (REAL)           scalar                      2252s     2261s     2308o
SYSSD (REAL)          scalar                      2252s     2261s     2307o
VAR (INTEGER)         array                       2268s     2279/     2305o     2307o     2308o
WRCAV (REAL)          scalar                      2252s     2261s     2313o
WRCFC (REAL)          array                       2253s     2261s     2285u
WRCSD (REAL)          scalar                      2252s     2261s     2313o
X (REAL)              scalar                      2270s     2285=     2286u     2286u     2288u     2292o
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 73
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------


--------------------------------------------------  Label Cross Reference  ----------------------------------------------------
Label  Context  (d-DO, =-ASSIGN, f-FORMAT, g-GOTO, i-IF statement, s-Specification, r-Argument)
-------------------------------------------------------------------------------------------------------------------------------
100         2302f     2303s
101         2305f     2306s
102         2307f     2309s
103         2313f     2315s
40          2288s     2291g
50          2286g     2292s
51          2292f     2293s
60          2289g     2295s
61          2296f     2297s
70          2284d     2294g     2298s
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 74
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

SUBROUTINE PLTFRQ    Compiling Options: -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     2319C
     2320C
     2321C
     2322      SUBROUTINE   PLTFRQ
     2323     #                 (  MSG, HEADNG, IPLTOP, GRFMT,
     2324     $        NPKPLT, PKLOG, SYSPP, WRCPP, WEIBA,
     2325     $        SYSRFC,WRCFC,FCXPG,NPLOT,IWXMOD,HSTFLG,
     2326     $        NOCLIM, CLIML, CLIMU, IPLTNO )
     2327C
     2328C     + + + PURPOSE + + +
     2329C     PRODUCES FREQUENCY-CURVE PLOT
     2330C     USES IPLTOP VALUE TO DETERMINE WHETHER PRINTER-PLOT
     2331C     OR GRAPHICS-DEVICE PLOT.
     2332C
     2333C
     2334C     + + + DUMMY ARGUMENTS + + +
     2335      INTEGER   IPLTOP, NPKPLT, NPLOT, MSG,IWXMOD,
     2336     &          HSTFLG, NOCLIM, IPLTNO
     2337      CHARACTER*3    GRFMT
     2338      CHARACTER*80   HEADNG(9)
     2339      REAL      PKLOG(*), SYSPP(*), WRCPP(*),  SYSRFC(*), WRCFC(*),
     2340     $     FCXPG(*), WEIBA, CLIML(*), CLIMU(*)
     2341C
     2342C     + + + ARGUMENT DEFINITIONS + + +
     2343C     MSG    - LOGICAL UNIT NUMBER FOR  PRINT-PLOT
     2344C     HEADNG - PAGE-HEADING LINES FOR PLOT -- SAME AS ON PRINTOUT
     2345C     IPLTOP -
     2346C     GRFMT  - graphic format (BMP, CGM, or WMF)
     2347C     NPKPLT - NUMBER OF OBSERVED PEAKS TO PLOT
     2348C     PKLOG  - LOG-10 OBSERVED PEAK DISCHARGES
     2349C     SYSPP  - SDYSTEMATIC-RECORD standard deviates  (ENTRIES FOR
     2350C              HISTORIC PEAKS = -large)
     2351C     WRCPP  - WRC-ESTIMATED standard deviates
     2352C     WEIBA  -
     2353C     SYSRFC - LOG-10 ORDINATES OF FITTED CURVE - SYSTEMATIC RECORD
     2354C     WRCRFC - LOG-10 ORDINATES OF FITTED CURVE - WRC ESTIMATED
     2355C     FCXPG  - TABULAR ABSCISSA PROBABILITIES FOR FITTED CURVE
     2356C     NPLOT  - NUMBER OF PLOT POINTS IN FITTED CURVE
     2357C     IWXMOD -
     2358C     HSTFLG - flag to plot historic adjusted peaks, 0-yes, 1-no
     2359C     NOCLIM - flag for confidence limits, 0-available, 1-not available
     2360C     CLIML  - log10 ordinates of fitted curve, lower confidence limits
     2361C     CLIMU  - log10 ordinates of fitted curve, upper confidence limits
     2362C     IPLTNO - sequence number of this station (for identifying plots)
     2363C
     2364C     + + + LOCAL VARIALBES + + +
     2365      INTEGER   IPRTPL, IGKSPL, DEVCOD
                                         |
WARNING -- INTEGER scalar (DEVCOD) is never used.

     2366      REAL      EPSILN
     2367      CHARACTER*3 PLTEXT
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 75
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     2368C
     2369C     + + + INTRINSICS + + +
     2370      INTRINSIC   MOD, ABS
     2371C
     2372C     + + + EXTERNALS + + +
     2373      EXTERNAL   FRQPLG, FRQPLT
     2374      EXTERNAL   GPINIT, GPDEVC
     2375C
     2376C     + + + DATA INITIALIZATIONS + + +
     2377      DATA   EPSILN/1.0E-6/
     2378C
     2379C     + + + END SPECIFICATIONS + + +
     2380C
     2381      IGKSPL = MOD(IPLTOP,2)
     2382      IPRTPL = MOD(IPLTOP/2,2)
     2383C
     2384      IF (IPRTPL .EQ. 1 )  THEN
     2385        WRITE(MSG, '(''1''/(25X,A))' ) HEADNG
     2386        IF (ABS(WEIBA) .GT. EPSILN) THEN
     2387          WRITE(MSG,'(85X,A,F6.3,A)') '*** WEIBXXX PLOTTING, WEIBA =',
     2388     $       WEIBA,'***'
     2389        ELSE
     2390          WRITE(MSG,*)' '
     2391        END IF
     2392        CALL FRQPLT(   MSG,
     2393     $              NPKPLT, PKLOG, SYSPP, WRCPP,
     2394     $              SYSRFC,WRCFC,FCXPG,NPLOT,IWXMOD)
     2395      END IF
     2396C
     2397      IF (IGKSPL .EQ. 1)  THEN
     2398Cprh    always generate BMP graphic files
     2399C       set device type and code
     2400        CALL GPDEVC (4,8)
     2401        PLTEXT = 'BMP'
     2402        CALL FRQPLG
     2403     $            (HEADNG,NPKPLT, PKLOG, SYSPP, WRCPP, WEIBA,
     2404     $            NPLOT,SYSRFC,WRCFC,FCXPG,HSTFLG,
     2405     $            NOCLIM, CLIML, CLIMU, IPLTNO, PLTEXT )
     2406        IF (IPLTOP.GT.0 .AND.
     2407     $     (GRFMT.EQ.'CGM' .OR. GRFMT(1:2).EQ.'PS' .OR. 
     2408     $      GRFMT.EQ.'WMF')) THEN !generate graphic metafiles also
     2409C         set device type and code
     2410          IF (GRFMT.EQ.'CGM') THEN
     2411            CALL GPDEVC (4,4)
     2412          ELSE IF (GRFMT(1:2).EQ.'PS') THEN
     2413            CALL GPDEVC (4,6)
     2414          ELSE IF (GRFMT.EQ.'WMF') THEN
     2415            CALL GPDEVC (4,9)
     2416          END IF
     2417          CALL FRQPLG
     2418     $              (HEADNG,NPKPLT, PKLOG, SYSPP, WRCPP, WEIBA,
     2419     $              NPLOT,SYSRFC,WRCFC,FCXPG,HSTFLG,
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 76
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     2420     $              NOCLIM, CLIML, CLIMU, IPLTNO, GRFMT )
     2421        END IF
     2422      END IF
     2423C
     2424      RETURN
     2425      END
Bytes of stack required for this program unit: 120.


--------------------------------------------------  Symbol Cross Reference  ---------------------------------------------------
Name (Type)           Class          Offset     Context  (d-DO, =-Assignment, /-Initialization, i-Input, o-Output, p-Pointer,
                                                         r-Argument, s-Specification, u-Usage)
-------------------------------------------------------------------------------------------------------------------------------
CLIML (REAL)          array                       2326s     2340s     2405r     2402r     2402r     2420r     2417r     2417r
CLIMU (REAL)          array                       2326s     2340s     2405r     2402r     2402r     2420r     2417r     2417r
DEVCOD (INTEGER)      scalar                      2365s
EPSILN (REAL)         scalar                      2366s     2377/     2386u
FCXPG (REAL)          array                       2325s     2340s     2394r     2392r     2392r     2404r     2402r     2402r
                                                  2419r     2417r     2417r
FRQPLG                SUBROUTINE                  2373u     2402u     2417u
FRQPLT                SUBROUTINE                  2373u     2392u
GPDEVC                SUBROUTINE                  2374u     2400u     2411u     2413u     2415u
GPINIT                Procedure                   2374u
GRFMT (CHARACTER)     scalar                      2323s     2337s     2407u     2407u     2408u     2410u     2412u     2414u
                                                  2420r     2417r     2417r     2406i     2406i     2406i     2410i     2412i
                                                  2414i
HEADNG (CHARACTER)    array                       2323s     2338s     2385o     2385o     2403r     2402r     2402r     2418r
                                                  2417r     2417r
HSTFLG (INTEGER)      scalar                      2325s     2336s     2404r     2402r     2402r     2419r     2417r     2417r
IGKSPL (INTEGER)      scalar                      2365s     2381=     2397u
IPLTNO (INTEGER)      scalar                      2326s     2336s     2405r     2402r     2402r     2420r     2417r     2417r
IPLTOP (INTEGER)      scalar                      2323s     2335s     2381r     2382u     2406u
IPRTPL (INTEGER)      scalar                      2365s     2382=     2384u
IWXMOD (INTEGER)      scalar                      2325s     2335s     2394r     2392r     2392r
MSG (INTEGER)         scalar                      2323s     2335s     2385o     2387o     2390o     2392r     2392r     2392r
NOCLIM (INTEGER)      scalar                      2326s     2336s     2405r     2402r     2402r     2420r     2417r     2417r
NPKPLT (INTEGER)      scalar                      2324s     2335s     2393r     2392r     2392r     2403r     2402r     2402r
                                                  2418r     2417r     2417r
NPLOT (INTEGER)       scalar                      2325s     2335s     2394r     2392r     2392r     2404r     2402r     2402r
                                                  2419r     2417r     2417r
PKLOG (REAL)          array                       2324s     2339s     2393r     2392r     2392r     2403r     2402r     2402r
                                                  2418r     2417r     2417r
PLTEXT (CHARACTER)    scalar                      2367s     2401=     2405r     2402r     2402r
PLTFRQ                SUBROUTINE                  2322s
SYSPP (REAL)          array                       2324s     2339s     2393r     2392r     2392r     2403r     2402r     2402r
                                                  2418r     2417r     2417r
SYSRFC (REAL)         array                       2325s     2339s     2394r     2392r     2392r     2404r     2402r     2402r
                                                  2419r     2417r     2417r
WEIBA (REAL)          scalar                      2324s     2340s     2386r     2388o     2403r     2402r     2402r     2418r
                                                  2417r     2417r
WRCFC (REAL)          array                       2325s     2339s     2394r     2392r     2392r     2404r     2402r     2402r
                                                  2419r     2417r     2417r
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 77
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
WRCPP (REAL)          array                       2324s     2339s     2393r     2392r     2392r     2403r     2402r     2402r
                                                  2418r     2417r     2417r
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 78
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

SUBROUTINE FRQPLT    Compiling Options: -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     2426C
     2427C
     2428C
     2429      SUBROUTINE   FRQPLT
     2430     #                  ( MSG , NPKS,PLGSRT,PPOS1,PPOSHW,QSTA,
     2431     $                   QHW,XPRB,NPLT,IWXMOD)
     2432C
     2433C     + + + PURPOSE + + +
     2434C     FREQUENCY PLOT OBSERVED AND COMPUTED PEAKS.
     2435C     REV 12/83 FOR PRIME -- WK.
     2436C     6/28 FORCE AT LEAST 1 LOG CYCLE PLOT RANGE
     2437C     6/22 CALL J407SC NOT PPPSCL TO GET PRETTY LOG SCALE UNITS 1 OR 5
     2438C     6/17  CALL J407P4 INSTEAD OF PLOT4 TO PRINT NATURAL UNITS PEAKS.
     2439C
     2440C     + + + DUMMY ARGUMENTS + + +
     2441      INTEGER   MSG, NPKS, NPLT, IWXMOD
     2442      REAL       PLGSRT(*),PPOS1(*),PPOSHW(*),
     2443     #           XPRB(*),QSTA(*),QHW(*)
     2444C
     2445C     + + + ARGUMENT DEFINITIONS + + +
     2446C     MSG    -
     2447C     NPKS   -
     2448C     PLGSRT -
     2449C     PPOS1  -
     2450C     PPOSHW -
     2451C     QSTA   -
     2452C     QHW    -
     2453C     XPRB   -
     2454C     NPLT   -
     2455C     IWXMOD -
     2456C     + + + COMMON BLOCKS + + +
     2457C
     2458C     + + + LOCAL VARIABLES + + +
     2459      INTEGER NSCLE(5)
     2460      INTEGER  IVGRID(13)
     2461      CHARACTER*1  PLTSYM(4)
     2462      INTEGER   NVGRID, JJ, KK, J, I, MM
     2463      REAL      PLTBAS, PP0, PP1, PQMAX, PQMIN, QMIN, QMNP,
     2464     &          QMAX
     2465C
     2466C     + + + INTRINSICS + + +
     2467      INTRINSIC   AMIN1, AMAX1
     2468C
     2469C     + + + FUNCTIONS + + +
     2470C
     2471C     + + + EXTERNALS + + +
     2472      EXTERNAL   J407P4, PLOT3, PLOT22, PLOT3N, PLOT2, PLOT1
     2473      EXTERNAL   J407SC, OMIT
     2474C
     2475C     + + + DATA INITIALIZATIONS + + +
     2476      DATA PLTBAS/0./, PLTSYM / '*', 'O', '$', '#'/
     2477      DATA NSCLE / 1, 0, 1, 0, 0/
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 79
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     2478      DATA  IVGRID/6,19,26,35, 41,51,61,67,76,83,91,96,101/
     2479      DATA PP1,PP0/-2.5762,+2.8785/, NVGRID/13/
     2480C
     2481C     + + + FORMATS + + +
     2482  163 FORMAT(/' ',12X,'99.5 99.0',9X,'95.0   90.0     80.0  70.0',
     2483     #  6X,'50.0      30.0  20.0     10.0    5.0     2.0  1.0  0.5   ',
     2484     #    '0.2'/35X,'ANNUAL EXCEEDANCE PROBABILITY, PERCENT   ',
     2485     $         '(NORMAL SCALE)'  )
     2486C
     2487C     + + + END SPECIFICATIONS + + +
     2488C
     2489C  FIND SMALLEST NONTRIVIAL COMPUTED PCTILES
     2490      DO70JJ=1,NPLT
     2491      IF(QSTA(JJ).GT.-10.)GOTO71
     2492   70 CONTINUE
     2493      JJ=NPLT
     2494   71 DO75KK=1,NPLT
     2495      IF(QHW(KK).GT.-10.)GOTO76
     2496   75 CONTINUE
     2497      KK=NPLT
     2498   76 CONTINUE
     2499      QMIN=AMIN1(QSTA(JJ),QHW(KK),PLGSRT(NPKS))
     2500      QMAX=AMAX1(QSTA(NPLT),QHW(NPLT),PLGSRT(1))
     2501      QMNP=AMAX1(QMIN,PLTBAS)
     2502C  FORCE PLOT RANGE GE 1 LOG CYCLE
     2503      IF(QMAX-QMNP.GE.1.)GOTO80
     2504      IF(QMAX.LE.8.5)QMAX=QMAX+1.
     2505      IF(QMAX.GT.8.5)QMNP=QMNP-1.
     2506   80 CONTINUE
     2507      CALL J407SC(QMAX,QMNP,5,       PQMAX,PQMIN)
     2508      IF(QMIN.LT.PQMIN)WRITE(MSG,62)
     2509   62 FORMAT(' ***FRQPLT WILL DROP POINTS BELOW PLOT BASE.')
     2510C
     2511C
     2512      CALL  PLOT1(NSCLE,5,10,1,106)
     2513C    NOTE -- DUMMY ARG IS REQUIRED  IN ARG LIST BUT NOT USED --
     2514      CALL PLOT2(  PP0,  PP1,  PQMAX ,   PQMIN)
     2515      CALL PLOT22(NVGRID,IVGRID)
     2516      J=8
     2517      I=5
     2518      CALL PLOT3N('*****  NOTICE  *****  NOTICE  ******',I+0,J,36)
     2519      IF(IWXMOD.NE.2)
     2520     $CALL PLOT3N('* PRELIMINARY MACHINE COMPUTATION. *',I+1,J,36)
     2521      IF(IWXMOD.EQ.2)
     2522     $CALL PLOT3N('* EXPERIMENTAL NON-17B COMPUTATION.*',I+1,J,36)
     2523      CALL PLOT3N('*  USER IS RESPONSIBLE FOR ASSESS- *',I+2,J,36)
     2524      CALL PLOT3N('*     MENT AND INTERPRETATION.     *',I+3,J,36)
     2525      CALL PLOT3N('************************************',I+4,J,36)
     2526      I=12
     2527      J=10
     2528      CALL PLOT3N('      PLOT SYMBOL KEY         ',I+0,J,30)
     2529      CALL PLOT3N('_  17B FINAL FREQUENCY CURVE  ',I+1,J,30)
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 80
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     2530      CALL PLOT3N('_  OBSERVED (SYSTEMATIC) PEAKS',I+2,J,30)
     2531      CALL PLOT3N('_  HISTORICALLY ADJUSTED PEAKS',I+3,J,30)
     2532      CALL PLOT3N('_  SYSTEMATIC-RECORD FREQ CURVE',I+4,J,31)
     2533      CALL PLOT3N('WHEN POINTS COINCIDE, ONLY THE',I+5,J,30)
     2534      CALL PLOT3N('TOPMOST SYMBOL SHOWS.         ',I+6,J,30)
     2535      DO 190 MM=1,4
     2536  190 CALL PLOT3N(PLTSYM(MM),I+MM,J,1)
     2537      CALL PLOT3(PLTSYM(4),XPRB(JJ),QSTA(JJ),NPLT-JJ+1)
     2538      CALL PLOT3(PLTSYM(3),PPOSHW,PLGSRT,NPKS)
     2539      CALL PLOT3(PLTSYM(2),PPOS1,PLGSRT,NPKS)
     2540      CALL PLOT3(PLTSYM(1),XPRB(KK),QHW(KK),NPLT-KK+1)
     2541      CALL OMIT(1)
     2542      CALL J407P4(41,'     ANNUAL PEAK MAGNITUDES   /LOG SCALE/')
     2543      CALL OMIT(0)
     2544      WRITE(MSG,163)
     2545      RETURN
     2546      END
Bytes of stack required for this program unit: 272.


--------------------------------------------------  Symbol Cross Reference  ---------------------------------------------------
Name (Type)           Class          Offset     Context  (d-DO, =-Assignment, /-Initialization, i-Input, o-Output, p-Pointer,
                                                         r-Argument, s-Specification, u-Usage)
-------------------------------------------------------------------------------------------------------------------------------
FRQPLT                SUBROUTINE                  2429s
I (INTEGER)           scalar                      2462s     2517=     2518u     2520u     2522u     2523u     2524u     2525u
                                                  2526=     2528u     2529u     2530u     2531u     2532u     2533u     2534u
                                                  2536u
IVGRID (INTEGER)      array                       2460s     2478/     2515r     2515r     2515r
IWXMOD (INTEGER)      scalar                      2431s     2441s     2519u     2521u
J (INTEGER)           scalar                      2462s     2516=     2518r     2518r     2518r     2520r     2520r     2520r
                                                  2522r     2522r     2522r     2523r     2523r     2523r     2524r     2524r
                                                  2524r     2525r     2525r     2525r     2527=     2528r     2528r     2528r
                                                  2529r     2529r     2529r     2530r     2530r     2530r     2531r     2531r
                                                  2531r     2532r     2532r     2532r     2533r     2533r     2533r     2534r
                                                  2534r     2534r     2536r     2536r     2536r
J407P4                SUBROUTINE                  2472u     2542u
J407SC                SUBROUTINE                  2473u     2507u
JJ (INTEGER)          scalar                      2462s     2491u     2493=     2499u     2537u     2537u     2537u
KK (INTEGER)          scalar                      2462s     2495u     2497=     2499u     2540u     2540u     2540u
MM (INTEGER)          scalar                      2462s     2536u     2536u
MSG (INTEGER)         scalar                      2430s     2441s     2508o     2544o
NPKS (INTEGER)        scalar                      2430s     2441s     2499u     2538r     2538r     2538r     2539r     2539r
                                                  2539r
NPLT (INTEGER)        scalar                      2431s     2441s     2490u     2493u     2494u     2497u     2500u     2500u
                                                  2537u     2540u
NSCLE (INTEGER)       array                       2459s     2477/     2512r     2512r     2512r
NVGRID (INTEGER)      scalar                      2462s     2479/     2515r     2515r     2515r
OMIT                  SUBROUTINE                  2473u     2541u     2543u
PLGSRT (REAL)         array                       2430s     2442s     2499r     2499r     2500r     2500r     2538r     2538r
                                                  2538r     2539r     2539r     2539r
PLOT1                 SUBROUTINE                  2472u     2512u
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 81
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
PLOT2                 SUBROUTINE                  2472u     2514u
PLOT22                SUBROUTINE                  2472u     2515u
PLOT3                 SUBROUTINE                  2472u     2537u     2538u     2539u     2540u
PLOT3N                SUBROUTINE                  2472u     2518u     2520u     2522u     2523u     2524u     2525u     2528u
                                                  2529u     2530u     2531u     2532u     2533u     2534u     2536u
PLTBAS (REAL)         scalar                      2463s     2476/     2501r     2501r
PLTSYM (CHARACTER)    array                       2461s     2476/     2536r     2536r     2536r     2537r     2537r     2537r
                                                  2538r     2538r     2538r     2539r     2539r     2539r     2540r     2540r
                                                  2540r
PP0 (REAL)            scalar                      2463s     2479/     2514r     2514r     2514r
PP1 (REAL)            scalar                      2463s     2479/     2514r     2514r     2514r
PPOS1 (REAL)          array                       2430s     2442s     2539r     2539r     2539r
PPOSHW (REAL)         array                       2430s     2442s     2538r     2538r     2538r
PQMAX (REAL)          scalar                      2463s     2507r     2507r     2507r     2514r     2514r     2514r
PQMIN (REAL)          scalar                      2463s     2507r     2507r     2507r     2508u     2514r     2514r     2514r
QHW (REAL)            array                       2431s     2443s     2495u     2499r     2499r     2500r     2500r     2540r
                                                  2540r     2540r
QMAX (REAL)           scalar                      2464s     2500=     2503u     2504u     2504u     2504=     2505u     2507r
                                                  2507r     2507r
QMIN (REAL)           scalar                      2463s     2499=     2501r     2501r     2508u
QMNP (REAL)           scalar                      2463s     2501=     2503u     2505u     2505=     2507r     2507r     2507r
QSTA (REAL)           array                       2430s     2443s     2491u     2499r     2499r     2500r     2500r     2537r
                                                  2537r     2537r
XPRB (REAL)           array                       2431s     2443s     2537r     2537r     2537r     2540r     2540r     2540r


--------------------------------------------------  Label Cross Reference  ----------------------------------------------------
Label  Context  (d-DO, =-ASSIGN, f-FORMAT, g-GOTO, i-IF statement, s-Specification, r-Argument)
-------------------------------------------------------------------------------------------------------------------------------
163         2482s     2544f
190         2535d     2536s
62          2508f     2509s
70          2490d     2492s
71          2491g     2494s
75          2494d     2496s
76          2495g     2498s
80          2503g     2506s
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 82
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

SUBROUTINE J407P4    Compiling Options: -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     2547C
     2548C
     2549C
     2550      SUBROUTINE   J407P4
     2551     #                 (NL,LABEL)
     2552C
     2553C     + + + PURPOSE + + +
     2554C     SPECIAL VERSION OF PRPLOT FOR PGM J407.   76-06-16 WK.
     2555C                             REVISED FOR PRIME 12/83 WK.
     2556C
     2557C     PRINTS NATURAL UNITS ON VERTICAL LOG SCALE OF J407
     2558C     LOG-PROBABILITY PRINTER PLOT.
     2559C     ORDINATE PRINT CALCULATION IS SET UP FOR 1 DECIMAL PLACE (F12.1)
     2560C
     2561C     USGS PROG NO B524 - CCD USER SERVICES
     2562C      PETE SMIDINGER   SUMMER 1966  MATH & COMP BR  GSFC  NASA
     2563C     REVISION 730604 WKIRBY USGS-WRD ACTIVATE PLTAPE ENTRY AND
     2564C           REPLACE DSRN = 6 (CONSTANT)  BY VARIABLE IJTAPE
     2565C     REVISION 8/24/78 WK - PUT IJTAPE VARIABLE IN COMMON PRPCOM FOR USE
     2566C             BY OTHER PRPLOT ROUTINES.
     2567C     ADDED PLOT3Z ENTRY TO PLOT SYMBOL VECTOR.  WK 1/80.
     2568C
     2569C     REV 4/83 WK FOR      *** P R I M E  ***    *** P R I M E ***
     2570C     REV 4/83 WK - ENTRY PLOT22 INSERTS IRREGULARLY SPACED VERTICAL GRID
     2571C          LINES SUCH AS FOR PROBABILITY PAPER.
     2572C     REV 8/83 WK -- RESET KPLOT1 AT 210 TO RESTORE DEFAULT GRID.
     2573C     REV 12/83 WK -- ENTRY PLOT3N PUTS A NOTE AT SPECIFIED LINE/COLUMN OF
     2574C          PLOT-IMAGE AREA.
     2575C     ********************************************************************
     2576C     ***
     2577C     ***     NOTE THAT IMAGE AREA NOW IS A   L O C A L   VARIABLE
     2578C     ***      NOT SUPPLIED BY USER.   BUILT-IN MAX PLOT SIZE IS
     2579C     ***       7381 CHARACTERS, INCLUDING HORIZ AND VERT AXES.
     2580C     ***      THIS IS ENOUGH FOR 61 MAX-LENGTH LINES OF 121 CHARS.
     2581C     ***
     2582C     ***        FIRST ARG OF PLOT2 ENTRY STILL MUST BE SUPPLIED
     2583C     ***         BY USER, BUT IT MAY BE ANY DUMMY VARIABLE...
     2584C     ***         IT'S IGNORED BY THE SUBROUTINE.
     2585C     ***
     2586C     ********************************************************************
     2587C
     2588C
     2589C     + + + DUMMY ARGUMENTS + + +
     2590      INTEGER   NL, NSCALE(5), NHL, NSBH, NVL, NSBV, NVGD2,
     2591     &          IVGD2(*), LSW, JLINE, ICOL, N3, ITAPE
     2592      REAL      XMAX, XMIN, YMAX, YMIN, X(*), Y(*)
     2593      CHARACTER*(*) LABEL, CH
     2594C
     2595C     + + + ARGUMENT DEFINITION + + +
     2596C     NL     -
     2597C     LABEL  -
     2598C
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 83
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     2599C     + + + COMMON BLOCKS + + +
     2600      COMMON / PRPCOM /  IJTAPE
     2601      INTEGER            IJTAPE
     2602C
     2603C     **** P R I M E **** REVISION  --  SAVE
     2604C     + + + SAVE + + +
     2605Ckmf  SAVE
     2606C
     2607C     + + + LOCAL VARIABLES + + +
     2608      CHARACTER*1  IMAGE(7381)
     2609      REAL                  ABNOS(26)
     2610      CHARACTER*1 NOS(10), VC, HC,NC,BL,HF,HDOT,HCOMMA,WL
     2611      CHARACTER*22   FOR1, FOR2, FOR3
     2612      REAL      TENTO(10)
     2613      INTEGER   IITAPE, NH, NSH, NV, NSV,
     2614     &          NSCL, NVP, NDH, NDHP, NDV, NDVP, NIMG, IY, IX,
     2615     &          NA, NS, NB, I1, I2, J, I3, I, NN, J1, J2,
     2616     &          J3, ICHINC, ICH, NX, NY
     2617      LOGICAL   KPLOT1, KPLOT2, KTAPEI, KABSC, KORD, KBOTGL, KPLOT,
     2618     &          KNHOR
     2619      REAL       SQRT10, FSY, FSX, YMX, DH, DV, XMIN1,
     2620     &           YMIN1, DUM1, DUM2, ORDNO, ORDPRT
     2621Ckmf  add saves for all local variables
     2622      SAVE      IMAGE, ABNOS, NOS, VC, HC, NC, BL, HF, HDOT, HCOMMA, WL,
     2623     $          FOR1, FOR2, FOR3,
     2624     $          TENTO,
     2625     $          IITAPE, NH, NSH, NV, NSV,
     2626     $          NSCL, NVP, NDH, NDHP, NDV, NDVP, NIMG, IY, IX,
     2627     $          NA, NS, NB, I1, I2, J, I3, I, NN, J1, J2,
     2628     $          J3, ICHINC, ICH, NX, NY,
     2629     $          KPLOT1, KPLOT2, KTAPEI, KABSC, KORD, KBOTGL, KPLOT,
     2630     $          KNHOR,
     2631     $          SQRT10, FSY, FSX, YMX, DH, DV, XMIN1,
     2632     $          YMIN1, DUM1, DUM2, ORDNO, ORDPRT
     2633C
     2634C     + + + INTRINSICS + + +
     2635      INTRINSIC   MOD, MIN0, INT, IABS, FLOAT, ABS
     2636C
     2637C     + + + ENRTY POINTS + + +
     2638C     PLOT1, PLOT22, PLOT3, PLOT4, FPLOT4, OMIT, PLTAPE, PLOT2, PLOT3N
     2639C     PLOT3Z
     2640C
     2641C     + + + DATA INITIALIZATIONS + + +
     2642      DATA TENTO/1.,10.,100.,1E3,1E4,1E5,1E6,1E7,1E8,1E9/
     2643      DATA SQRT10/3.16/
     2644      DATA NOS   /'0','1','2','3','4','5','6','7','8','9'/
     2645     $     ,HC/'-'/,NC/'+'/,BL/' '/
     2646     $         , HF/'F'/,HDOT/'.'/,HCOMMA/','/
     2647      DATA         VC/'|'/
     2648      DATA  FOR1 / '(1X,A1,F12.?,1X,121A1)' /
     2649      DATA  FOR2 / '(1X,A1,13X,121A1 )    ' /
     2650      DATA  FOR3 / '(1H0,F  . ,  F   . )  ' /
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 84
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     2651C                   1...5....11...5....21..
     2652C
     2653      DATA IITAPE / 96 /
     2654      DATA KPLOT1 /. FALSE./, KPLOT2/.FALSE./   , KTAPEI/.FALSE./
     2655      DATA  KABSC,KORD,KBOTGL /3*.FALSE./
     2656C
     2657C     + + + END SPECIFICATIONS + + +
     2658C
     2659      GO TO 400
     2660C
     2661      ENTRY PLOT1(NSCALE,NHL,NSBH,NVL,NSBV)
     2662      KPLOT1=.TRUE.
     2663      KPLOT2=.FALSE.
     2664      NH=IABS(NHL)
     2665      NSH=IABS(NSBH)
     2666      NV=IABS(NVL)
     2667      NSV=IABS(NSBV)
     2668      NSCL=NSCALE(1)
     2669 125  CONTINUE
     2670      IF(.NOT.KTAPEI) IJTAPE=IITAPE
     2671      KTAPEI=.TRUE.
     2672      IF(NH*NSH*NV*NSV.NE.0) GO TO 128
     2673      WRITE(IJTAPE,       14 )
     267414    FORMAT(T5,'SOME PLOT1 ARG. ILLEGALLY 0')
     2675      KPLOT=.FALSE.
     2676      RETURN
     2677128   KPLOT=.TRUE.
     2678      IF(NV.LE.25) GO TO 126
     2679      WRITE(IJTAPE,         12 )
     2680      KPLOT=.FALSE.
     268112    FORMAT(T5,'NO. OF VERTICAL LINES >25')
     2682      RETURN
     2683126   CONTINUE
     2684      NVP=NV+1
     2685      NDH=NH*NSH
     2686      NDHP=NDH+1
     2687      NDV=NV*NSV
     2688      NDVP=NDV+1
     2689      NIMG=(NDHP*NDVP)
     2690      IF(NDV.LE.120) GO TO 130
     2691      KPLOT=.FALSE.
     2692      WRITE(IJTAPE,        11 )
     269311    FORMAT(T5,'WIDTH OF GRAPH >121')
     2694      RETURN
     2695130   CONTINUE
     2696      IF(NDHP*NDVP.LE. 7381 )   GO TO 135
     2697      WRITE(IJTAPE,      133) NDHP,NDVP
     2698  133 FORMAT(' *** PRPLOT -- GRAPH DIMENSIONS TOO BIG -- ',2I6)
     2699      KPLOT = .FALSE.
     2700      RETURN
     2701  135 CONTINUE
     2702      IF(NSCL.EQ.0) GO TO 70
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 85
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     2703      FSY=10.**NSCALE(2)
     2704      FSX=10.**NSCALE(4)
     2705      IY=MIN0(IABS(NSCALE(3)),7)+1
     2706      IX=MIN0(IABS(NSCALE(5)),9)+1
     2707      GO TO 75
     270870    FSY=1.
     2709      FSX=1.
     2710      IY=4
     2711      IX=4
     271275    FOR1(12:12)=NOS(IY)
     2713      NA=MIN0(IX,NSV)-1
     2714      NS=NA-MIN0(NA,120-NDV)
     2715      NB=11-NS+NA
     2716      I1=NB/10
     2717      I2=NB-I1*10
     2718      FOR3(7:7)=NOS(I1+1)
     2719      FOR3(8:8)=NOS(I2+1)
     2720      FOR3(10:10)=NOS(NA+1)
     2721      IF(NV.GT.0) GO TO 90
     2722      DO 80 J=11,18
     272380    FOR3(J:J)=BL
     2724      GO TO 100
     2725 90    I1=NV/10
     2726      I2=NV-I1*10
     2727      FOR3(11:11)=HCOMMA
     2728      FOR3(12:12)=NOS(I1+1)
     2729      FOR3(13:13)=NOS(I2+1)
     2730      FOR3(14:14)=HF
     2731      I1=NSV/100
     2732      I3=NSV-I1*100
     2733      I2=I3/10
     2734      I3=I3-I2*10
     2735      FOR3(15:15)=NOS(I1+1)
     2736      FOR3(16:16)=NOS(I2+1)
     2737      FOR3(17:17)=NOS(I3+1)
     2738      FOR3(18:18)=HDOT
     2739      FOR3(19:19)=FOR3(10:10)
     2740100   IF(KPLOT1) RETURN
     2741      KPLOT1=.TRUE.
     2742C
     2743      ENTRY PLOT2(XMAX,XMIN,YMAX,YMIN)
     2744      KPLOT2=.TRUE.
     2745      IF(KPLOT1) GO TO 210
     2746      NSCL=0
     2747      NH=5
     2748      NSH=10
     2749      NV=10
     2750      NSV=10
     2751       GO TO 125
     2752210   CONTINUE
     2753      KPLOT1 = .FALSE.
     2754      IF(.NOT.KPLOT)RETURN
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 86
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     2755      YMX=YMAX
     2756      DH=(YMAX-YMIN)/FLOAT (NDH)
     2757      DV=(XMAX-XMIN)/FLOAT(NDV)
     2758      DO 220 I=1,NVP
     2759220   ABNOS(I)=(XMIN+FLOAT((I-1)*NSV)*DV)*FSX
     2760      DO 225 I=1,NIMG
     2761225   IMAGE(I)=BL
     2762      DO 240 I=1,NDHP
     2763      I2=I*NDVP
     2764      I1=I2-NDV
     2765      KNHOR=MOD(I-1,NSH).NE.0
     2766      IF(KNHOR) GO TO 230
     2767      DO 228 J=I1,I2
     2768228   IMAGE(J)=HC
     2769230   CONTINUE
     2770      DO 240 J=I1,I2,NSV
     2771      IF(KNHOR) THEN       
     2772        IMAGE(J)=VC
     2773      ELSE
     2774        IMAGE(J)=NC
     2775      END IF       
     2776240   CONTINUE
     2777      XMIN1=XMIN-DV/2.
     2778      YMIN1=YMIN-DH/2.
     2779      RETURN
     2780C
     2781      ENTRY  PLOT22 (NVGD2, IVGD2)
     2782C       INSERTS IRREGULARLY SPACED VERTICAL GRID LINES SUCH AS
     2783C        PROBABILITY PAPER.
     2784      IF(KPLOT2) GO TO 265
     2785      IF(.NOT.KTAPEI) IJTAPE = IITAPE
     2786        KTAPEI = .TRUE.
     2787      WRITE(IJTAPE,13)
     2788      KPLOT = .FALSE.
     2789      RETURN
     2790  265 CONTINUE
     2791      DO 268 NN = 1,NVGD2
     2792      J1 = IVGD2(NN)
     2793      J2 = (NDHP-1)*NDVP + J1
     2794      J3 = J1 - 1
     2795      DO 268 J = J1,J2,NDVP
     2796  268 IMAGE(J) = IMAGE(J-J3)
     2797      RETURN
     2798C
     2799C
     2800      ENTRY PLOT3N(CH,JLINE,ICOL,N3)
     2801      ICHINC = -1
     2802      GO TO 300
     2803      ENTRY PLOT3(CH,X,Y,N3)
     2804      ICHINC=0
     2805      GO TO 300
     2806      ENTRY  PLOT3Z(CH, X, Y, N3)
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 87
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     2807      ICHINC=1
     2808300   IF(KPLOT2) GO TO 312
     2809      IF(.NOT.KTAPEI) IJTAPE=IITAPE
     2810      KTAPEI=.TRUE.
     2811  301 WRITE(IJTAPE,       13 )
     281213    FORMAT(T5,'PLOT2 MUST BE CALLED')
     2813312   CONTINUE
     2814      IF(.NOT.KPLOT) RETURN
     2815      IF(N3.GT.0) GO TO 314
     2816      KPLOT=.FALSE.
     2817      WRITE(IJTAPE,       15 )
     281815    FORMAT(T5,'PLOT3 ARG2 < 0')
     2819      RETURN
     2820 314  CONTINUE
     2821      IF(ICHINC.LT.0) GO TO 350
     2822      ICH = 1 - ICHINC
     2823      DO 320 I=1,N3
     2824      ICH = ICH + ICHINC
     2825      DUM1=(X(I)-XMIN1)/DV
     2826      DUM2=(Y(I)-YMIN1)/DH
     2827      IF(DUM1.LT.0..OR.DUM2.LT.0.) GO TO 320
     2828      IF(DUM1.GE.NDVP.OR.DUM2.GE.NDHP) GO TO 320
     2829      NX=1+INT(DUM1)
     2830      NY=1+INT(DUM2)
     2831      J=(NDHP-NY)*NDVP+NX
     2832      IMAGE(J)=CH(ICH:ICH)
     2833320   CONTINUE
     2834      RETURN
     2835350   ICHINC = (JLINE-1)*NDVP + ICOL - 1
     2836      DO 355 I = 1,N3
     2837 355  IMAGE(ICHINC+I) = CH(I:I)
     2838      RETURN
     2839C
     2840C
     2841  400 CONTINUE
     2842      ENTRY PLOT4(NL,LABEL)
     2843      ENTRY FPLOT4(NL,LABEL)
     2844      IF(.NOT.KPLOT) RETURN
     2845      IF(.NOT.KPLOT2) GO TO 301
     2846      DO 420 I=1,NDHP
     2847      IF(I.EQ.NDHP.AND.KBOTGL) GO TO 420
     2848      WL=BL
     2849      IF(I.LE.NL) WL = LABEL(I:I)
     2850      I2=I*NDVP
     2851      I1=I2-NDV
     2852      IF(MOD(I-1,NSH).EQ.0.AND..NOT.KORD) GO TO 410
     2853      WRITE (IJTAPE,      FOR2) WL,(IMAGE(J),J=I1,I2)
     2854      GO TO 420
     2855410   CONTINUE
     2856Ckmf  added .00001 to YMX because pc rounded float(i-1)*dh to slightly
     2857Ckmf  larger than YMX (when they should have been equal), causing ordno
     2858Ckmf  to be incorrectly negative in some cases.
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 88
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     2859Ckmf  ORDNO=(YMX-FLOAT(I-1)*DH)*FSY
     2860      ORDNO=(YMX+0.00001 - FLOAT(I-1)*DH) * FSY
     2861C *** J407 ***
     2862C CVT ORDNO (LOG) TO ROUNDED NATURAL FOR PRINTING
     2863Caml  changed fron E38 to E29 for 5/94 fortran complier
     2864      ORDPRT = 1E29
     2865      IF(ORDNO.GE.10. .OR. ORDNO.LT.-1.2) GO TO 419
     2866      J = ORDNO + .001
     2867      IF(ORDNO .LT. 0.)  J = J - 1
     2868      ORDPRT = TENTO(IABS(J)+1)
     2869      IF(J.LT.0) ORDPRT = 1./ORDPRT
     2870      IF(ABS(ORDNO-J).GT.0.1) ORDPRT = ORDPRT*SQRT10
     2871      IF(ORDNO.GE.5.3) ORDPRT = ORDPRT + 0.05
     2872  419 ORDNO = ORDPRT
     2873C     WRITE (*,*) "J407P4:IJTAPE:",IJTAPE," ORDNO:",ORDNO,
     2874C    $            " I1,2:",I1,I2," WL:'",WL,"'"
     2875C     WRITE (*,*) "       FOR1:'",FOR1,"' IMAGE:",(IMAGE(J),J=I1,I2)
     2876      WRITE (IJTAPE,FOR1) WL,ORDNO,(IMAGE(J),J=I1,I2)
     2877420   CONTINUE
     2878C     jlk: Removal of the next debug write causes fatal error on lahey 
     2879C          unless compiled with no optimization (-o0)
     2880C     WRITE (*,*) "J407P4:KABSC:'",KABSC,"' NVP:",NVP
     2881C     IF (KABSC) GO TO 430
     2882      IF (KABSC .EQV. .FALSE.) THEN
     2883        WRITE (IJTAPE,FOR3) (ABNOS(J),J=1,NVP)
     2884      END IF
     2885C430  CONTINUE
     2886C     WRITE (*,*) "J407P4:PLOT4:Return"
     2887      RETURN
     2888C
     2889      ENTRY OMIT(LSW)
     2890      KABSC=MOD(LSW,2).EQ.1
     2891      KORD=MOD(LSW,4).GE.2
     2892      KBOTGL=LSW.GE.4
     2893      RETURN
     2894C
     2895      ENTRY PLTAPE(ITAPE)
     2896      IJTAPE = ITAPE
     2897      KTAPEI = .TRUE.
     2898      RETURN
     2899      END
Bytes of stack required for this program unit: 472.


--------------------------------------------------  Symbol Cross Reference  ---------------------------------------------------
Name (Type)           Class          Offset     Context  (d-DO, =-Assignment, /-Initialization, i-Input, o-Output, p-Pointer,
                                                         r-Argument, s-Specification, u-Usage)
-------------------------------------------------------------------------------------------------------------------------------
ABNOS (REAL)          array                       2609s     2622s     2759=     2883o
BL (CHARACTER)        scalar                      2610s     2622s     2645/     2723u     2761u     2848u
CH (CHARACTER)        scalar                      2593s     2800s     2803s     2806s     2832u     2837u
DH (REAL)             scalar                      2619s     2631s     2756=     2778u     2826u     2860u
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 89
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
DUM1 (REAL)           scalar                      2620s     2632s     2825=     2827u     2828u     2829r
DUM2 (REAL)           scalar                      2620s     2632s     2826=     2827u     2828u     2830r
DV (REAL)             scalar                      2619s     2631s     2757=     2759u     2777u     2825u
FOR1 (CHARACTER)      scalar                      2611s     2623s     2648/     2712=     2876i
FOR2 (CHARACTER)      scalar                      2611s     2623s     2649/     2853i
FOR3 (CHARACTER)      scalar                      2611s     2623s     2650/     2718=     2719=     2720=     2723=     2727=
                                                  2728=     2729=     2730=     2735=     2736=     2737=     2738=     2739=
                                                  2739u     2883i
FPLOT4                SUBROUTINE                  2843s
FSX (REAL)            scalar                      2619s     2631s     2704=     2709=     2759u
FSY (REAL)            scalar                      2619s     2631s     2703=     2708=     2860u
HC (CHARACTER)        scalar                      2610s     2622s     2645/     2768u
HCOMMA (CHARACTER)    scalar                      2610s     2622s     2646/     2727u
HDOT (CHARACTER)      scalar                      2610s     2622s     2646/     2738u
HF (CHARACTER)        scalar                      2610s     2622s     2646/     2730u
I (INTEGER)           scalar                      2615s     2627s     2759u     2759u     2761u     2763u     2765u     2825u
                                                  2826u     2837u     2837u     2837u     2847u     2849u     2849u     2849u
                                                  2850u     2852u     2860u
I1 (INTEGER)          scalar                      2615s     2627s     2716=     2717u     2718u     2725=     2726u     2728u
                                                  2731=     2732u     2735u     2764=     2767u     2770u     2851=     2853o
                                                  2876o
I2 (INTEGER)          scalar                      2615s     2627s     2717=     2719u     2726=     2729u     2733=     2734u
                                                  2736u     2763=     2764u     2767u     2770u     2850=     2851u     2853o
                                                  2876o
I3 (INTEGER)          scalar                      2615s     2627s     2732=     2733u     2734u     2734=     2737u
ICH (INTEGER)         scalar                      2616s     2628s     2822=     2824u     2824=     2832u     2832u
ICHINC (INTEGER)      scalar                      2616s     2628s     2801=     2804=     2807=     2821u     2822u     2824u
                                                  2835=     2837u
ICOL (INTEGER)        scalar                      2591s     2800s     2835u
IITAPE (INTEGER)      scalar                      2613s     2625s     2653/     2670u     2785u     2809u
IJTAPE (INTEGER)      scalar         0            2600s     2601s     2670=     2673o     2679o     2692o     2697o     2785=
                                                  2787o     2809=     2811o     2817o     2853o     2876o     2883o     2896=
IMAGE (CHARACTER)     array                       2608s     2622s     2761=     2768=     2772=     2774=     2796=     2796u
                                                  2832=     2837=     2853o     2853o     2876o     2876o
ITAPE (INTEGER)       scalar                      2591s     2895s     2896u
IVGD2 (INTEGER)       array                       2591s     2781s     2792u
IX (INTEGER)          scalar                      2614s     2626s     2706=     2711=     2713r     2713r
IY (INTEGER)          scalar                      2614s     2626s     2705=     2710=     2712u
J (INTEGER)           scalar                      2615s     2627s     2723u     2723u     2768u     2772u     2774u     2796u
                                                  2796u     2831=     2832u     2853=     2853u     2853u     2866=     2867u
                                                  2867=     2868r     2869u     2870u     2876=     2876u     2876u     2883=
                                                  2883u     2883u
J1 (INTEGER)          scalar                      2615s     2627s     2792=     2793u     2794u     2795u
J2 (INTEGER)          scalar                      2615s     2627s     2793=     2795u
J3 (INTEGER)          scalar                      2616s     2628s     2794=     2796u
J407P4                SUBROUTINE                  2550s
JLINE (INTEGER)       scalar                      2591s     2800s     2835u
KABSC (LOGICAL)       scalar                      2617s     2629s     2655/     2882u     2890=
KBOTGL (LOGICAL)      scalar                      2617s     2629s     2655/     2847u     2892=
KNHOR (LOGICAL)       scalar                      2618s     2630s     2765=     2766u     2771u
KORD (LOGICAL)        scalar                      2617s     2629s     2655/     2852u     2891=
KPLOT (LOGICAL)       scalar                      2617s     2629s     2675=     2677=     2680=     2691=     2699=     2754u
                                             Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 90
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
                                                  2788=     2814u     2816=     2844u
KPLOT1 (LOGICAL)      scalar                      2617s     2629s     2654/     2662=     2740u     2741=     2745u     2753=
KPLOT2 (LOGICAL)      scalar                      2617s     2629s     2654/     2663=     2744=     2784u     2808u     2845u
KTAPEI (LOGICAL)      scalar                      2617s     2629s     2654/     2670u     2671=     2785u     2786=     2809u
                                                  2810=     2897=
LABEL (CHARACTER)     scalar                      2551s     2593s     2842s     2843s     2849u
LSW (INTEGER)         scalar                      2591s     2889s     2890r     2891r     2892u
N3 (INTEGER)          scalar                      2591s     2800s     2803s     2806s     2815u     2823u     2836u
NA (INTEGER)          scalar                      2615s     2627s     2713=     2714r     2714r     2714u     2715u     2720u
NB (INTEGER)          scalar                      2615s     2627s     2715=     2716u     2717u
NC (CHARACTER)        scalar                      2610s     2622s     2645/     2774u
NDH (INTEGER)         scalar                      2614s     2626s     2685=     2686u     2756r
NDHP (INTEGER)        scalar                      2614s     2626s     2686=     2689u     2696u     2697o     2762u     2793u
                                                  2828u     2831u     2846u     2847u
NDV (INTEGER)         scalar                      2614s     2626s     2687=     2688u     2690u     2714u     2757r     2764u
                                                  2851u
NDVP (INTEGER)        scalar                      2614s     2626s     2688=     2689u     2696u     2697o     2763u     2793u
                                                  2795u     2828u     2831u     2835u     2850u
NH (INTEGER)          scalar                      2613s     2625s     2664=     2672u     2685u     2747=
NHL (INTEGER)         scalar                      2590s     2661s     2664r
NIMG (INTEGER)        scalar                      2614s     2626s     2689=     2760u
NL (INTEGER)          scalar                      2551s     2590s     2842s     2843s     2849u
NN (INTEGER)          scalar                      2615s     2627s     2792u
NOS (CHARACTER)       array                       2610s     2622s     2644/     2712u     2718u     2719u     2720u     2728u
                                                  2729u     2735u     2736u     2737u
NS (INTEGER)          scalar                      2615s     2627s     2714=     2715u
NSBH (INTEGER)        scalar                      2590s     2661s     2665r
NSBV (INTEGER)        scalar                      2590s     2661s     2667r
NSCALE (INTEGER)      array                       2590s     2661s     2668u     2703u     2704u     2705r     2706r
NSCL (INTEGER)        scalar                      2614s     2626s     2668=     2702u     2746=
NSH (INTEGER)         scalar                      2613s     2625s     2665=     2672u     2685u     2748=     2765r     2852r
NSV (INTEGER)         scalar                      2613s     2625s     2667=     2672u     2687u     2713r     2713r     2731u
                                                  2732u     2750=     2759u     2770u
NV (INTEGER)          scalar                      2613s     2625s     2666=     2672u     2678u     2684u     2687u     2721u
                                                  2725u     2726u     2749=
NVGD2 (INTEGER)       scalar                      2590s     2781s     2791u
NVL (INTEGER)         scalar                      2590s     2661s     2666r
NVP (INTEGER)         scalar                      2614s     2626s     2684=     2758u     2883o
NX (INTEGER)          scalar                      2616s     2628s     2829=     2831u
NY (INTEGER)          scalar                      2616s     2628s     2830=     2831u
OMIT                  SUBROUTINE                  2889s
ORDNO (REAL)          scalar                      2620s     2632s     2860=     2865u     2865u     2866u     2867u     2870u
                                                  2871u     2872=     2876o
ORDPRT (REAL)         scalar                      2620s     2632s     2864=     2868=     2869u     2869=     2870u     2870=
                                                  2871u     2871=     2872u
PLOT1                 SUBROUTINE                  2661s
PLOT2                 SUBROUTINE                  2743s
PLOT22                SUBROUTINE                  2781s
PLOT3                 SUBROUTINE                  2803s
PLOT3N                SUBROUTINE                  2800s
PLOT3Z                SUBROUTINE                  2806s
PLOT4                 SUBROUTINE                  2842s
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 91
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
PLTAPE                SUBROUTINE                  2895s
SQRT10 (REAL)         scalar                      2619s     2631s     2643/     2870u
TENTO (REAL)          array                       2612s     2624s     2642/     2868u
VC (CHARACTER)        scalar                      2610s     2622s     2647/     2772u
WL (CHARACTER)        scalar                      2610s     2622s     2848=     2849=     2853o     2853o     2876o     2876o
X (REAL)              array                       2592s     2803s     2806s     2825u
XMAX (REAL)           scalar                      2592s     2743s     2757u
XMIN (REAL)           scalar                      2592s     2743s     2757u     2759u     2777u
XMIN1 (REAL)          scalar                      2619s     2631s     2777=     2825u
Y (REAL)              array                       2592s     2803s     2806s     2826u
YMAX (REAL)           scalar                      2592s     2743s     2755u     2756u
YMIN (REAL)           scalar                      2592s     2743s     2756u     2778u
YMIN1 (REAL)          scalar                      2620s     2632s     2778=     2826u
YMX (REAL)            scalar                      2619s     2631s     2755=     2860u


--------------------------------------------------  Label Cross Reference  ----------------------------------------------------
Label  Context  (d-DO, =-ASSIGN, f-FORMAT, g-GOTO, i-IF statement, s-Specification, r-Argument)
-------------------------------------------------------------------------------------------------------------------------------
100         2724g     2740s
11          2692f     2693s
12          2679f     2681s
125         2669s     2751g
126         2678g     2683s
128         2672g     2677s
13          2787f     2811f     2812s
130         2690g     2695s
133         2697f     2698s
135         2696g     2701s
14          2673f     2674s
15          2817f     2818s
210         2745g     2752s
220         2758d     2759s
225         2760d     2761s
228         2767d     2768s
230         2766g     2769s
240         2762d     2770d     2776s
265         2784g     2790s
268         2791d     2795d     2796s
300         2802g     2805g     2808s
301         2811s     2845g
312         2808g     2813s
314         2815g     2820s
320         2823d     2827g     2828g     2833s
350         2821g     2835s
355         2836d     2837s
400         2659g     2841s
410         2852g     2855s
419         2865g     2872s
420         2846d     2847g     2854g     2877s
70          2702g     2708s
75          2707g     2712s
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 92
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
80          2722d     2723s
90          2721g     2725s
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 93
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

SUBROUTINE J407SC    Compiling Options: -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     2900C
     2901C
     2902C
     2903      SUBROUTINE   J407SC
     2904     #                  (XTOP,XBOT,NGRID,GTOP,GBOT)
     2905C
     2906C     + + + PURPOSE + + +
     2907C     SPECIAL VERSION OF PPPSCL FOR J407 LOG PLOT PRODUCES ONLY
     2908C     PRETTY SCALE FACTORS OF 1. AND 5. (NOT 2.).             WK 760622
     2909C     WK 9/23/76 ALLOW SCALE FACT 2 WHEN SCALE IS GT 1.
     2910C     *** REVISED FOR PRIME ***  WK 12/83
     2911C
     2912C     + + + DUMMY ARGUMENTS + + +
     2913      REAL   XTOP, XBOT, GTOP, GBOT
     2914      INTEGER   NGRID
     2915C
     2916C     + + + ARGUMENT DEFINITIONS + + +
     2917C     XTOP   -
     2918C     XBOT   -
     2919C     NGRID  -
     2920C     GTOP   -
     2921C     GBOT   -
     2922C
     2923C     + + + LOCAL VARIABLES + + +
     2924      LOGICAL NOSWIT
     2925      INTEGER   MSG, M
     2926      REAL      X, XMX, XMN, U, UGLY, TOL, TEMP, TENTOM, SMALL, SCALE,
     2927     &          GRANGE, GMX, GMN, FNGRID,EXCESS, BIG
     2928C
     2929C     + + + INTRINSIC + + +
     2930      INTRINSIC   SIGN, INT, AMIN1, AMAX1,ALOG10, AINT, ABS
     2931C
     2932C     + + + FUNCTIONS + + +
     2933      REAL   STEP, ZINT, FLOOR,  CEIL
     2934C
     2935C     + + + DATA INITIALIZATIONS + + +
     2936      DATA TOL /.005/
     2937      DATA MSG/6/
     2938C
     2939C    + + + END SPECIFICATIONS + + +
     2940C
     2941C***************************************
     2942C  STATEMENT FUNCTIONS
     2943      STEP(X) = .5 + SIGN(.5,X)
     2944      ZINT(X) = AINT(X) - 1. + STEP(X)
     2945      FLOOR(X) = ZINT(X+TOL)
     2946      CEIL(X) = ZINT(X+1.-TOL)
     2947C***************************************
     2948      XMX=AMAX1(XTOP,XBOT)
     2949      XMN=AMIN1(XTOP,XBOT)
     2950      NOSWIT=XTOP.GT.XBOT
     2951      FNGRID=NGRID
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 94
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     2952      UGLY=(XMX-XMN)/FNGRID
     2953      U=0.
     2954      M=0
     2955      IF(ABS(UGLY).LE.0.) GO TO 11
     2956      U = ALOG10(ABS(UGLY))
     2957      M=INT(U)
     2958      IF(U.LT.0.) M = M - 1
     2959      U = 10**(U-M)
     2960   11 CONTINUE
     2961      IF(U.LT.1.+TOL)U=10.*U
     2962      TENTOM=UGLY/U
     2963      U=U/(1.+TOL)
     2964      SCALE=5.
     2965      IF(U.LT.2. .AND. UGLY.GT.1.) SCALE=2.
     2966      IF(U.GT.5.)SCALE=10.
     2967      SCALE=SCALE*TENTOM
     2968C  20 CONTINUE
     2969      GMX=CEIL(XMX/SCALE)
     2970      GMN=FLOOR(XMN/SCALE)
     2971      GRANGE=GMX-GMN
     2972      IF(GRANGE.LE.FNGRID)GOTO100
     2973      IF(ABS((SCALE/TENTOM)-5.) .LT. 1.)GOTO80
     2974      GMX=CEIL(2.*XMX/SCALE)/2.
     2975      GMN=FLOOR(2.*XMN/SCALE)/2.
     2976      GRANGE=GMX-GMN
     2977      IF(GRANGE.LE.FNGRID)GOTO100
     2978   80 CONTINUE
     2979      SCALE=2.*SCALE
     2980      IF(SCALE.LT.(5.*TENTOM))SCALE=(5.*TENTOM)
     2981      GMX=CEIL(XMX/SCALE)
     2982      GMN=FLOOR(XMN/SCALE)
     2983      GRANGE=GMX-GMN
     2984      IF(GRANGE.LE.FNGRID)GOTO100
     2985      WRITE(MSG,98)XTOP,XBOT,GMX,GMN,SCALE
     2986   98 FORMAT(/' ***PRPSCL098 LOGIC ERROR',1P5E16.6/)
     2987      GBOT=XBOT
     2988      GTOP=XTOP
     2989      RETURN
     2990  100 CONTINUE
     2991      EXCESS=FNGRID-GRANGE
     2992      SMALL=AINT(EXCESS/2.)
     2993      BIG=EXCESS-SMALL
     2994      IF((GMX*SCALE-XMX) .GT. (XMN-GMN*SCALE))GOTO110
     2995      GMX=GMX+BIG
     2996      GMN=GMN-SMALL
     2997      GOTO120
     2998  110 GMX=GMX+SMALL
     2999      GMN=GMN-BIG
     3000  120 CONTINUE
     3001      GTOP=GMX*SCALE
     3002      GBOT=GMN*SCALE
     3003      IF(NOSWIT)GOTO130
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 95
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     3004      TEMP=GBOT
     3005      GBOT=GTOP
     3006      GTOP=TEMP
     3007  130 CONTINUE
     3008      RETURN
     3009      END
Bytes of stack required for this program unit: 568.


--------------------------------------------------  Symbol Cross Reference  ---------------------------------------------------
Name (Type)           Class          Offset     Context  (d-DO, =-Assignment, /-Initialization, i-Input, o-Output, p-Pointer,
                                                         r-Argument, s-Specification, u-Usage)
-------------------------------------------------------------------------------------------------------------------------------
BIG (REAL)            scalar                      2927s     2993=     2995u     2999u
CEIL                  FUNCTION                    2969u     2974u     2981u
CEIL (REAL)           scalar                      2933s
EXCESS (REAL)         scalar                      2927s     2991=     2992u     2993u
FLOOR                 FUNCTION                    2970u     2975u     2982u
FLOOR (REAL)          scalar                      2933s
FNGRID (REAL)         scalar                      2927s     2951=     2952u     2972u     2977u     2984u     2991u
GBOT (REAL)           scalar                      2904s     2913s     2987=     3002=     3004u     3005=
GMN (REAL)            scalar                      2927s     2970=     2971u     2975=     2976u     2982=     2983u     2985o
                                                  2994u     2996u     2996=     2999u     2999=     3002u
GMX (REAL)            scalar                      2927s     2969=     2971u     2974=     2976u     2981=     2983u     2985o
                                                  2994u     2995u     2995=     2998u     2998=     3001u
GRANGE (REAL)         scalar                      2927s     2971=     2972u     2976=     2977u     2983=     2984u     2991u
GTOP (REAL)           scalar                      2904s     2913s     2988=     3001=     3005u     3006=
J407SC                SUBROUTINE                  2903s
M (INTEGER)           scalar                      2925s     2954=     2957=     2958u     2958=     2959u
MSG (INTEGER)         scalar                      2925s     2937/     2985o
NGRID (INTEGER)       scalar                      2904s     2914s     2951u
NOSWIT (LOGICAL)      scalar                      2924s     2950=     3003u
SCALE (REAL)          scalar                      2926s     2964=     2965=     2966=     2967u     2967=     2969u     2970u
                                                  2973u     2974u     2975u     2979u     2979=     2980u     2980=     2981u
                                                  2982u     2985o     2994u     2994u     3001u     3002u
SMALL (REAL)          scalar                      2926s     2992=     2993u     2996u     2998u
STEP (REAL)           scalar                      2933s
STEP                  FUNCTION                    2944u
TEMP (REAL)           scalar                      2926s     3004=     3006u
TENTOM (REAL)         scalar                      2926s     2962=     2967u     2973u     2980u     2980u
TOL (REAL)            scalar                      2926s     2936/     2945u     2946u     2961u     2963u
U (REAL)              scalar                      2926s     2953=     2956=     2957r     2958u     2959u     2959=     2961u
                                                  2961u     2961=     2962u     2963u     2963=     2965u     2966u
UGLY (REAL)           scalar                      2926s     2952=     2955r     2956r     2962u     2965u
XBOT (REAL)           scalar                      2904s     2913s     2948r     2948r     2949r     2949r     2950u     2985o
                                                  2987u
XMN (REAL)            scalar                      2926s     2949=     2952u     2970u     2975u     2982u     2994u
XMX (REAL)            scalar                      2926s     2948=     2952u     2969u     2974u     2981u     2994u
XTOP (REAL)           scalar                      2904s     2913s     2948r     2948r     2949r     2949r     2950u     2985o
                                                  2988u
ZINT                  FUNCTION                    2945u     2946u
ZINT (REAL)           scalar                      2933s
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 96
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------


--------------------------------------------------  Label Cross Reference  ----------------------------------------------------
Label  Context  (d-DO, =-ASSIGN, f-FORMAT, g-GOTO, i-IF statement, s-Specification, r-Argument)
-------------------------------------------------------------------------------------------------------------------------------
100         2972g     2977g     2984g     2990s
11          2955g     2960s
110         2994g     2998s
120         2997g     3000s
130         3003g     3007s
80          2973g     2978s
98          2985f     2986s
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 97
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

SUBROUTINE MOVEI    Compiling Options: -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     3010C
     3011C
     3012C
     3013      SUBROUTINE   MOVEI
     3014     #                (ISOURC, IDATA, NITEMS)
     3015C
     3016C     + + + PURPOSE + + +
     3017C     MOVES INTEGER DATA FROM ISOURC TO IDATA, NITEMS ITEMS.
     3018C
     3019C     + + + DUMMY ARGUMENTS + + +
     3020      INTEGER   NITEMS
     3021      INTEGER   ISOURC(NITEMS),  IDATA(NITEMS)
     3022C
     3023C     + + + ARGUMENT DEFINITIONS + + +
     3024C     ISOURC -
     3025C     IDATA  -
     3026C     NITEMS -
     3027C
     3028C     + + + LOCAL VARIABLES + + +
     3029      INTEGER   I
     3030C
     3031C     + + + END SPECIFICATIONS + + +
     3032C
     3033      DO 30 I=1,NITEMS
     3034   30 IDATA(I) = ISOURC(I)
     3035C
     3036      RETURN
     3037      END
Bytes of stack required for this program unit: 24.


--------------------------------------------------  Symbol Cross Reference  ---------------------------------------------------
Name (Type)           Class          Offset     Context  (d-DO, =-Assignment, /-Initialization, i-Input, o-Output, p-Pointer,
                                                         r-Argument, s-Specification, u-Usage)
-------------------------------------------------------------------------------------------------------------------------------
I (INTEGER)           scalar                      3029s     3034u     3034u
IDATA (INTEGER)       array                       3014s     3021s     3034=
ISOURC (INTEGER)      array                       3014s     3021s     3034u
MOVEI                 SUBROUTINE                  3013s
NITEMS (INTEGER)      scalar                      3014s     3020s     3021u     3021u     3033u


--------------------------------------------------  Label Cross Reference  ----------------------------------------------------
Label  Context  (d-DO, =-ASSIGN, f-FORMAT, g-GOTO, i-IF statement, s-Specification, r-Argument)
-------------------------------------------------------------------------------------------------------------------------------
30          3033d     3034s
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 98
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

SUBROUTINE SORTI    Compiling Options: -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     3038C
     3039C
     3040C
     3041      SUBROUTINE   SORTI
     3042     #                (IDATA, NITEMS)
     3043C
     3044C     + + + PURPOSE + + +
     3045C     SORTS INTEGER ARRAY IDATA (NITEMS ITEMS).
     3046C
     3047C     + + + DUMMY ARGUMENTS + + +
     3048      INTEGER   NITEMS
     3049      INTEGER   IDATA(NITEMS)
     3050C
     3051C     + + + LOCAL VARIABLES + + +
     3052      INTEGER   I, N1, J, N2, ITEMP
     3053C
     3054C     + + + END SPECIFICATIONS + + +
     3055C
     3056      N1 = NITEMS-1
     3057      DO 40 I = 1,N1
     3058      N2  =  NITEMS-I
     3059      DO 20 J = 1,N2
     3060      IF(IDATA(J).LE.IDATA(J+1)) GO TO 20
     3061      ITEMP = IDATA(J+1)
     3062      IDATA(J+1) = IDATA(J)
     3063      IDATA(J) = ITEMP
     3064   20 CONTINUE
     3065   40 CONTINUE
     3066      RETURN
     3067      END
Bytes of stack required for this program unit: 40.


--------------------------------------------------  Symbol Cross Reference  ---------------------------------------------------
Name (Type)           Class          Offset     Context  (d-DO, =-Assignment, /-Initialization, i-Input, o-Output, p-Pointer,
                                                         r-Argument, s-Specification, u-Usage)
-------------------------------------------------------------------------------------------------------------------------------
I (INTEGER)           scalar                      3052s     3058u
IDATA (INTEGER)       array                       3042s     3049s     3060u     3060u     3061u     3062=     3062u     3063=
ITEMP (INTEGER)       scalar                      3052s     3061=     3063u
J (INTEGER)           scalar                      3052s     3060u     3060u     3061u     3062u     3062u     3063u
N1 (INTEGER)          scalar                      3052s     3056=     3057u
N2 (INTEGER)          scalar                      3052s     3058=     3059u
NITEMS (INTEGER)      scalar                      3042s     3048s     3049u     3056u     3058u
SORTI                 SUBROUTINE                  3041s


--------------------------------------------------  Label Cross Reference  ----------------------------------------------------
Label  Context  (d-DO, =-ASSIGN, f-FORMAT, g-GOTO, i-IF statement, s-Specification, r-Argument)
-------------------------------------------------------------------------------------------------------------------------------
20          3059d     3060g     3064s
40          3057d     3065s
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 99
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 100
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

SUBROUTINE SORTM    Compiling Options: -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     3068C
     3069C
     3070C
     3071      SUBROUTINE   SORTM
     3072     #                ( W, IW, KENTER, KOPT, NN )
     3073C
     3074C     + + + PURPOSE + + +
     3075C     SORTS AN ARRAY IN ASCENDING OR DESCENDING ORDER,
     3076C     THE ORIGINAL ORDER IS STORED IN IW
     3077C
     3078C     + + + DUMMY ARGUEMENTS + + +
     3079      INTEGER   KENTER, KOPT, NN
     3080      INTEGER   IW(NN)
     3081      REAL      W(NN)
     3082C
     3083C     + + + ARGUMENT DEFINITION + + +
     3084C     W - ARRAY OF VALUES TO BE SORTED
     3085C     IW - ARRAY OF ORDER POINTERS FOR W
     3086C     KENTER - FLAG FOR IW : 0 - IW ALLREADY CONTAINS POINTERS
     3087C                            1 - IW NEEDS TO BE FILLED
     3088C     KOPT - SORT OPTION : -1 - DECREASING ORDER
     3089C                           1 - ASCENDING ORDER
     3090C     NN - SIZE OF W AND IW ARRAYS
     3091C
     3092C     + + + LOCAL VARIABLES + + +
     3093      INTEGER   I, J, K, M, N, IT, KASE
     3094      REAL      T
     3095C
     3096C     + +  END SPECIFICATIONS + + +
     3097C
     3098      N = NN
     3099      KASE = 0
     3100      IF (KOPT .EQ. -1) KASE = 1
     3101      IF (KENTER .EQ. 1) THEN
     3102C       FILL IW ARRAY
     3103        DO 5 I = 1, N
     3104          IW(I) = I
     3105 5      CONTINUE
     3106      END IF
     3107      M=N-1
     3108      DO30I=1,M
     3109      K=N-I
     3110      DO20J=1,K
     3111      IF(W(J+KASE).LE.W(J+1-KASE))GOTO20
     3112      T=W(J)
     3113      W(J)=W(J+1)
     3114      W(J+1)=T
     3115      IT=IW(J)
     3116      IW(J)=IW(J+1)
     3117      IW(J+1)=IT
     3118   20 CONTINUE
     3119   30 CONTINUE
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 101
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     3120      RETURN
     3121      END
Bytes of stack required for this program unit: 64.


--------------------------------------------------  Symbol Cross Reference  ---------------------------------------------------
Name (Type)           Class          Offset     Context  (d-DO, =-Assignment, /-Initialization, i-Input, o-Output, p-Pointer,
                                                         r-Argument, s-Specification, u-Usage)
-------------------------------------------------------------------------------------------------------------------------------
I (INTEGER)           scalar                      3093s     3104u     3104u     3109u
IT (INTEGER)          scalar                      3093s     3115=     3117u
IW (INTEGER)          array                       3072s     3080s     3104=     3115u     3116=     3116u     3117=
J (INTEGER)           scalar                      3093s     3111u     3111u     3112u     3113u     3113u     3114u     3115u
                                                  3116u     3116u     3117u
K (INTEGER)           scalar                      3093s     3109=     3110u
KASE (INTEGER)        scalar                      3093s     3099=     3100=     3111u     3111u
KENTER (INTEGER)      scalar                      3072s     3079s     3101u
KOPT (INTEGER)        scalar                      3072s     3079s     3100u
M (INTEGER)           scalar                      3093s     3107=     3108u
N (INTEGER)           scalar                      3093s     3098=     3103u     3107u     3109u
NN (INTEGER)          scalar                      3072s     3079s     3080u     3081u     3098u
SORTM                 SUBROUTINE                  3071s
T (REAL)              scalar                      3094s     3112=     3114u
W (REAL)              array                       3072s     3081s     3111u     3111u     3112u     3113=     3113u     3114=


--------------------------------------------------  Label Cross Reference  ----------------------------------------------------
Label  Context  (d-DO, =-ASSIGN, f-FORMAT, g-GOTO, i-IF statement, s-Specification, r-Argument)
-------------------------------------------------------------------------------------------------------------------------------
20          3110d     3111g     3118s
30          3108d     3119s
5           3103d     3105s
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 102
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

FUNCTION IBITOX    Compiling Options:  -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     3122C
     3123C
     3124C
     3125      INTEGER   FUNCTION   IBITOX
     3126     #                         (IBIT,N)
     3127C
     3128C     + + + PURPOSE + + +
     3129C     CONVERTS BIT STRING TO OCTAL-CODED INTEGER.
     3130C     THE LOW-INDEX (FIRST) 3 WORDS OF IBIT CORRESPOND TO THE LOW-
     3131C     ORDER OCTAL DIGIT OF THE RESULTANT FUNCTION VALUE.  THE FUNCTION
     3132C     VALUE IS CODED SUCH THAT IF IT IS PRINTED UNDER AN ORDINARY
     3133C     I FORMAT, THE PRINTED DIGITS WILL BE OCTAL (I.E., 1 2 ... 7).
     3134C     FOR EXAMPLE, BITS  1 0 1 0 1 0 1 1 1 0 0 0 0 0 1
     3135C     WOULD YIELD PRINTED VALUE      40725.
     3136C     WKIRBY 12/87.
     3137C
     3138C     + + + DUMMY ARGUMENTS + + +
     3139      INTEGER   N
     3140      INTEGER   IBIT(N)
     3141C
     3142C     + + + ARGUMENT DEFINITIONS + + +
     3143C     IBIT  - INTEGER VECTOR, DIMENSION N, EACH ELEMENT
     3144C             IS 0 OR 1. (PGM CHECKS THIS, CONVERTS VALUES .LT. 0 TO 0,
     3145C             VALUES .GT. 1 TO 1.)
     3146C     N     - INTEGER NUMBER OF ELEMENTS IN IBIT.
     3147C             (MAX N DEPENDS ON INTEGER WORD LENGTH.)
     3148C
     3149C     + + + LOCAL VARIABLES + + +
     3150      INTEGER   I, MCODE, MBIT, NN, K
     3151C
     3152C     + + + INTRINSICS + + +
     3153      INTRINSIC   MOD
     3154C
     3155C     + + + END SPECIFICATIONS + + +
     3156C
     3157      IBITOX = 0
     3158      IF(N .LE. 0) RETURN
     3159C
     3160      MCODE = 0
     3161      DO 10 I = 1,N
     3162      MBIT = 0
     3163      IF(IBIT(I) .GT. 0) MBIT = 1
     3164      MCODE = MCODE + MBIT*(2**(I-1))
     3165   10 CONTINUE
     3166C
     3167      NN = (N+2)/3
     3168      DO 20 I = 1,NN
     3169      K = MOD(MCODE,8)
     3170      IBITOX = IBITOX + K*(10**(I-1))
     3171      MCODE = MCODE/8
     3172   20 CONTINUE
     3173C
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 103
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     3174      RETURN
     3175C
     3176      END
Bytes of stack required for this program unit: 24.


--------------------------------------------------  Symbol Cross Reference  ---------------------------------------------------
Name (Type)           Class          Offset     Context  (d-DO, =-Assignment, /-Initialization, i-Input, o-Output, p-Pointer,
                                                         r-Argument, s-Specification, u-Usage)
-------------------------------------------------------------------------------------------------------------------------------
I (INTEGER)           scalar                      3150s     3163u     3164u     3170u
IBIT (INTEGER)        array                       3126s     3140s     3163u
IBITOX (INTEGER)      scalar                      3125s     3157=     3170u     3170=
IBITOX                FUNCTION                    3125s
K (INTEGER)           scalar                      3150s     3169=     3170u
MBIT (INTEGER)        scalar                      3150s     3162=     3163=     3164u
MCODE (INTEGER)       scalar                      3150s     3160=     3164u     3164=     3169r     3171u     3171=
N (INTEGER)           scalar                      3126s     3139s     3140u     3158u     3161u     3167u
NN (INTEGER)          scalar                      3150s     3167=     3168u


--------------------------------------------------  Label Cross Reference  ----------------------------------------------------
Label  Context  (d-DO, =-ASSIGN, f-FORMAT, g-GOTO, i-IF statement, s-Specification, r-Argument)
-------------------------------------------------------------------------------------------------------------------------------
10          3161d     3165s
20          3168d     3172s
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 104
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

FUNCTION IBITEX    Compiling Options:  -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     3177C
     3178C
     3179C
     3180      INTEGER   FUNCTION   IBITEX
     3181     #                          (ICTAL, N)
     3182C
     3183C     + + + PURPOSE + + +
     3184C     EXTRACTS BIT NO N OUT OF OCTAL-CODED INTEGER ICTAL
     3185C     REMARKS --
     3186C     THIS FUNCTION IS THE INVERSE OF  IBITOX.
     3187C
     3188C     EXAMPLE --   ICTAL = 40725
     3189C                  IBIT  = IBITEX(ICTAL, N)
     3190C     THEN, FOR N = 1 - 15 --
     3191C     IBIT = 1 0 1 0 1 0 1 1 1 0 0 0 0 0 1
     3192C
     3193C     WARNING -- IF ICTAL HAS DIGITS 8 OR 9 OR IF IT IS NEGATIVE,
     3194C       RESULTS ARE UNPREDICTABLE.   IBITEX DOES NOT CHECK THIS.
     3195C
     3196C                            WK....  7/88.
     3197C
     3198C     + + + DUMMY ARGUMENTS + + +
     3199      INTEGER   ICTAL, N
     3200C
     3201C     + + + ARGUMENT DEFINITIONS + + +
     3202C     ICTAL - INTEGER SCALAR CONSISTING OF OCTAL-CODED DIGITS.
     3203C     N     - INTEGER POSITION OF BIT TO BE EXTRACTED FROM ICTAL,
     3204C             COUNTING FROM THE RIGHT.  (LOW-ORDER BIT = NO 1.)
     3205C
     3206C     + + + LOCAL VARIABLES + + +
     3207      INTEGER   IOCT, IBIT, IDIGIT
     3208C
     3209C     + + + INTRINSICS + + +
     3210      INTRINSIC   MOD
     3211C
     3212C     + + + END SPECIFICATIONS + + +
     3213C
     3214      IDIGIT = (N+2)/3
     3215      IOCT = MOD(ICTAL/10**(IDIGIT-1),10)
     3216      IBIT = N - 3*(IDIGIT-1)
     3217      IBITEX = MOD(IOCT/2**(IBIT-1), 2)
     3218      RETURN
     3219      END
Bytes of stack required for this program unit: 24.


--------------------------------------------------  Symbol Cross Reference  ---------------------------------------------------
Name (Type)           Class          Offset     Context  (d-DO, =-Assignment, /-Initialization, i-Input, o-Output, p-Pointer,
                                                         r-Argument, s-Specification, u-Usage)
-------------------------------------------------------------------------------------------------------------------------------
IBIT (INTEGER)        scalar                      3207s     3216=     3217u
IBITEX (INTEGER)      scalar                      3180s     3217=
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 105
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
IBITEX                FUNCTION                    3180s
ICTAL (INTEGER)       scalar                      3181s     3199s     3215u
IDIGIT (INTEGER)      scalar                      3207s     3214=     3215u     3216u
IOCT (INTEGER)        scalar                      3207s     3215=     3217u
N (INTEGER)           scalar                      3181s     3199s     3214u     3216u
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 106
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

SUBROUTINE RUNEMA    Compiling Options: -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     3220C
     3221C
     3222C
     3223Ckmf  SUBROUTINE   DATTIM
     3224Ckmf #                 ( JDATE, JTIME )
     3225C
     3226C     + + + PURPOSE + + +
     3227C     This routine
     3228C
     3229C     + + + HISTORY + + +
     3230C     kmf - Nov 09, 2000 - replaced by libanne routine
     3231C
     3232C     + + + DUMMY ARGUMENTS + + +
     3233Ckmf  INTEGER    JDATE(3), JTIME
     3234C
     3235C     + + + ARGUMENT DEFINITIONS + + +
     3236C     JDATE  -
     3237C     JTIME  -
     3238C
     3239C     + + + LOCAL VARIABLES + + +
     3240Ckmf  INTEGER *2  STRING(28)
     3241C     INTEGER     NUM
     3242Ckmf  CHARACTER*6  IMAGE
     3243Ckmf  INTEGER   J
     3244C
     3245C     + + + INTRINSICS + + +
     3246Ckmf  INTRINSIC   MOD
     3247C
     3248C     + + + EXTERNALS + + +
     3249Cmyg  EXTERNAL   TIMDAT
     3250C
     3251C     + + + DATA INITIALIZATIONS + + +
     3252C     DATA     NUM / 28 /
     3253Ckmf  DATA  STRING / 28*0/
     3254C
     3255C     + + + END SPECIFICATIONS + + +
     3256C
     3257Cmyg  CALL TIMDAT( STRING, NUM )
     3258Ckmf  WRITE(IMAGE,1) ( STRING(J), J = 1, 3 )
     3259Ckmf  READ(IMAGE,2) ( JDATE(J), J = 1, 3 )
     3260Ckmf  JTIME = ( STRING(4) / 60 ) * 100  +  MOD( STRING(4), 60 )
     3261Ckmf1 FORMAT( 3A2 )
     3262Ckmf2 FORMAT( 3I2 )
     3263Ckmf  RETURN
     3264Ckmf  END
     3265C
     3266C
     3267C
     3268Cprh      SUBROUTINE   OUTPT2
     3269Cprh     I                    ( STAID, WRCUAV, WRCUSD, WRCSKW, WRCFC,
     3270Cprh     I                      MESSFL )
     3271CprhC
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 107
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     3272CprhC     + + + PURPOSE + + +
     3273CprhC     Send summary of computed statistics to screen for ascii input.
     3274Cprh
     3275CprhC     + + + DUMMY ARGUMENTS + + +
     3276Cprh      INTEGER   MESSFL
     3277Cprh      REAL      WRCUAV, WRCUSD, WRCSKW, WRCFC(*)
     3278Cprh      CHARACTER*90   STAID
     3279Cprh
     3280CprhC     + + + ARGUMENT DEFINITIONS + + +
     3281CprhC     STAID  - station identification number
     3282CprhC     WRCUAV - WRC mean of peaks
     3283CprhC     WRCUSD - WRC standard deviation of peaks
     3284CprhC     WRCSKW - WRC skew of peaks
     3285CprhC     WRCFC  - array of logs of computed peaks
     3286CprhC
     3287CprhC     + + + LOCAL VARIABLES + + +
     3288Cprh      INTEGER      I, J, ORD(9), TXTL(14), TXTFLG,
     3289Cprh     $             GROUP,  SCLU, LEN, RTCMND
     3290Cprh      REAL         PEAKST(12)
     3291Cprh      CHARACTER*1  BLNK, FLAG
     3292Cprh      CHARACTER*71 TXT
     3293CprhC
     3294CprhC     + + + INTRINSICS + + +
     3295Cprh      INTRINSIC   ABS
     3296CprhC
     3297CprhC     + + + EXTERNALS + + +
     3298Cprh      EXTERNAL    ZIPI, ZIPC, CVARAR, LFTSTR
     3299Cprh      EXTERNAL    Q1INIT, QSETCT, QSETR, Q1EDIT
     3300CprhC
     3301CprhC     + + + DATA INITIALIZATIONS + + +
     3302CprhC     return period 1.25  2   5  10  25  50 100 200 500
     3303Cprh      DATA ORD  /    12, 16, 20, 21, 23, 25, 26, 27, 28 /
     3304Cprh      DATA BLNK, FLAG, TXTL,       SCLU
     3305Cprh     $    / ' ',  '*', 15,12*1,45,  121 /
     3306CprhC
     3307CprhC     + + + END SPECIFICATIONS + + +
     3308CprhC
     3309Cprh      TXTFLG = 0
     3310Cprh      I = 71
     3311Cprh      CALL ZIPC ( I, BLNK, TXT )
     3312CprhC
     3313CprhC     compute t-year peaks
     3314Cprh      DO 100 I = 1, 9
     3315Cprh        J = ORD(I)
     3316Cprh        IF (ABS( WRCFC(J) ) .LT. 20.0) THEN
     3317Cprh          PEAKST(I) = 10.0**WRCFC(J)
     3318Cprh        ELSE
     3319CprhC         magnitude of the exponent is too large
     3320Cprh          PEAKST(I) = -999.
     3321Cprh          TXT(I+15:I+15) = FLAG
     3322Cprh          TXTFLG = 1
     3323Cprh        END IF
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 108
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     3324Cprh  100 CONTINUE
     3325CprhC
     3326CprhC     bulletin 17b mean, sd, and skew of log of Q
     3327Cprh      PEAKST(10) = WRCUAV
     3328Cprh      PEAKST(11) = WRCUSD
     3329Cprh      PEAKST(12) = WRCSKW
     3330CprhC
     3331CprhC     station number
     3332Cprh      TXT(1:15) = STAID(1:15)
     3333CprhC
     3334Cprh      IF (TXTFLG .EQ. 1) THEN
     3335CprhC       problem with one of more of the statistics, include warning
     3336Cprh        TXT(28:71) = 'WARNING:  problem with flagged (*) attributes'
     3337Cprh      END IF
     3338CprhC
     3339CprhC     bulletin 17B estimates to screen
     3340Cprh      GROUP = 55
     3341Cprh      CALL Q1INIT ( MESSFL, SCLU, GROUP )
     3342Cprh      LEN = 12
     3343Cprh      CALL QSETR ( LEN, PEAKST )
     3344Cprh      I = 14
     3345Cprh      LEN = 71
     3346Cprh      CALL QSETCT ( I, TXTL, LEN, TXT )
     3347Cprh      CALL Q1EDIT ( RTCMND )
     3348CprhC
     3349Cprh      RETURN
     3350Cprh      END
     3351C
     3352C
     3353C
     3354Cprh      SUBROUTINE   QEXTRA
     3355Cprh     I                    ( XYEAR,
     3356Cprh     O                      PEAK )
     3357CprhC
     3358CprhC     + + + PURPOSE + + +
     3359CprhC     For the specified recurrence interval, calculate the
     3360CprhC     corresponding peak.
     3361CprhC
     3362CprhC     + + + DUMMY ARGUMENTS + + +
     3363Cprh      REAL      XYEAR, PEAK
     3364CprhC
     3365CprhC     + + + ARGUMENT DEFINTIONS + + +
     3366CprhC     XYEAR  - recurrence interval, in years
     3367CprhC     PEAK   - flood peak corresponding to XYEAR recurrence
     3368CprhC
     3369CprhC     + + + PARAMETERS + + +
     3370Cprh      INCLUDE 'pmxint.inc'
     3371CprhC
     3372CprhC     + + + COMMON BLOCKS + + +
     3373Cprh      INCLUDE 'cwcf1.inc'
     3374CprhC
     3375CprhC     + + + LOCAL VARIABLES + + +
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 109
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     3376Cprh      REAL   Q, QBAS
     3377CprhC
     3378CprhC     + + + FUNCTIONS + + +
     3379Cprh      REAL   HARTK
     3380CprhC
     3381CprhC     + + + EXTERNALS + + +
     3382Cprh      EXTERNAL   HARTIV, HARTK
     3383CprhC
     3384CprhC     + + + END SPECIFICATIONS + + +
     3385CprhC
     3386Cprh      CALL HARTIV ( WRCSKW, WORK )
     3387Cprh      Q    = WRCUAV + WRCUSD * HARTK ( (1.-1./XYEAR), WORK )
     3388Cprh      QBAS = WRCUAV + WRCUSD * HARTK ( 1.-WRCPAB, WORK )
     3389CprhC
     3390Cprh      IF (Q .LT. QBAS ) THEN
     3391Cprh        PEAK = -999.
     3392Cprh      ELSE
     3393Cprh        PEAK = 10**Q
     3394Cprh      END IF
     3395CprhC
     3396Cprh      RETURN
     3397Cprh      END
     3398C
     3399C
     3400C
     3401      SUBROUTINE   RUNEMA
     3402     I                   (NPKS,PKS,IPKSEQ)
     3403C
     3404C     + + + HISTORY + + +
     3405C     Created 11/2003 by Paul Hummel, AQUA TERRA Consultants
     3406C     for incorporating EMA into PEAKFQ
     3407C
     3408C     + + + PURPOSE + + +
     3409C     Transfers PEAKFQ input data to arguments used in EMA,
     3410C     runs EMA, transfers EMA results to PEAKFQ output
     3411C
     3412C     EMAThresh contains Threshold specifications pulled from the .psf file
     3413      USE EMAThresh
     3414C
     3415C     + + + DUMMY ARGUMENTS + + +
     3416      INTEGER   NPKS
     3417      INTEGER   IPKSEQ(NPKS)
     3418      REAL      PKS(NPKS)
     3419C
     3420C     + + + ARGUMENT DEFINITIONS + + +
     3421C     NPKS    - number of peaks
     3422C     PKS     - array of annual peak values
     3423C     IPKSEQ  - array of peak value water years
     3424C
     3425C     + + + PARAMETERS + + +
     3426      INCLUDE 'PMXPK.INC'
     3427      INCLUDE 'PMXINT.INC'
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 110
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     3428C
     3429C     + + + COMMON BLOCKS + + +
     3430      INCLUDE 'cwcf0.inc'
     3431      INCLUDE 'cwcf1.inc'
     3432      INCLUDE 'cwcf2.inc'
     3433C
     3434C     + + + LOCAL VARIABLES + + +
     3435      INTEGER    I,NOBS,WYMIN,WYMAX,LPKIND
     3436      DOUBLE PRECISION WRCMOM(3,2),PR(MXINT),       !SKWWGT,
     3437     $                 REGSKEW,REGMSE,WRCYP(MXINT),
     3438     $                 CILOW(MXINT),CIHIGH(MXINT),GBTHRSH
     3439      INTEGER, ALLOCATABLE :: THBY(:),THEY(:)
     3440      REAL, ALLOCATABLE :: THLO(:),THUP(:)
     3441      DOUBLE PRECISION, ALLOCATABLE :: QL(:),QU(:),TL(:),TU(:)
     3442C
     3443C     + + + DATA INITIALIZATIONS + + +
     3444      DATA GBTHRSH /0.0/
     3445C
     3446C     + + + EXTERNALS + + +
     3447      EXTERNAL   EMADATA, EMAFIT
     3448C
     3449C     + + + INTRINSICS + + +
     3450      INTRINSIC  LOG, LOG10, EXP, DBLE
     3451C
     3452C     + + + END SPECIFICATIONS + + +
     3453C
     3454      IF (NTHRESH.EQ.0) THEN
     3455C       determine default threshold value to use
     3456        NTHRESH = 1
     3457        ALLOCATE (THRESH(1))
     3458        THRESH(1)%THRBYR = ABS(IPKSEQ(1))
     3459        THRESH(1)%THREYR = IPKSEQ(NPKS)
     3460C       this is what was used in the original EMA incorporation
     3461        THRESH(1)%THRLWR = 10**WRCHHB  
     3462        THRESH(1)%THRUPR = 1.0D99
     3463      END IF
     3464C
     3465      ALLOCATE (THBY(NTHRESH), THEY(NTHRESH))
     3466      ALLOCATE (THLO(NTHRESH), THUP(NTHRESH))
     3467C
     3468      write(*,*) 'RUNEMA: NTHRESH',NTHRESH
     3469      write(*,*) 'RUNEMA: THRBYR, THREYR, THRLWR, THRUPR'
     3470      WYMIN = 9999
     3471      WYMAX = -9999
     3472      DO 5 I = 1,NTHRESH
     3473        THBY(I) = THRESH(I)%THRBYR
     3474        THEY(I) = THRESH(I)%THREYR
     3475        THLO(I) = THRESH(I)%THRLWR
     3476        THUP(I) = THRESH(I)%THRUPR
     3477        write(*,*) THBY(I),THEY(I),THLO(I),THUP(I)
     3478        IF (THBY(I).LT.WYMIN) WYMIN = THBY(I)
     3479        IF (THEY(I).GT.WYMAX) WYMAX = THEY(I)
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 111
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     3480 5    CONTINUE
     3481
     3482      NOBS = WYMAX - WYMIN + 1
     3483      ALLOCATE (QL(NOBS), QU(NOBS), TL(NOBS), TU(NOBS))
     3484      write(*,*) 'RUNEMA: NPKS,NSYS,NHIST,NOBS ',
     3485     $                    NPKS,NSYS,NHIST,NOBS
     3486      write(*,*) 'RUNEMA: PKS',(PKS(I),I=1,NPKS)
     3487
     3488      LPKIND = NPKS - (NSYS+NHIST) + 1
               |
WARNING -- INTEGER scalar (LPKIND) is set but never used.

     3489c      CALL EMADATA(NSYS+NHIST,PKS(LPKIND),IPKSEQ(LPKIND),WYMIN,WYMAX,
     3490      CALL EMADATA(NPKS,PKS,IPKSEQ,WYMIN,WYMAX,
     3491     I             NTHRESH,THBY,THEY,THLO,THUP,GAGEB,
     3492     M             NOBS,
     3493     O             QL,QU,TL,TU)
     3494C
     3495C            if(ifany('WEIGHTED',skew_option)) then
     3496C              reg_mseV  = gen_skew_sd**2
     3497C            else if(ifany('GENERALIZ',skew_option)) then
     3498C              reg_mseV  = - gen_skew_sd**2   ! this includes uncty in reg_skew
     3499Cc              reg_mseV  = 0.d0                ! this does not include uncty
     3500C            else if(ifany('STATION',skew_option)) then
     3501C              reg_mseV  = -99.d0
     3502C            endif
     3503      REGSKEW= GENSKU
     3504      IF (IGSOPT.EQ.1) THEN
     3505C       Generalized skew, set to very small
     3506        REGMSE = - RMSEGS**2
     3507      ELSE IF (IGSOPT.EQ.-1) THEN
     3508C       Station skew, ignore regional skew
     3509        REGMSE = -99.0
     3510      ELSE
     3511C       set to root mean square?
     3512        REGMSE = RMSEGS**2
     3513      END IF
     3514      write(*,*) 'calling EMAFIT: NOBS,REGSKEW,REGMSE',
     3515     $                            NOBS,REGSKEW,REGMSE
     3516C
     3517      CALL EMAFIT(NOBS,QL,QU,TL,TU,REGSKEW,REGMSE,GBTHRSH,
     3518     O            WRCMOM,PR,WRCYP,CILOW,CIHIGH)
     3519      
     3520C     store EMA moments in WRC variables
     3521c      WRCUAV = LOG10(EXP(WRCMOM(1)))
     3522c      WRCUSD = LOG10(EXP(SQRT(WRCMOM(2))))
     3523c      WRCSKW = WRCMOM(3)
     3524      WRCUAV = WRCMOM(1,2)
     3525      WRCUSD = SQRT(WRCMOM(2,2))
     3526      WRCSKW = WRCMOM(3,2)
     3527C
     3528      write(*,*)
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 112
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     3529      write(*,*) 'RESULTS'
     3530      write(*,*) 'Moments:',WRCUAV,WRCUSD,WRCSKW
     3531      DO 20 I = 1,NINDX
     3532        write(*,'(f8.4,4f12.1)')1-PR(I),10**WRCYP(I),
     3533     $                          10**CILOW(I),10**CIHIGH(I)
     3534 20   CONTINUE
     3535
     3536      DEALLOCATE (QL, QU, TL, TU)
     3537      DEALLOCATE (THBY, THEY, THLO, THUP)
     3538
     3539C      IF (N.GT.0) THEN !perform EMA
     3540C        DO 20 I = 1,MXINT
     3541C          PR(I)= 1.0 - DBLE(TXPROB(I))
     3542C          CALL EMAFIT (N,QL,QU,TL,TU,REGSKEW,REGMSE,PR(I),
     3543C     O                 WRCMOM,WRCYP,CILOW,CIHIGH)
     3544Cc         if (i.eq.1) then 
     3545Cc           write(*,*) '  SYS Moments ',sysmom
     3546Cc           write(*,*) '  WRC Moments ',wrcmom
     3547Cc         end if
     3548Cc         write(*,'(f8.4,4f12.3)')txprob(i),exp(SYSYP),exp(WRCYP),
     3549Cc     $                           exp(CILOW),exp(CIHIGH)
     3550Cc          SYSRFC(I)= LOG10(EXP(SYSYP))
     3551C          WRCFC(I) = LOG10(EXP(WRCYP))
     3552C          CLIML(I) = LOG10(EXP(CILOW))
     3553C          CLIMU(I) = LOG10(EXP(CIHIGH))
     3554C 20     CONTINUE
     3555
     3556
     3557Cprh     This call to EMAFIT was an attempt to do all intervals
     3558Cprh     within EMAFIT and pass whole arrays back and forth.
     3559Cprh     This would be more efficient, but never got it quite working.
     3560c        CALL EMAFIT (N,QL,QU,TL,TU,REGSKEW,REGMSE,MXINT,PR,
     3561c     O               SYSMOM,WRCMOM,SYSYP,WRCYP,CILOW,CIHIGH)
     3562C       write(*,*)'EMAFIT RESULTS'
     3563C       write(*,*)'  SYSMOM ',SYSMOM
     3564C       write(*,*)'  WRCMOM ',WRCMOM
     3565c        SYSUAV = LOG10(EXP(SYSMOM(1)))
     3566c        SYSUSD = LOG10(EXP(SQRT(SYSMOM(2))))
     3567c        SYSSKW = SYSMOM(3)
     3568c        WRCUAV = LOG10(EXP(WRCMOM(1)))
     3569c        WRCUSD = LOG10(EXP(SQRT(WRCMOM(2))))
     3570c        WRCSKW = WRCMOM(3)
     3571c        DO 30 I = 1,MXINT
     3572c          SYSRFC(I)= LOG10(EXP(SYSYP(I)))
     3573c          WRCFC(I) = LOG10(EXP(WRCYP(I)))
     3574c          CLIML(I) = LOG10(EXP(CILOW(I)))
     3575c          CLIMU(I) = LOG10(EXP(CIHIGH(I)))
     3576c         write(*,'(f8.4,4f12.3)')txprob(i),exp(wrcfc(i)),exp(sysrfc(i)),
     3577c     $             exp(climl(i)),exp(climu(i))
     3578c 30     CONTINUE
     3579C      END IF
     3580C
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 113
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
     3581      RETURN
     3582      END
Bytes of stack required for this program unit: 216.


--------------------------------------------------  Symbol Cross Reference  ---------------------------------------------------
Name (Type)           Class          Offset     Context  (d-DO, =-Assignment, /-Initialization, i-Input, o-Output, p-Pointer,
                                                         r-Argument, s-Specification, u-Usage)
-------------------------------------------------------------------------------------------------------------------------------
BIGLOG (REAL)         scalar         316         (I2)4s   (I2)12s
CIHIGH (REAL(kind 8))
                      array                       3438s     3518r     3517r     3517r     3533u
CILOW (REAL(kind 8))  array                       3438s     3518r     3517r     3517r     3533u
CLIML (REAL)          array          256         (I3)2s    (I3)4s
CLIMU (REAL)          array          384         (I3)3s    (I3)5s
CLSIZE (REAL)         scalar         40          (I2)3s   (I2)11s
CPAMP1 (REAL)         scalar         344         (I2)6s   (I2)14s
CPAMP2 (REAL)         scalar         348         (I2)6s   (I2)14s
CPAMP3 (REAL)         scalar         352         (I2)6s   (I2)14s
EMADATA               SUBROUTINE                  3447u     3490u
EMAFIT                SUBROUTINE                  3447u     3517u
EPFC (REAL)           array          128         (I3)2s    (I3)4s
EPS1 (REAL)           scalar         320         (I2)5s   (I2)13s
EPS2 (REAL)           scalar         324         (I2)5s   (I2)13s
GAGEB (REAL)          scalar         12          (I4)2s   (I4)10s     3491r     3490r     3490r
GBTHRSH (REAL(kind 8))
                      scalar                      3438s     3444/     3517r     3517r     3517r
GENSKU (REAL)         scalar         0           (I4)2s   (I4)10s     3503u
GSKWGT (REAL)         scalar         108         (I4)6s   (I4)10s
GSMAX (REAL)          scalar         32          (I2)3s   (I2)11s
GSMIN (REAL)          scalar         28          (I2)3s   (I2)11s
HISTPD (REAL)         scalar         28          (I4)3s   (I4)10s
HISTPN (REAL)         scalar         100         (I4)6s   (I4)10s
HISTWT (REAL)         scalar         104         (I4)6s   (I4)10s
HRECWO (REAL)         scalar         328         (I2)5s   (I2)13s
HRECWS (REAL)         scalar         336         (I2)5s   (I2)13s
HRECWX (REAL)         scalar         332         (I2)5s   (I2)13s
I (INTEGER)           scalar                      3435s     3473u     3473u     3474u     3474u     3475u     3475u     3476u
                                                  3476u     3477u     3477u     3477u     3477u     3478u     3478u     3479u
                                                  3479u     3486=     3486u     3486u     3532u     3532u     3533u     3533u
IGSOPT (INTEGER)      scalar         4           (I4)2s    (I4)9s     3504u     3507u
INDX1 (INTEGER)       scalar         44          (I2)4s    (I2)9s
INDX2 (INTEGER)       scalar         48          (I2)4s    (I2)9s
INDXPT (INTEGER)      array          56          (I2)4s    (I2)9s
IPKSEQ (INTEGER)      array                       3402s     3417s     3458r     3459u     3490r     3490r     3490r
IWXMOD (INTEGER)      scalar         372         (I2)7s   (I2)10s
LPKIND (INTEGER)      scalar                      3435s     3488=
MSG (INTEGER)         scalar         0           (I2)2s    (I2)8s
MSL (INTEGER)         scalar         4           (I2)2s    (I2)8s
MXINT (INTEGER)       scalar                     (I1)1s    (I1)2s    (I2)9u   (I2)12u   (I4)12u    (I3)4u    (I3)4u    (I3)4u
                                                 (I3)5u    (I3)5u     3436u     3437u     3438u     3438u
MXPK (INTEGER)        scalar                     (I2)1s    (I2)2s
Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 114
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
NBGB (INTEGER)        scalar         84          (I4)5s    (I4)9s
NHIOUT (INTEGER)      scalar         92          (I4)5s    (I4)9s
NHIST (INTEGER)       scalar         24          (I4)2s    (I4)9s     3485o     3488u
NHISTN (INTEGER)      scalar         96          (I4)5s    (I4)9s
NINDX (INTEGER)       scalar         52          (I2)4s    (I2)9s     3531u
NLWOUT (INTEGER)      scalar         88          (I4)5s    (I4)9s
NMISS (INTEGER)       scalar         76          (I4)5s    (I4)9s
NOBS (INTEGER)        scalar                      3435s     3482=     3483u     3483u     3483u     3483u     3485o     3492r
                                                  3490r     3490r     3515o     3517r     3517r     3517r
NOCLIM (INTEGER)      scalar         24          (I2)2s    (I2)8s
NOEPFC (INTEGER)      scalar         20          (I2)2s    (I2)8s
NOPPOS (INTEGER)      scalar         8           (I2)2s    (I2)8s
NOSYS (INTEGER)       scalar         16          (I2)2s    (I2)8s
NOTRAN (INTEGER)      scalar         12          (I2)2s    (I2)8s
NPKS (INTEGER)        scalar                      3402s     3416s     3417u     3418u     3459u     3485o     3486o     3488u
                                                  3490r     3490r     3490r
NSYS (INTEGER)        scalar         80          (I4)5s    (I4)9s     3485o     3488u
NTHRESH (INTEGER)     scalar                      3413s     3454u     3456=     3465u     3465u     3466u     3466u     3468o
                                                  3472u     3491r     3490r     3490r
PKS (REAL)            array                       3402s     3418s     3486o     3490r     3490r     3490r
PR (REAL(kind 8))     array                       3436s     3518r     3517r     3517r     3532u
QHIOUT (REAL)         scalar         20          (I4)2s   (I4)11s
QL (REAL(kind 8))     array                       3441s     3483=     3493r     3490r     3490r     3517r     3517r     3517r
                                                  3536=
QLWOUT (REAL)         scalar         16          (I4)2s   (I4)11s
QU (REAL(kind 8))     array                       3441s     3483=     3493r     3490r     3490r     3517r     3517r     3517r
                                                  3536=
REGMSE (REAL(kind 8))
                      scalar                      3437s     3506=     3509=     3512=     3515o     3517r     3517r     3517r
REGSKEW (REAL(kind 8))
                      scalar                      3437s     3503=     3515o     3517r     3517r     3517r
RMSDGS (REAL)         scalar         340         (I2)6s   (I2)14s
RMSEGS (REAL)         scalar         8           (I4)2s   (I4)10s     3506u     3512u
RUNEMA                SUBROUTINE                  3401s
SIGHOT (REAL)         scalar         360         (I2)7s   (I2)15s
SIGLOT (REAL)         scalar         356         (I2)7s   (I2)15s
SUMH (REAL(kind 8))   array          176         (I4)8s   (I4)15s
SUMS (REAL(kind 8))   array          152         (I4)8s   (I4)15s
SYSAAV (REAL)         scalar         132         (I4)7s   (I4)11s
SYSASD (REAL)         scalar         136         (I4)7s   (I4)11s
SYSASK (REAL)         scalar         140         (I4)7s   (I4)11s
SYSBAS (REAL)         scalar         112         (I4)6s   (I4)11s
SYSMAX (REAL)         scalar         148         (I4)8s   (I4)11s
SYSMIN (REAL)         scalar         144         (I4)8s   (I4)12s
SYSPAB (REAL)         scalar         116         (I4)6s   (I4)12s
SYSRFC (REAL)         array          512         (I3)3s    (I3)5s
SYSSKW (REAL)         scalar         128         (I4)7s   (I4)12s
SYSUAV (REAL)         scalar         120         (I4)6s   (I4)12s
SYSUSD (REAL)         scalar         124         (I4)7s   (I4)12s
THBY (INTEGER)        array                       3439s     3465=     3473=     3477o     3478u     3478u     3491r     3490r
                                                  3490r     3537=
THEY (INTEGER)        array                       3439s     3465=     3474=     3477o     3479u     3479u     3491r     3490r
                                             Lahey Fortran 90 Compiler Release 4.50i                                                    Wed Oct 10 14:17:43 2007  Page: 115
Copyright (C) 1994-1998 Lahey Computer Systems.  All rights reserved.

                 Compiling Options:    -chk    -ndal   -ndbl   -nf90   -fix    -ng     -nhed   -nin    -inln   
                                       -lst    -pca    -stchk  -nsyn   -trap   -nvax   -w      -nwo    -xref   
------------------------------------------------  Source Listing  -------------------------------------------------------------
                                                  3490r     3537=
THLO (REAL)           array                       3440s     3466=     3475=     3477o     3491r     3490r     3490r     3537=
THRESH (TYPE (THRESHSPEC))
                      array                       3413s     3457=     3458=     3459=     3461=     3462=     3473u     3474u
                                                  3475u     3476u
THUP (REAL)           array                       3440s     3466=     3476=     3477o     3491r     3490r     3490r     3537=
TL (REAL(kind 8))     array                       3441s     3483=     3493r     3490r     3490r     3517r     3517r     3517r
                                                  3536=
TU (REAL(kind 8))     array                       3441s     3483=     3493r     3490r     3490r     3517r     3517r     3517r
                                                  3536=
TXPROB (REAL)         array          184         (I2)4s   (I2)12s
WCXAUX (REAL)         array          364         (I2)7s   (I2)15s
WEIBA (REAL)          scalar         36          (I2)3s   (I2)11s
WORK (REAL)           array          200         (I4)8s   (I4)12s
WRCAAV (REAL)         scalar         52          (I4)4s   (I4)13s
WRCASD (REAL)         scalar         56          (I4)4s   (I4)13s
WRCASK (REAL)         scalar         60          (I4)4s   (I4)13s
WRCBAS (REAL)         scalar         32          (I4)3s   (I4)13s
WRCFC (REAL)          array          0           (I3)2s    (I3)4s
WRCHHB (REAL)         scalar         64          (I4)4s   (I4)13s     3461u
WRCHOT (REAL)         scalar         68          (I4)4s   (I4)13s
WRCLOW (REAL)         scalar         72          (I4)5s   (I4)13s
WRCMOM (REAL(kind 8))
                      array                       3436s     3518r     3517r     3517r     3524u     3525r     3526u
WRCPAB (REAL)         scalar         36          (I4)3s   (I4)14s
WRCSKW (REAL)         scalar         48          (I4)4s   (I4)14s     3526=     3530o
WRCUAV (REAL)         scalar         40          (I4)3s   (I4)14s     3524=     3530o
WRCUSD (REAL)         scalar         44          (I4)4s   (I4)14s     3525=     3530o
WRCYP (REAL(kind 8))  array                       3437s     3518r     3517r     3517r     3532u
WSKLAT (REAL)         scalar         312         (I2)4s   (I2)12s
WYMAX (INTEGER)       scalar                      3435s     3471=     3479u     3479=     3482u     3490r     3490r     3490r
WYMIN (INTEGER)       scalar                      3435s     3470=     3478u     3478=     3482u     3490r     3490r     3490r


--------------------------------------------------  Label Cross Reference  ----------------------------------------------------
Label  Context  (d-DO, =-ASSIGN, f-FORMAT, g-GOTO, i-IF statement, s-Specification, r-Argument)
-------------------------------------------------------------------------------------------------------------------------------
20          3531d     3534s
5           3472d     3480s
