	SUBROUTINE WASPREAD
C	EXTRAN BLOCK
C     READ DATA INPUT LINES FOR EXTRAN TO WASP LINKAGE
C             5/99
	INCLUDE 'TAPES.INC'
      INCLUDE 'WASP.INC'
	INCLUDE 'CONTR.INC'

	WTSTART = 0.0
	IDEP = 0
	NSTEPW = 0
	NWASP = 0
	NINTER = 0
	IWASPREC = 0
	DO 100 IW = 1,MAXWASP
	NJUNSEG(IW) = 0
	DO IJ = 1,MAXJUN
      JUNSEG(IJ,IW) = 0
	ENDDO
	FROMSEG(IW) = 0
	TOSEG(IW) = 0
	NCONSEG(IW) = 0
	DO IC =1,MAXCON
      ICONSEG(IC,IW) = 0
	ENDDO
  100	CONTINUE
C     IF LINE IS NOT A BF THEN RETURN
	READ(N5,*) CC
	BACKSPACE (N5)
	IF (CC.NE.'BF') RETURN
C	WRITE SOME HEADER STUFF
      WRITE(N6,7000) MAXWASP,MAXJUN,MAXCON
C     READ BF LINE
      READ(N5,*) CC,WTSTART,IDEP,NSTEPW,IVCALC
	IF (IDEP.EQ.0) THEN
	WRITE(N6,7010) WTSTART,NSTEPW,NSTEPW*DELT/60.0/60.0
	ELSE
	WRITE(N6,7020) 
	ENDIF
	IF (IVCALC.EQ.0) THEN
	WRITE(N6,7022)
	LVCALC = .TRUE.
	ELSE
	WRITE(N6,7024)
	LVCALC = .FALSE.
	ENDIF
C   READ BG LINES  WASP SEGMENT TO EXTRAN JUNCTION MAP
		WRITE(N6,7025)
  200	READ(N5,*) CC
	BACKSPACE (N5)
	IF (CC.EQ.'BG') THEN
	NWASP = NWASP + 1
	IF (JCE.EQ.0) THEN 
	      READ(N5,*) CC,IWASPSEG,ICONVEL(NWASP),NJUNSEG(NWASP),
     1                 (JUNSEG(IJ,NWASP),IJ=1,NJUNSEG(NWASP))
	      WRITE(N6,7030) IWASPSEG,ICONVEL(NWASP),NJUNSEG(NWASP),
     1                     (JUNSEG(IJ,NWASP),IJ=1,NJUNSEG(NWASP))
	ELSE
	      READ(N5,*) CC,IWASPSEG,ACONVEL(NWASP),NJUNSEG(NWASP),
     1                 (AJUNSEG(IJ,NWASP),IJ=1,NJUNSEG(NWASP))
	      WRITE(N6,7035) IWASPSEG,ACONVEL(NWASP),NJUNSEG(NWASP),
     1                     (AJUNSEG(IJ,NWASP),IJ=1,NJUNSEG(NWASP))
	ENDIF
	IF(IWASPSEG.NE.NWASP) THEN
	WRITE(N6,7040) 
	STOP 'ERROR - INCORRECT WASP SEGMENT ORDER'
	ENDIF
	GO TO 200
	ENDIF
C HERE READ WASP SEGMENT INTERFACE TO EXTRAN CONDUIT MAPPING
C ON BH LINES
	WRITE(N6,7050)
  300	READ(N5,*) CC
	BACKSPACE N5
	IF (CC.EQ.'BH') THEN
	NINTER = NINTER + 1
	IF (JCE.EQ.0) THEN
	     READ(N5,*) CC,FROMSEG(NINTER),TOSEG(NINTER),NCONSEG(NINTER),
     1                (ICONSEG(IC,NINTER),IC=1,NCONSEG(NINTER))
	     WRITE(N6,7060) NINTER,FROMSEG(NINTER),TOSEG(NINTER),
     1                    NCONSEG(NINTER),
     1                   (ICONSEG(IC,NINTER),IC=1,NCONSEG(NINTER))
	ELSE
	     READ(N5,*) CC,FROMSEG(NINTER),TOSEG(NINTER),NCONSEG(NINTER),
     1                (ACONSEG(IC,NINTER),IC=1,NCONSEG(NINTER))
	     WRITE(N6,7065) NINTER,FROMSEG(NINTER),TOSEG(NINTER),
     1                    NCONSEG(NINTER),
     1                   (ACONSEG(IC,NINTER),IC=1,NCONSEG(NINTER))
	ENDIF
	GO TO 300
	ENDIF
	RETURN
 7000 FORMAT(//,10X,70('*'),/,10X,'*',68X,'*',/,
     110X,'*',3X,'SWMM-EXTRAN TO EPA-CEAM WASP HYDRODYNAMIC TRANSFER',
     2' FILE',10X,'*',/,
     110X,'*',68X,'*',/,
     110X,'*',5X,'MAXIMUMS SET IN PARAMETER STATEMENT',28X,'*',/,
     110X,'*',7X,'NUMBER OF WASP SEGMENTS (MAXWASP)              = '
     2,I5,7X,'*',/,
     110X,'*',7X,'NUMBER OF EXTRAN JUNCTIONS PER WASP SEGMENT    = '
     2,I5,7X,'*',/,
     110X,'*',7X,'NUMBER OF EXTRAN CONDUITS PER SEGMENT INERFACE = ',
     2I5,7X,'*',/,
     110X,'*',68X,'*',/,10X,70('*'),/)          
 7010 FORMAT(
     110X,'HYDRODYNAMIC OUTPUT STARTS AT HOUR ',F10.3,
     2' AND WILL BE OUTPUT EVERY ',I5,' EXTRAN TIME STEPS OR ',
     3F10.3,' HOURS')  
 7020 FORMAT(10X,
     1'HYDRODYNAMIC OUTPUT IS FOR ONLY ONE TIME STEP (IDEP = 1)',
     1' FOR TIME INVARIANT WASP SIMULATION')
 7022 FORMAT(10X,'JUNCTION VOLUMES ARE COMPUTED USING SUBROUTINE',
     1' VOLUME')
 7024 FORMAT(10X,'JUNCTION VOLUMES ARE COMPUTED BY TRACKING TOTAL',
     1' VOLUMES DURING THE SIMULATION')
 7025 FORMAT(//,10X,'WASP     VELOCITY  NUMBER OF',/,
     18X,'SEGMENT     CONDUIT   EXTRAN',/,
     211X,'ID        ',5X,'   JUNCTIONS     EXTRAN JUNCTION IDS -->',/,
     35X,'---------- ---------- ----------',
     4' ------------------------------------------------')
 7030 FORMAT(5X,I10,1X,I10,1X,I10,99(1X,I10))
 7035 FORMAT(5X,I10,1X,A10,1X,I10,99(1X,A10))
 7040 FORMAT(' ERROR - WASP SEGMENTS MUST BE INPUT IN NUMERIC ORDER')
 7050 FORMAT(//,27X,'NUMBER OF',/,
     19X,'FROM        TO      EXTRAN',/,
     18X,'SEGMENT   SEGMENT   CONDUITS     EXTRAN CONDUIT IDS -->',/,
     1'  --- --------- --------- ---------- ',
     1'------------------------------------------------')
 7060 FORMAT(I5,I10,I10,1X,I10,99(1X,I10))
 7065 FORMAT(I5,I10,I10,1X,I10,99(1X,A10))
	END

	SUBROUTINE WASPINIT
C     SUBROUTINE TO INITIALIZE EXTRAN TO WASP HYDRODYNAMIC TRANSFER FILE
C     CIM 5/99
	INCLUDE 'TAPES.INC'
      INCLUDE 'WASP.INC'
	INCLUDE 'CONTR.INC'
	IF (NWASP.EQ.0) RETURN
C  FIRST CONVERT EXTRAN JUNCTION NAME TO CORRESPONDING NUMBER
	DO 100 IW =1,NWASP
C  GET CONDUIT NUMBER FOR VELOCITY CONDUIT
	CALL GETCON(NUMB,ICONVEL(IW),ACONVEL(IW),'VELOCITY ')
	ICONVEL(IW) = NUMB
	DO 100 IJ = 1,NJUNSEG(IW)
	CALL GETJUN(NUMB,JUNSEG(IJ,IW),AJUNSEG(IJ,IW))
	JUNSEG(IJ,IW) = NUMB
  100 CONTINUE
C  NOW CONVERT EXTRAN CONDUIT NAME TO CORRESPONDING NUMBER
	DO 200 IW = 1,NINTER
	DO 200 IC = 1,NCONSEG(IW)
	CALL GETCON(NUMB,ICONSEG(IC,IW),ACONSEG(IC,IW),'INTERFACE')
	ICONSEG(IC,IW) = NUMB
  200 CONTINUE
C  WRITE TO NSCRATCH(8)
      IWASP = NSCRAT(8)
	IF (IWASP.LE.0) THEN
	WRITE(N6,7000) 
	STOP 'ERROR - WASP INTERFACE FILE NOT INITIALIZED'
	ENDIF
      WRITE(N6,7010) IWASP,FFNAME(58)
	TEND = WTSTART*60.0*60.0
	IF (IDEP.EQ.0) TEND = NTCYC*DELT
C  NOW WRITE HEADER INFORMATION TO INTERFACE FILE
C     FIRST RECORD
	WRITE(IWASP,8000) NWASP,NINTER,NSTEPW*DELT,WTSTART*60.0*60.0,
     1TEND,IDEP
C  SECOND RECORD OF HEADER INFORMATION
C  SEGMENT INTERFACE PAIRS
      DO 300 I=1,NINTER
      WRITE(IWASP,8010) FROMSEG(I),TOSEG(I)
  300 CONTINUE
C  THIRD RECORD OF INTERFACE FILE
C     THIS IS INITIAL CONDITIONS
C     HERE VOLUME HAS ALREADY BEEN CALLED
C     IN TRANSX TO INITIALIZE VALUES
	WASPTIME = WTSTART*60.0*60.0
	IF (WASPTIME.LE.TIME) CALL SEGMENTS(.FALSE.)
	RETURN
 7000 FORMAT(' ERROR - FILE CONTAINS DATA INPUTS FOR CREATING EXTRAN',
     1' TO WASP INTERFACE FILE BUT NCRATCH(8) NOT SET TO A NUMBER ',
     2'OTHER THAN ZERO.')
 7010 FORMAT(/,' WASP INTERFACE INFORMATION IS WRITTEN TO UNIT NUMBER ',
     1I5,' FILENAME = ',A60)
 8000 FORMAT(2I5,3F20.0,I5)
 8010 FORMAT(2I5)
	END

	SUBROUTINE WASPCOMP
C     CALLED AT EACH TIME STEP IN TRANSX
	INCLUDE 'TAPES.INC'
	INCLUDE 'WASP.INC'
	INCLUDE 'CONTR.INC'
	INCLUDE 'PIPE.INC'
C     RETURNS IF  NWASP IS ZERO
	IF (NWASP.EQ.0) RETURN
	IF (TIME.GE.(WASPTIME-NSTEPW*DELT)) THEN
	DO 100 IW = 1,NINTER
	DO 100 IC = 1,NCONSEG(IW)
	IWCH = ICONSEG(IC,IW)
	WASPFLOW(IW) = WASPFLOW(IW) + QO(IWCH)
  100	CONTINUE
      DO 150 IW = 1,NWASP
	IWCH = ICONVEL(IW)
	WASPVEL(IW) = WASPVEL(IW) + V(IWCH)
  150 CONTINUE
      ENDIF
	IF (TIME.GE.WASPTIME) THEN
C WRITE STUFF AND SET STUFF TO ZERO
	CALL WASPWRITE
	DO 200 IW = 1,NINTER
  200	WASPFLOW(IW) = 0.0
      DO 300 IW = 1,NWASP
  300 WASPVEL(IW) = 0.0
	WASPTIME = TIME + NSTEPW * DELT

	ENDIF
	RETURN
	END

	SUBROUTINE WASPWRITE
C	CALLED AT APPRPROPRIATE DELTA TIMES TO WRITE AVERAGE FLOWS
C     AND END OF PERIOD WASP SEGMENT DATA
      INCLUDE 'WASP.INC'
	IF (IWASPREC.EQ.0) THEN
	CALL SEGMENTS(LVCALC)
	ELSE
	CALL INTERFAC
      CALL SEGMENTS(LVCALC)
	ENDIF 
	RETURN
	END

      SUBROUTINE GETJUN(NUMB,INAME,ANAME)
C     SUBROUTINE TO RETURN JUNCTION NUMBER
C      CIM 5/99
      INCLUDE 'TAPES.INC'
	INCLUDE 'CONTR.INC'
      INCLUDE 'JUNC.INC'
	CHARACTER*10 ANAME
      IF (JCE.EQ.0) THEN
          DO JCIM = 1, NJ
	     NUMB = JCIM
           IF(INAME.EQ.JUN(JCIM))  GO TO 100
	    ENDDO
	     WRITE(N6,7000) INAME
	     STOP ' WASP JUNCTION NOT FOUND'
	    ELSE
	    DO JCIM = 1,NJ
	     NUMB = JCIM
          IF(ANAME.EQ.AJUN(JCIM)) GO TO 100
          ENDDO
		 WRITE(N6,7010) ANAME
           STOP ' WASP JUNCTION NOT FOUND'
	    ENDIF
  100 RETURN
 7000 FORMAT(' ERROR IN WASP INPUT DATA.  EXTRAN JUNCTION ',I10,
     1' WAS NOT FOUND IN JUNCTION DATA')
 7010 FORMAT(' ERROR IN WASP INPUT DATA.  EXTRAN JUNCTION ',A10,
     1' WAS NOT FOUND IN JUNCTION DATA')
      END

	SUBROUTINE GETCON(NUMB,INAME,ANAME,TPE)
C     SUBROUTINE TO RETURN CONDUIT NUMBER
C      CIM 5/99
      INCLUDE 'TAPES.INC'
	INCLUDE 'CONTR.INC'
	INCLUDE 'PIPE.INC'
	CHARACTER*10 ANAME
	CHARACTER*9 TPE
      IF (JCE.EQ.0) THEN
          DO NCIM = 1, NTL
	     NUMB = NCIM
           IF(INAME.EQ.NCOND(NCIM))  GO TO 100
	    ENDDO
	     WRITE(N6,7000) TPE,INAME
	     STOP ' WASP EXTRAN CONDUIT NOT FOUND'
	    ELSE
	    DO NCIM = 1,NTL
	     NUMB = NCIM
          IF(ANAME.EQ.ACOND(NCIM)) GO TO 100
          ENDDO
		 WRITE(N6,7010) TPE,ANAME
           STOP ' WASP EXTRAN CONDUIT NOT FOUND'
	    ENDIF
  100 RETURN
 7000 FORMAT(' ERROR IN WASP INPUT DATA.  EXTRAN ',A9,' CONDUIT ',
     1I10,' WAS NOT FOUND IN CONDUIT DATA')
 7010 FORMAT(' ERROR IN WASP INPUT DATA.  EXTRAN ',A9,' CONDUIT ',
     1A10,' WAS NOT FOUND IN CONDUIT DATA')
      END

	SUBROUTINE SEGMENTS(CALLVOL)
C     SUBROUTINE TO WRITE CURRENT SEGMENT PROPERTIES TO WASP
C     HYDRODYNAMIC INTERFACE FILE
C     CIM 5/99
C
      INCLUDE 'TAPES.INC'
	INCLUDE 'WASP.INC'
	INCLUDE 'CONTR.INC'
	INCLUDE 'JUNC.INC'
	INCLUDE 'TRANAID.INC'
	LOGICAL CALLVOL
	IWASPREC = IWASPREC + 1
	WDUM = 0.0
C  COMPUTE NODAL VOLUMES IF NEEDED
 	IF (CALLVOL) THEN
	IF (LVCALC) CALL VOLUME(TVOL,LVCALC)
	ENDIF
C  WRITE DATA FOR EACH WASP SEGMENT
	DO 100 IW = 1,NWASP
	WVOL(IW) = 0.0
	WAREA = 0.0
	WVEL(IW) = 0.0
	WDEP(IW) = 0.0
C  COMPUTE AVERAGE DEPTH
	DO 50 IJ = 1,NJUNSEG(IW)
	JJUN = JUNSEG(IJ,IW)
	WVOL(IW) = WVOL(IW) + VOL(JJUN)
	IF(Y(JJUN).NE.0.0) WAREA = WAREA + VOL(JJUN)/Y(JJUN)
   50 CONTINUE
      IF (WAREA.NE.0.0) THEN
          WDEP(IW) = WVOL(IW)/WAREA
	ELSE
	    WDEP(IW) = 0.0
	ENDIF
  100 CONTINUE
  	DO 200 IW = 1,NWASP
	IWCH = ICONVEL(IW)
	WVEL(IW) = WASPVEL(IWCH)/NSTEPW
C     CONVERT TO METRIC UNITS
C     cu.ft. to cu. m
      WVOL(IW) = WVOL(IW) / 3.2808 / 3.2808 / 3.2808
c     ft to meters
      WDEP(IW) = WDEP(IW) /3.2808
c     fps to mps
      WVEL(IW) = wvel(IW) / 3.2808
	WRITE(IWASP,8000) WVOL(IW),WDUM,WDEP(IW),WVEL(IW)
  200 CONTINUE
	RETURN 
 8000 FORMAT(4(1PG20.13))
C 8000 FORMAT(4F20.4)
	END

	SUBROUTINE INTERFAC
C  CALLED TO WRITE FLOWS OVER PREVIOUS WASP TIME STEP
C    CIM 5/99
C       WRITE FLOWS IN M^3/S
      INCLUDE 'TAPES.INC'
	INCLUDE 'WASP.INC'
	DO 100 IC = 1,NINTER
C CONVERT FROM CFS TO CMS
	FLOWW = WASPFLOW(IC)/NSTEPW/3.2808/3.2808/3.2808
	WRITE(IWASP,8000) FLOWW
  100 CONTINUE
	RETURN
 8000 FORMAT(1PG20.13)
	END