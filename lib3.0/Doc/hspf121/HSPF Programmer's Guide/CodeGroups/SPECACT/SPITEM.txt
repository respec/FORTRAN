Purpose - 
<p>Flow of Execution
<ul>
<li><a href="#L1"></a>
</ul>
<p>Code Group 
   <a href="../SPECACT">SPECACT</a>
<p>Called By
    
<p>Common Blocks 
 
<p>Calls
 
<p>Code
<pre>
C
C
C
      SUBROUTINE   SPITEM
     I                    (UCIBUF,BUFLEN,
     M                     BUFPOS,
     O                     CITEM,ITMTYP)
C
C     + + + PURPOSE + + +
C     Read next item from a line in buffer, and return a type code.
C
C     + + + DUMMY ARGUMENTS + + +
      INTEGER      BUFLEN,BUFPOS,ITMTYP
      CHARACTER*10 CITEM
      CHARACTER*80 UCIBUF
C
C     + + + ARGUMENT DEFINITIONS + + +
C     UCIBUF - buffer containing current record from uci file
C     BUFLEN - actual length of buffer, excluding trailing blanks
C     BUFPOS - starting position of next item in buffer
C     CITEM  - character variable for next item
C     ITMTYP - item type code:
C               1  (
C               2  [
C               3  {
C               4  )
C               5  ]
C               6  }
C               7  quantity, either number or user-defined quantity name
C               8  comparison operator: =, !=, >, <, >=, <=
C               9  logical operator AND
C              10  logical operator OR
C              11  delimiter: THEN
C
C     + + + LOCAL VARIABLES + + +
      INTEGER     I,DONEFG,ITPOS,ENDFG,CHARFG
      CHARACTER*1 PAREN(6),COMPOP(4),SPACE
C
C     + + + DATA INITIALIZATIONS + + +
      DATA PAREN  /'(','[','{',')',']','}'/
      DATA COMPOP /'=','/','<','>'/
      DATA SPACE  /' '/
C
C     + + + END SPECIFICATIONS + + +
C
C     initialize
      DONEFG= 0
      ENDFG= 0
      CHARFG= 0
      ITMTYP= 0
      ITPOS= 1
      CITEM= '          '
C
C     check for parenthesis
      I= 0
 10   CONTINUE
        I= I+ 1
        IF (UCIBUF(BUFPOS:BUFPOS) .EQ. PAREN(I)) THEN
C         found parenthesis
          ITMTYP= I
          CITEM(ITPOS:ITPOS)= PAREN(I)
          ENDFG= 1
          BUFPOS= BUFPOS+ 1
        END IF
      IF ( (I .LT. 6) .AND. (ENDFG .EQ. 0) ) GOTO 10
C
      IF (ENDFG .EQ. 0) THEN
C       check for comparison operator
        I= 0
 20     CONTINUE
          I= I+ 1
          IF (UCIBUF(BUFPOS:BUFPOS) .EQ. COMPOP(I)) THEN
C           found comparison operator
            ITMTYP= 8
            CITEM(ITPOS:ITPOS)= COMPOP(I)
            BUFPOS= BUFPOS+ 1
            ITPOS= ITPOS+ 1
          END IF
        IF ( (I .LT. 4) .AND. (ITMTYP .EQ. 0) ) GO TO 20
      END IF
C
C     loop until find end of item (and trailing spaces if any)
 30   CONTINUE
C
        IF (ENDFG .EQ. 1) THEN
C         check for space
          IF (UCIBUF(BUFPOS:BUFPOS) .EQ. SPACE) THEN
C           still in trailing spaces
            BUFPOS= BUFPOS+ 1
          ELSE
C           found end of trailing spaces
            DONEFG= 1
          END IF
        ELSE
C         process next character
C
C         check for space
          IF (UCIBUF(BUFPOS:BUFPOS) .EQ. SPACE) THEN
C           found end of item
            ENDFG= 1
            BUFPOS= BUFPOS+ 1
          END IF
C
          IF ( (ENDFG .EQ. 0) .AND. (DONEFG .EQ. 0) ) THEN
C           check for parenthesis
            I= 0
 40         CONTINUE
              I= I+ 1
              IF (UCIBUF(BUFPOS:BUFPOS) .EQ. PAREN(I)) THEN
C               found parenthesis
                DONEFG= 1
              END IF
            IF ( (I .LT. 6) .AND. (DONEFG .EQ. 0) ) GO TO 40
          END IF
C
          IF ( (ENDFG .EQ. 0) .AND. (DONEFG .EQ. 0) ) THEN
C           check for comparison operator
            CHARFG= 0
            I= 0
 50         CONTINUE
              I= I+ 1
              IF (UCIBUF(BUFPOS:BUFPOS) .EQ. COMPOP(I)) THEN
C               found part of a comparison operator
                IF (ITMTYP .EQ. 8) THEN
C                 comparison operator continues
                  CITEM(ITPOS:ITPOS)= COMPOP(I)
                  BUFPOS= BUFPOS+ 1
                  ITPOS= ITPOS+ 1
                ELSE
C                 was reading a word or number, so found end
                 DONEFG= 1
                END IF
                CHARFG= 1
              END IF
            IF ( (I .LT. 4) .AND. (CHARFG .EQ. 0) ) GO TO 50
          END IF
C
          IF ( (CHARFG .EQ. 0) .AND. (ENDFG .EQ. 0) .AND.
     $         (DONEFG.EQ. 0) ) THEN
C           current character is not a special character
            IF (ITMTYP .EQ. 0) THEN
C             word continues
              CITEM(ITPOS:ITPOS)= UCIBUF(BUFPOS:BUFPOS)
              BUFPOS= BUFPOS+ 1
              ITPOS= ITPOS+ 1
            ELSE
C             comparison code is over
              DONEFG= 1
            END IF
          END IF
C
        END IF
C
        IF (ITPOS .GT. 10) THEN
C         filled up item
          DONEFG= 1
          ITPOS= 10
        END IF
        IF (BUFPOS .GT. BUFLEN) THEN
C         reached end of line
          DONEFG= 1
        END IF
C
C     end do-until loop
      IF (DONEFG .EQ. 0) GO TO 30
C
      IF (ITMTYP .EQ. 0) THEN
C       must determine type of word
        IF (CITEM(1:ITPOS) .EQ. 'AND') THEN
C         found logical operator AND
          ITMTYP= 9
        ELSE IF (CITEM(1:ITPOS) .EQ. 'OR') THEN
C         found logical operator OR
          ITMTYP= 10
        ELSE IF (CITEM(1:ITPOS) .EQ. 'THEN') THEN
C         found delimiter
          ITMTYP= 11
        ELSE
C         assume quantity
          ITMTYP= 7
        END IF
      END IF
C
      RETURN
      END
</pre>































