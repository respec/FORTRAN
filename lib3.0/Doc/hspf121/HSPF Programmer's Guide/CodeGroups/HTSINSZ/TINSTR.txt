Purpose - Generate the tsget/tsput instructions
<p>Flow of Execution
<ul>
<li><a href="#L1">initialize local variables</a>
<li><a href="#L2">begin message</a>
<li><a href="#L3">initialize instr to avoid undefined values during debug</a>
<li><a href="#L4">compute critical time points</a>
<li><a href="#L5">loop through operations</a>
    <ul>
    <li><a href="#L6">get the inpad characteristics for this operation</a>
    <li><a href="#L7">get starting and ending keys in the tsget for the primitive tsget instructions for this operation</a>
    <li><a href="#L8">get starting and ending keys in the tsput for the primitive tsput instructions for this operation</a>
    </ul>
<li><a href="#L9">done message</a>
</ul>
<p>Code Group 
   <a href="../HTSINSI">HTSINSZ</a>
<p>Called By
   <a href="../HSPFEC/TIMSER#L31">TIMSER</a>
<p>Common Blocks 
   <a href="../../CommonBlocks/CRIN4">CRIN4</a>
<p>Calls
   <a href="CRTP">CRTP</a>,
   <a href="../HRINTS/FINSTR">FINSTR</a>
<p>Code
<pre>
C
C
C
      SUBROUTINE   TINSTR
     I                   (START,ENDR,OPST,OPND,
     M                    GPKEY)
C
C     + + + PURPOSE + + +
C     Generate the tsget/tsput instructions
C
C     + + + DUMMY ARGUMENTS + + +
      INTEGER   START(5),ENDR(5),OPST,OPND,GPKEY
C
C     + + + ARGUMENT DEFINITIONS + + +
C     START  - ???
C     ENDR   - ???
C     OPST   - ???
C     OPND   - ???
C     GPKEY  - ???
C
C     + + + COMMON BLOCKS- INTERP4 + + +
      INCLUDE   'crin4.inc'
C
C     + + + LOCAL VARIABLES + + +
      INTEGER   DELT,FMIN,GETF,I,IGRP,SKY,STIME,EKY,VOPAD,WIDTH
C
C     + + + EXTERNALS + + +
      EXTERNAL  CRTP,FINSTR
C
C     + + + OUTPUT FORMATS + + +
 2000 FORMAT(' BEGIN GENERATION OF TSGET/TSPUT INSTRUCTIONS',
     $       ' FOR OPERATIONS ',I3,' THROUGH ',I3)
 2010 FORMAT(' END GENERATION OF TSGET/TSPUT INSTRUCTIONS',
     $       ' FOR OPERATIONS ',I3,' THROUGH ',I3)
C
C     + + + END SPECIFICATIONS + + +
C
C     <a name="L1">set file numbers. filet is used to avoid conflict with
C     file in the instruction
      MESSU = FILET(1)
      TSSFL = FILET(10)
      MSGFL = FILET(15)
C
C     set max length for buffer--tbuff
      BLEN  = 545
C
      <a name="L2">IF (OUTLEV .GT. 4) THEN
C       begin generation message
        WRITE(MESSU,2000) OPST,OPND
      END IF
C
C
C     <a name="L3">initialize instr to avoid undefined values during debug
      DO 5 I= 1, 200
        INSTR(I)= 0
 5    CONTINUE
C
C     <a name="L4">compute critical time points
      CALL <a href="CRTP">CRTP</a>(START,ENDR,MESSU,OUTLEV,
     O          BEGYR,FMIN,LPYRFG,INPSTR,STIME,TYREND,TENDR)
      YEAR= BEGYR
C
      <a name="L5">DO 10 I= OPST,OPND
C       <a name="L6">get the inpad characteristics for this operation
        IGRP = OPNTAB(6,I)
        DELT = GRPTAB(3,IGRP)
        VOPAD= GRPTAB(4,IGRP)
        WIDTH= GRPTAB(5,IGRP)
C
C       <a name="L7">get starting and ending keys in the tsget for
C       the primitive tsget instructions for this operation
        SKY  = OPNTAB(17,I)
        EKY  = OPNTAB(18,I)
        GETF = 1
        IF (SKY .GT. 0) THEN
          OPNTAB(17,I) = GPKEY+ 1
          CALL <a href="../HRINTS/FINSTR">FINSTR</a>(SKY,EKY,GETF,VOPAD,
     I                WIDTH,START,ENDR,STIME,FMIN,DELT,
     M                GPKEY)
          OPNTAB(18,I) = GPKEY
        END IF
C
C       <a name="L8">get starting and ending keys in the tsput for
C       the primitive tsput instructions for this operation
        SKY  = OPNTAB(19,I)
        EKY  = OPNTAB(20,I)
        GETF = 0
        IF (SKY .GT. 0) THEN
          OPNTAB(19,I) = GPKEY+ 1
          CALL <a href="../HRINTS/FINSTR">FINSTR</a>(SKY,EKY,GETF,VOPAD,
     I                WIDTH,START,ENDR,STIME,FMIN,DELT,
     M                GPKEY)
          OPNTAB(20,I) = GPKEY
        END IF
 10   CONTINUE
C
      <a name="L9">IF (OUTLEV .GT. 4) THEN
C       done message
        WRITE(MESSU,2010) OPST,OPND
      END IF
C
      RETURN
      END
</pre>









