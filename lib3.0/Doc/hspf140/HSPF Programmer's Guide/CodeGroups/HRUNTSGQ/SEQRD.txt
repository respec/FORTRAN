Purpose -   
<p>Flow of Execution
<ul>
<li><a href="#L1"></a>
</ul>
<p>Code Group 
   <a href="../HRUNTSGQ">HRUNTSGQ</a>
<p>Called By

<p>Common Blocks 
 
<p>Calls
 
<p>Code
<pre>
C
C
C
      SUBROUTINE   SEQRD
     I                   (PVAR,FILE,DATLEN,NUMVAL,SCLU,MESSU,MSGFL,
     M                    KNT,ENDF,
     O                    CRDDAT,CRDNUM,CRDVAL)
C
C     + + + PURPOSE + + +
C     Read a line from a sequential timeseries file and check for
C     four-year dates.  If the existing format uses 'I2' as the year
C     field format, and there are at least 2 blanks - i.e. '2X' or more -
C     then the number of spaces is reduced by 2 and the year width is
C     set to 4.  If a valid year can be read from the new field, then
C     the year is updated.
C
C     + + + DUMMY ARGUMENTS + + +
      INTEGER FILE,DATLEN,NUMVAL,SCLU,MESSU,MSGFL,KNT,ENDF,
     $        CRDDAT(DATLEN),CRDNUM
      REAL    PVAR(20),CRDVAL(NUMVAL)
C
C     + + + ARGUMENT DEFINITIONS + + +
C
C     + + + LOCAL VARIABLES + + +
      INTEGER      I,I1,SGRP,IPOS,XPOS,EPOS,YRLEN,NUMSPC,YR4
      CHARACTER*4  PVARC(20)
      CHARACTER*80 BUFF,PBUFF
C
C     + + + EQUIVALENCES + + +
      EQUIVALENCE (PVARC1,PVARC),(BUFF1,BUFF),(PBUFF1,PBUFF)
      CHARACTER*1  PVARC1(80),BUFF1(80),PBUFF1(80)
C
C     + + + FUNCTIONS + + +
      INTEGER   STRFND,CHRINT
C
C     + + + EXTERNALS + + +
      EXTERNAL  OMSTI,OMSTC,OMSG,STRFND,CHRINT,CHRDEL,COPYC
C
C     + + + INPUT FORMATS + + +
 1000 FORMAT (80A1)
C
C     + + + END SPECIFICATIONS + + +
C
      I1= 1
C
C     transfer format statement to local string
      DO 10 I= 1, 20
        WRITE (PVARC(I),'(A4)') PVAR(I)
 10   CONTINUE
C
C     fetch line into memory
      READ (FILE,1000,END=100) BUFF1
C
C     try to read with unmodified format
      READ (BUFF,PVARC,ERR=20) (CRDDAT(I),I=1,DATLEN),CRDNUM,
     $                         (CRDVAL(I),I=1,NUMVAL)
        GO TO 30
 20   CONTINUE
C       error - cannot read card
        CALL OMSTI (FILE)
        I= 80
        CALL OMSTC (I,BUFF1)
        CALL OMSTC (I,PVARC1)
        SGRP= 21
        CALL OMSG (MESSU,MSGFL,SCLU,SGRP,
     M             KNT)
 30   CONTINUE
C
      IF (CRDDAT(1) .LT. 100) THEN
C       two-digit year was read - see if four digits are possible
C
C       find beginning of year in format, which is the first integer
        I= 80
        IPOS= STRFND (I,PVARC1,I1,'I')
C
C       find comma which delimits the field width for the year
        I= 80- IPOS+ 1
        EPOS= STRFND (I,PVARC1(IPOS),I1,',')
C
C       see how wide year field is
        I= EPOS- IPOS- 1
        IF (I .EQ. 1) THEN
C         only a one digit field width is worth checking
          YRLEN= CHRINT (I,PVARC1(IPOS+1))
        ELSE
C         disallow century search
          YRLEN= 999
        END IF
        IF (YRLEN .EQ. 2) THEN
C         unmodified format used two digits for the year
C
C         check for first blank space in format, if any
          I= 80
          XPOS= STRFND (I,PVARC1,I1,'X')
          IF ( (XPOS .LT. 1) .OR. XPOS .GT. 4) XPOS= 999
C
          IF (IPOS .GT. XPOS) THEN
C           there is blank space before year
C
C           skip opening paren and get number of blanks
            I= XPOS- 2
            NUMSPC= CHRINT (I,PVARC1(2))
            IF (NUMSPC .GE. 2) THEN
C             there is room for a four-digit year
C
C             copy beginning of format to local buffer
              CALL COPYC (EPOS,PVARC1,
     O                    PBUFF1)
C             force close of format
              PBUFF1(EPOS)= ')'
C
C             replace length of year field
              PBUFF1(IPOS+1)= '4'
C
C             replace length of blank space
              NUMSPC= NUMSPC- 2
              IF (NUMSPC .GE. 10) THEN
C               stays two-digit x
                WRITE (PBUFF(XPOS-2:XPOS-1),'(I2)') NUMSPC
              ELSE IF (NUMSPC .GE. 8) THEN
C               was two-digit x and now is one-digit
                WRITE (PBUFF(XPOS-1:XPOS-1),'(I1)') NUMSPC
C               delete leading digit after opening paren
                I= 2
                CALL CHRDEL (EPOS,I,
     M                       PBUFF1)
                EPOS= EPOS- 1
                IPOS= IPOS- 1
                XPOS= XPOS- 1
              ELSE IF (NUMSPC .GE. 1) THEN
C               stays one-digit x
                WRITE (PBUFF(XPOS-1:XPOS-1),'(I1)') NUMSPC
              ELSE IF (NUMSPC .EQ. 0) THEN
C               was two spaces, now is zero, so delete '2X,'
                I= 2
                CALL CHRDEL (I,EPOS,
     M                       PBUFF1)
                CALL CHRDEL (I,EPOS,
     M                       PBUFF1)
                CALL CHRDEL (I,EPOS,
     M                       PBUFF1)
                EPOS= EPOS- 3
                XPOS= 999
                IPOS= IPOS- 3
              END IF
C
C             now we are ready to actually try to read the year
              READ (BUFF,PBUFF,ERR=40) YR4
                IF (YR4 .GE. 100) CRDDAT(1)= YR4
 40           CONTINUE
C                
            END IF
          END IF
        END IF
      END IF
C
      GO TO 110
 100  CONTINUE
C       end of file was found
        ENDF= 1
 110  CONTINUE
C
      RETURN
      END
</pre>










